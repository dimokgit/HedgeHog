

// ReSharper disable PossibleNullReferenceException
/*
This code was automatically generated by Daniel Vaughan's metadata generator.
Changes to this file may be lost if regeneration occurs.
http://danielvaughan.orpius.com
*/
using System.Windows;
using System.Windows.Media.Imaging;
using System;
using System.Linq;
using System.Linq.Expressions;


#pragma warning disable 
namespace HedgeHog.Charter.FileMetadata.Metadata
{
    /// <summary>Metadata for File app.config</summary>
    public static class AppConfig    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/app.config", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/app.config"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/app.config")); } }


    }

    /// <summary>Metadata for XAML App.xaml</summary>
    public static class AppXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/App.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/App.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/App.xaml")); } }

            /// <summary>Represents x:Key="Locator"/></summary>
            public static string LocatorKey { get { return "Locator"; } }


    }

    /// <summary>Metadata for File ChartElements</summary>
    public static class ChartElements    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/ChartElements", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/ChartElements"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/ChartElements")); } }


    }

    /// <summary>Metadata for XAML CharterControl.xaml</summary>
    public static class CharterControlXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/CharterControl.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CharterControl.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CharterControl.xaml")); } }

            /// <summary>Represents x:Key="BoolToColorConverter"/></summary>
            public static string BoolToColorConverterKey { get { return "BoolToColorConverter"; } }

            /// <summary>Represents x:Key="BoolToSrtingConverter"/></summary>
            public static string BoolToSrtingConverterKey { get { return "BoolToSrtingConverter"; } }

            /// <summary>Represents x:Key="PassThroughConverter"/></summary>
            public static string PassThroughConverterKey { get { return "PassThroughConverter"; } }

            /// <summary>Represents x:Key="DraggArrowUp"/></summary>
            public static string DraggArrowUpKey { get { return "DraggArrowUp"; } }

            /// <summary>Represents x:Key="DraggArrowDown"/></summary>
            public static string DraggArrowDownKey { get { return "DraggArrowDown"; } }

            /// <summary>Represents x:Key="PlayButtonStyle"/></summary>
            public static string PlayButtonStyleKey { get { return "PlayButtonStyle"; } }


    }

    /// <summary>Metadata for XAML CharterPlainControl.xaml</summary>
    public static class CharterPlainControlXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/CharterPlainControl.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CharterPlainControl.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CharterPlainControl.xaml")); } }


    }

    /// <summary>Metadata for XAML CharterSnapshotControl.xaml</summary>
    public static class CharterSnapshotControlXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/CharterSnapshotControl.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CharterSnapshotControl.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CharterSnapshotControl.xaml")); } }


    }

    /// <summary>Metadata for File CS_4_0.tt</summary>
    public static class CS_4_0Tt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/CS_4_0.tt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CS_4_0.tt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CS_4_0.tt")); } }


    }

    /// <summary>Metadata for XAML CursorH.xaml</summary>
    public static class CursorHXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/CursorH.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CursorH.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CursorH.xaml")); } }


    }

    /// <summary>Metadata for XAML GraggableLine.xaml</summary>
    public static class GraggableLineXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/GraggableLine.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/GraggableLine.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/GraggableLine.xaml")); } }


    }

    /// <summary>Metadata for File MVVMLight.Nuget.Readme.txt</summary>
    public static class MVVMLightNugetReadmeTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/MVVMLight.Nuget.Readme.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/MVVMLight.Nuget.Readme.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/MVVMLight.Nuget.Readme.txt")); } }


    }

    /// <summary>Metadata for File packages.config</summary>
    public static class PackagesConfig    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/packages.config", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/packages.config"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/packages.config")); } }


    }

}


namespace HedgeHog.Charter.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Charter.AttachedProperties"/></summary>
    public static class AttachedPropertiesMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.BuySellRateRemovedEventArgs"/></summary>
    public static class BuySellRateRemovedEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Charter.BuySellRateRemovedEventArgs.UID"/></summary>
        public const string UID = "UID";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.BuySellRateRemovedEventArgs.UID"/></summary>
        public static PropertyPath UIDPath { get { return new PropertyPath("UID"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.BuySellRateAddedEventArgs"/></summary>
    public static class BuySellRateAddedEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Charter.BuySellRateAddedEventArgs.IsBuy"/></summary>
        public const string IsBuy = "IsBuy";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.BuySellRateAddedEventArgs.Rate"/></summary>
        public const string Rate = "Rate";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.BuySellRateAddedEventArgs.IsBuy"/></summary>
        public static PropertyPath IsBuyPath { get { return new PropertyPath("IsBuy"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Charter.BuySellRateAddedEventArgs.Rate"/></summary>
        public static PropertyPath RatePath { get { return new PropertyPath("Rate"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.PlayEventArgs"/></summary>
    public static class PlayEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Charter.PlayEventArgs.Play"/></summary>
        public const string Play = "Play";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.PlayEventArgs.StartDate"/></summary>
        public const string StartDate = "StartDate";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.PlayEventArgs.Delay"/></summary>
        public const string Delay = "Delay";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.PlayEventArgs.Play"/></summary>
        public static PropertyPath PlayPath { get { return new PropertyPath("Play"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Charter.PlayEventArgs.StartDate"/></summary>
        public static PropertyPath StartDatePath { get { return new PropertyPath("StartDate"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Charter.PlayEventArgs.Delay"/></summary>
        public static PropertyPath DelayPath { get { return new PropertyPath("Delay"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.GannAngleOffsetChangedEventArgs"/></summary>
    public static class GannAngleOffsetChangedEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Charter.GannAngleOffsetChangedEventArgs.Offset"/></summary>
        public const string Offset = "Offset";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.GannAngleOffsetChangedEventArgs.Offset"/></summary>
        public static PropertyPath OffsetPath { get { return new PropertyPath("Offset"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.SupportResistanceChangedEventArgs"/></summary>
    public static class SupportResistanceChangedEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Charter.SupportResistanceChangedEventArgs.UID"/></summary>
        public const string UID = "UID";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.SupportResistanceChangedEventArgs.UID"/></summary>
        public static PropertyPath UIDPath { get { return new PropertyPath("UID"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.CorridorPositionChangedEventArgs"/></summary>
    public static class CorridorPositionChangedEventArgsMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.PositionChangedBaseEventArgs<T>"/></summary>
    public static class PositionChangedBaseEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Charter.PositionChangedBaseEventArgs{T}.NewPosition"/></summary>
        public const string NewPosition = "NewPosition";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.PositionChangedBaseEventArgs{T}.OldPosition"/></summary>
        public const string OldPosition = "OldPosition";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.PositionChangedBaseEventArgs{T}.NewPosition"/></summary>
        public static PropertyPath NewPositionPath { get { return new PropertyPath("NewPosition"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Charter.PositionChangedBaseEventArgs{T}.OldPosition"/></summary>
        public static PropertyPath OldPositionPath { get { return new PropertyPath("OldPosition"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.ColoredSegment"/></summary>
    public static class ColoredSegmentMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Charter.ColoredSegment.OnInitialized"/></summary>
        public const string OnInitialized = "OnInitialized";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.ColoredSegment.originalColor"/></summary>
        public const string originalColor = "originalColor";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectedColor"/></summary>
        public const string SelectedColor = "SelectedColor";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.ColoredSegment.SelectedColorProperty"/></summary>
        public const string SelectedColorProperty = "SelectedColorProperty";

        /// <summary>Refers to method <see cref="HedgeHog.Charter.ColoredSegment.OnPropertyChanged"/></summary>
        public const string OnPropertyChanged = "OnPropertyChanged";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.ColoredSegment.MyPropertyProperty"/></summary>
        public const string MyPropertyProperty = "MyPropertyProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectedValue"/></summary>
        public const string SelectedValue = "SelectedValue";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.ColoredSegment.SelectedValueProperty"/></summary>
        public const string SelectedValueProperty = "SelectedValueProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectValue"/></summary>
        public const string SelectValue = "SelectValue";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.ColoredSegment.SelectValueProperty"/></summary>
        public const string SelectValueProperty = "SelectValueProperty";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectedColor"/></summary>
        public static PropertyPath SelectedColorPath { get { return new PropertyPath("SelectedColor"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectedValue"/></summary>
        public static PropertyPath SelectedValuePath { get { return new PropertyPath("SelectedValue"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectValue"/></summary>
        public static PropertyPath SelectValuePath { get { return new PropertyPath("SelectValue"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.CursorH"/></summary>
    public static class CursorHMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.DraggableManager"/></summary>
    public static class DraggableManagerMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Charter.DraggableManager.SetAnchor"/></summary>
        public const string SetAnchor = "SetAnchor";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.GraggableLine"/></summary>
    public static class GraggableLineMetadata
    {
        
    }

}

namespace HedgeHog.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.CharterControlMessage"/></summary>
    public static class CharterControlMessageMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.CharterControl"/></summary>
    public static class CharterControlMetadata
    {
                /// <summary>Metadata for class <see cref="HedgeHog.CharterControl.ColorPalette"/></summary>
        public static class ColorPaletteMetadata
        {
                        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.BackgroundDefault"/></summary>
            public const string BackgroundDefault = "BackgroundDefault";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.BackgroundNotActive"/></summary>
            public const string BackgroundNotActive = "BackgroundNotActive";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.GraphBuy"/></summary>
            public const string GraphBuy = "GraphBuy";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.GraphSell"/></summary>
            public const string GraphSell = "GraphSell";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.LevelBuy"/></summary>
            public const string LevelBuy = "LevelBuy";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.LevelSell"/></summary>
            public const string LevelSell = "LevelSell";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.BackgroundComposite"/></summary>
            public const string BackgroundComposite = "BackgroundComposite";


            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.BackgroundDefault"/></summary>
            public static PropertyPath BackgroundDefaultPath { get { return new PropertyPath("BackgroundDefault"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.BackgroundNotActive"/></summary>
            public static PropertyPath BackgroundNotActivePath { get { return new PropertyPath("BackgroundNotActive"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.GraphBuy"/></summary>
            public static PropertyPath GraphBuyPath { get { return new PropertyPath("GraphBuy"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.GraphSell"/></summary>
            public static PropertyPath GraphSellPath { get { return new PropertyPath("GraphSell"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.LevelBuy"/></summary>
            public static PropertyPath LevelBuyPath { get { return new PropertyPath("LevelBuy"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.LevelSell"/></summary>
            public static PropertyPath LevelSellPath { get { return new PropertyPath("LevelSell"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPalette.BackgroundComposite"/></summary>
            public static PropertyPath BackgroundCompositePath { get { return new PropertyPath("BackgroundComposite"); } }

        }

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.ColorPaletteDefault"/></summary>
        public const string ColorPaletteDefault = "ColorPaletteDefault";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.ColorPaletteList"/></summary>
        public const string ColorPaletteList = "ColorPaletteList";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._ColorPaletteCurrent"/></summary>
        public const string _ColorPaletteCurrent = "_ColorPaletteCurrent";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPaletteCurrent"/></summary>
        public const string ColorPaletteCurrent = "ColorPaletteCurrent";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BackgroundCurrent"/></summary>
        public const string BackgroundCurrent = "BackgroundCurrent";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._tm"/></summary>
        public const string _tm = "_tm";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.tm"/></summary>
        public const string tm = "tm";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GetTime"/></summary>
        public const string GetTime = "GetTime";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetTime"/></summary>
        public const string SetTime = "SetTime";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.TimeProperty"/></summary>
        public const string TimeProperty = "TimeProperty";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GetIsInteractive"/></summary>
        public const string GetIsInteractive = "GetIsInteractive";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetIsInteractive"/></summary>
        public const string SetIsInteractive = "SetIsInteractive";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.IsInteractiveProperty"/></summary>
        public const string IsInteractiveProperty = "IsInteractiveProperty";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GetFriend"/></summary>
        public const string GetFriend = "GetFriend";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetFriend"/></summary>
        public const string SetFriend = "SetFriend";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.FriendProperty"/></summary>
        public const string FriendProperty = "FriendProperty";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsParentHidden"/></summary>
        public const string IsParentHidden = "IsParentHidden";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.IsParentHiddenProperty"/></summary>
        public const string IsParentHiddenProperty = "IsParentHiddenProperty";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._barsPeriod"/></summary>
        public const string _barsPeriod = "_barsPeriod";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BarsPeriod"/></summary>
        public const string BarsPeriod = "BarsPeriod";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._BarsCount"/></summary>
        public const string _BarsCount = "_BarsCount";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BarsCount"/></summary>
        public const string BarsCount = "BarsCount";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._HeaderText"/></summary>
        public const string _HeaderText = "_HeaderText";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.HeaderText"/></summary>
        public const string HeaderText = "HeaderText";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.Header"/></summary>
        public const string Header = "Header";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsActive"/></summary>
        public const string IsActive = "IsActive";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.IsActiveProperty"/></summary>
        public const string IsActiveProperty = "IsActiveProperty";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsSelected"/></summary>
        public const string IsSelected = "IsSelected";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.IsSelectedProperty"/></summary>
        public const string IsSelectedProperty = "IsSelectedProperty";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._IsInPlay"/></summary>
        public const string _IsInPlay = "_IsInPlay";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsInPlay"/></summary>
        public const string IsInPlay = "IsInPlay";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._DelayInSeconds"/></summary>
        public const string _DelayInSeconds = "_DelayInSeconds";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DelayInSeconds"/></summary>
        public const string DelayInSeconds = "DelayInSeconds";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._PlayStartDate"/></summary>
        public const string _PlayStartDate = "_PlayStartDate";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PlayStartDate"/></summary>
        public const string PlayStartDate = "PlayStartDate";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.SuppResMinimumDistance"/></summary>
        public const string SuppResMinimumDistance = "SuppResMinimumDistance";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedTimeX"/></summary>
        public const string animatedTimeX = "animatedTimeX";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedTime0X"/></summary>
        public const string animatedTime0X = "animatedTime0X";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedPriceY"/></summary>
        public const string animatedPriceY = "animatedPriceY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedDataSource"/></summary>
        public const string animatedDataSource = "animatedDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedDataSource1"/></summary>
        public const string animatedDataSource1 = "animatedDataSource1";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedPriceBidY"/></summary>
        public const string animatedPriceBidY = "animatedPriceBidY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedDataSourceBid"/></summary>
        public const string animatedDataSourceBid = "animatedDataSourceBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedPrice1Y"/></summary>
        public const string animatedPrice1Y = "animatedPrice1Y";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVoltTimeX"/></summary>
        public const string animatedVoltTimeX = "animatedVoltTimeX";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVoltValueY"/></summary>
        public const string animatedVoltValueY = "animatedVoltValueY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVoltDataSource"/></summary>
        public const string animatedVoltDataSource = "animatedVoltDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVolt1TimeX"/></summary>
        public const string animatedVolt1TimeX = "animatedVolt1TimeX";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVolt1ValueY"/></summary>
        public const string animatedVolt1ValueY = "animatedVolt1ValueY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVolt1DataSource"/></summary>
        public const string animatedVolt1DataSource = "animatedVolt1DataSource";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._infoBox"/></summary>
        public const string _infoBox = "_infoBox";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.infoBox"/></summary>
        public const string infoBox = "infoBox";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.viewPortContainer"/></summary>
        public const string viewPortContainer = "viewPortContainer";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorHeightMultiplier"/></summary>
        public const string CorridorHeightMultiplier = "CorridorHeightMultiplier";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.PriceBarValue"/></summary>
        public const string PriceBarValue = "PriceBarValue";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceHigh"/></summary>
        public const string GetPriceHigh = "GetPriceHigh";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceLow"/></summary>
        public const string GetPriceLow = "GetPriceLow";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassBuy"/></summary>
        public const string CenterOfMassBuy = "CenterOfMassBuy";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassSell"/></summary>
        public const string CenterOfMassSell = "CenterOfMassSell";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PriceLineGraph"/></summary>
        public const string PriceLineGraph = "PriceLineGraph";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PriceLineGraphBid"/></summary>
        public const string PriceLineGraphBid = "PriceLineGraphBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.priceLineGraphColorAsk"/></summary>
        public const string priceLineGraphColorAsk = "priceLineGraphColorAsk";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.priceLineGraphColorBid"/></summary>
        public const string priceLineGraphColorBid = "priceLineGraphColorBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.priceLineGraphColorBuy"/></summary>
        public const string priceLineGraphColorBuy = "priceLineGraphColorBuy";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.priceLineGraphColorSell"/></summary>
        public const string priceLineGraphColorSell = "priceLineGraphColorSell";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.isBuyOrSell"/></summary>
        public const string isBuyOrSell = "isBuyOrSell";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetPriceLineColor"/></summary>
        public const string SetPriceLineColor = "SetPriceLineColor";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._voltageHigh"/></summary>
        public const string _voltageHigh = "_voltageHigh";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.voltageHigh"/></summary>
        public const string voltageHigh = "voltageHigh";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.VoltageHigh"/></summary>
        public const string VoltageHigh = "VoltageHigh";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._voltageAverage"/></summary>
        public const string _voltageAverage = "_voltageAverage";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.voltageAverage"/></summary>
        public const string voltageAverage = "voltageAverage";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.VoltageAverage"/></summary>
        public const string VoltageAverage = "VoltageAverage";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineMax"/></summary>
        public const string lineMax = "lineMax";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMax"/></summary>
        public const string LineMax = "LineMax";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineMaxAvg"/></summary>
        public const string lineMaxAvg = "lineMaxAvg";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMaxAvg"/></summary>
        public const string LineMaxAvg = "LineMaxAvg";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineMin"/></summary>
        public const string lineMin = "lineMin";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMin"/></summary>
        public const string LineMin = "LineMin";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineMinAvg"/></summary>
        public const string lineMinAvg = "lineMinAvg";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMinAvg"/></summary>
        public const string LineMinAvg = "LineMinAvg";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._DoShowCenterOfMass"/></summary>
        public const string _DoShowCenterOfMass = "_DoShowCenterOfMass";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DoShowCenterOfMass"/></summary>
        public const string DoShowCenterOfMass = "DoShowCenterOfMass";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.centerOfMassBrush"/></summary>
        public const string centerOfMassBrush = "centerOfMassBrush";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.centerOfMassStrokeThickness"/></summary>
        public const string centerOfMassStrokeThickness = "centerOfMassStrokeThickness";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.centerOfMassStrokeDashArray"/></summary>
        public const string centerOfMassStrokeDashArray = "centerOfMassStrokeDashArray";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CenterOfMassFactory"/></summary>
        public const string CenterOfMassFactory = "CenterOfMassFactory";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._centerOfMassHLineHigh"/></summary>
        public const string _centerOfMassHLineHigh = "_centerOfMassHLineHigh";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.centerOfMassHLineHigh"/></summary>
        public const string centerOfMassHLineHigh = "centerOfMassHLineHigh";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassHLineHigh"/></summary>
        public const string CenterOfMassHLineHigh = "CenterOfMassHLineHigh";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._centerOfMassHLineLow"/></summary>
        public const string _centerOfMassHLineLow = "_centerOfMassHLineLow";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.centerOfMassHLineLow"/></summary>
        public const string centerOfMassHLineLow = "centerOfMassHLineLow";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassHLineLow"/></summary>
        public const string CenterOfMassHLineLow = "CenterOfMassHLineLow";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.magnetPrice"/></summary>
        public const string magnetPrice = "magnetPrice";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.MagnetPrice"/></summary>
        public const string MagnetPrice = "MagnetPrice";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineNetSell"/></summary>
        public const string lineNetSell = "lineNetSell";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineNetSell"/></summary>
        public const string LineNetSell = "LineNetSell";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineNetBuy"/></summary>
        public const string lineNetBuy = "lineNetBuy";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineNetBuy"/></summary>
        public const string LineNetBuy = "LineNetBuy";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineAvgAsk"/></summary>
        public const string lineAvgAsk = "lineAvgAsk";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineAvgAsk"/></summary>
        public const string LineAvgAsk = "LineAvgAsk";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineAvgBid"/></summary>
        public const string lineAvgBid = "lineAvgBid";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineAvgBid"/></summary>
        public const string LineAvgBid = "LineAvgBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.showDrags"/></summary>
        public const string showDrags = "showDrags";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ShowDrags"/></summary>
        public const string ShowDrags = "ShowDrags";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.ShowDragBindingFactory"/></summary>
        public const string ShowDragBindingFactory = "ShowDragBindingFactory";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._lineTimeShortDraggablePoint"/></summary>
        public const string _lineTimeShortDraggablePoint = "_lineTimeShortDraggablePoint";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._lineTimeShort"/></summary>
        public const string _lineTimeShort = "_lineTimeShort";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeShort"/></summary>
        public const string LineTimeShort = "LineTimeShort";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._lineTimeShortDraggablePoint_PositionChanged"/></summary>
        public const string _lineTimeShortDraggablePoint_PositionChanged = "_lineTimeShortDraggablePoint_PositionChanged";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._lineTimeMiddleDraggablePoint"/></summary>
        public const string _lineTimeMiddleDraggablePoint = "_lineTimeMiddleDraggablePoint";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._lineTimeMiddle"/></summary>
        public const string _lineTimeMiddle = "_lineTimeMiddle";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeMiddle"/></summary>
        public const string LineTimeMiddle = "LineTimeMiddle";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._lineTimeMiddleDraggablePoint_PositionChanged"/></summary>
        public const string _lineTimeMiddleDraggablePoint_PositionChanged = "_lineTimeMiddleDraggablePoint_PositionChanged";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._lineTimeMax"/></summary>
        public const string _lineTimeMax = "_lineTimeMax";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.lineTimeMax"/></summary>
        public const string lineTimeMax = "lineTimeMax";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeMax"/></summary>
        public const string LineTimeMax = "LineTimeMax";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineTimeMin"/></summary>
        public const string lineTimeMin = "lineTimeMin";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeMin"/></summary>
        public const string LineTimeMin = "LineTimeMin";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineTimeAvg"/></summary>
        public const string lineTimeAvg = "lineTimeAvg";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeAvg"/></summary>
        public const string LineTimeAvg = "LineTimeAvg";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineTimeTakeProfit"/></summary>
        public const string lineTimeTakeProfit = "lineTimeTakeProfit";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeTakeProfit"/></summary>
        public const string LineTimeTakeProfit = "LineTimeTakeProfit";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineTimeTakeProfit1"/></summary>
        public const string lineTimeTakeProfit1 = "lineTimeTakeProfit1";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeTakeProfit1"/></summary>
        public const string LineTimeTakeProfit1 = "LineTimeTakeProfit1";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineTimeTakeProfit2"/></summary>
        public const string lineTimeTakeProfit2 = "lineTimeTakeProfit2";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeTakeProfit2"/></summary>
        public const string LineTimeTakeProfit2 = "LineTimeTakeProfit2";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineTimeTakeProfit3"/></summary>
        public const string lineTimeTakeProfit3 = "lineTimeTakeProfit3";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeTakeProfit3"/></summary>
        public const string LineTimeTakeProfit3 = "LineTimeTakeProfit3";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.gannLine"/></summary>
        public const string gannLine = "gannLine";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannLine"/></summary>
        public const string GannLine = "GannLine";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._trendLinesH"/></summary>
        public const string _trendLinesH = "_trendLinesH";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._trendLinesY"/></summary>
        public const string _trendLinesY = "_trendLinesY";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetTrendLines"/></summary>
        public const string SetTrendLines = "SetTrendLines";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine"/></summary>
        public const string trendLine = "trendLine";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine"/></summary>
        public const string TrendLine = "TrendLine";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine21"/></summary>
        public const string trendLine21 = "trendLine21";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine21"/></summary>
        public const string TrendLine21 = "TrendLine21";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine2"/></summary>
        public const string trendLine2 = "trendLine2";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine2"/></summary>
        public const string TrendLine2 = "TrendLine2";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine02"/></summary>
        public const string trendLine02 = "trendLine02";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine02"/></summary>
        public const string TrendLine02 = "TrendLine02";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine31"/></summary>
        public const string trendLine31 = "trendLine31";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine31"/></summary>
        public const string TrendLine31 = "TrendLine31";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine3"/></summary>
        public const string trendLine3 = "trendLine3";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine3"/></summary>
        public const string TrendLine3 = "TrendLine3";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine03"/></summary>
        public const string trendLine03 = "trendLine03";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine03"/></summary>
        public const string TrendLine03 = "TrendLine03";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._GannAngleOffsetPoint"/></summary>
        public const string _GannAngleOffsetPoint = "_GannAngleOffsetPoint";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAngleOffsetPoint"/></summary>
        public const string GannAngleOffsetPoint = "GannAngleOffsetPoint";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._GannAngleOffsetPoint_PositionChanged"/></summary>
        public const string _GannAngleOffsetPoint_PositionChanged = "_GannAngleOffsetPoint_PositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnGannAngleChanged"/></summary>
        public const string OnGannAngleChanged = "OnGannAngleChanged";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._CorridorStopPointX"/></summary>
        public const string _CorridorStopPointX = "_CorridorStopPointX";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorStopPointX"/></summary>
        public const string CorridorStopPointX = "CorridorStopPointX";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._CorridorStopPointX_GotFocus"/></summary>
        public const string _CorridorStopPointX_GotFocus = "_CorridorStopPointX_GotFocus";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._CorridorStopPointX_PreviewMouseLeftButtonDown"/></summary>
        public const string _CorridorStopPointX_PreviewMouseLeftButtonDown = "_CorridorStopPointX_PreviewMouseLeftButtonDown";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._CorridorStartPointX"/></summary>
        public const string _CorridorStartPointX = "_CorridorStartPointX";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorStartPointX"/></summary>
        public const string CorridorStartPointX = "CorridorStartPointX";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._CorridorStartPointX_GotFocus"/></summary>
        public const string _CorridorStartPointX_GotFocus = "_CorridorStartPointX_GotFocus";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._CorridorStartPointX_PreviewMouseLeftButtonDown"/></summary>
        public const string _CorridorStartPointX_PreviewMouseLeftButtonDown = "_CorridorStartPointX_PreviewMouseLeftButtonDown";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DraggablePoint_MouseLeftButtonDown"/></summary>
        public const string DraggablePoint_MouseLeftButtonDown = "DraggablePoint_MouseLeftButtonDown";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DraggablePoint_KeyDown"/></summary>
        public const string DraggablePoint_KeyDown = "DraggablePoint_KeyDown";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._ActiveDraggablePoint"/></summary>
        public const string _ActiveDraggablePoint = "_ActiveDraggablePoint";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ActiveDraggablePoint"/></summary>
        public const string ActiveDraggablePoint = "ActiveDraggablePoint";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.levelLines"/></summary>
        public const string levelLines = "levelLines";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._plotterScheduler"/></summary>
        public const string _plotterScheduler = "_plotterScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PlotterScheduler"/></summary>
        public const string PlotterScheduler = "PlotterScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DrawLevels"/></summary>
        public const string DrawLevels = "DrawLevels";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.InitVLines{TLine}"/></summary>
        public const string InitVLines = "InitVLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnOtherTimeAdded{TLine}"/></summary>
        public const string OnOtherTimeAdded = "OnOtherTimeAdded";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnOtherTimeRemoved{TLine}"/></summary>
        public const string OnOtherTimeRemoved = "OnOtherTimeRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DrawVertivalLines"/></summary>
        public const string DrawVertivalLines = "DrawVertivalLines";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._newsTimes"/></summary>
        public const string _newsTimes = "_newsTimes";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.newsTimes"/></summary>
        public const string newsTimes = "newsTimes";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.newsVLines"/></summary>
        public const string newsVLines = "newsVLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DrawNewsLines"/></summary>
        public const string DrawNewsLines = "DrawNewsLines";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._TradeTimes"/></summary>
        public const string _TradeTimes = "_TradeTimes";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TradeTimes"/></summary>
        public const string TradeTimes = "TradeTimes";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.TradeTimesVLines"/></summary>
        public const string TradeTimesVLines = "TradeTimesVLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DrawTradeTimes"/></summary>
        public const string DrawTradeTimes = "DrawTradeTimes";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._NYTimes"/></summary>
        public const string _NYTimes = "_NYTimes";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.NYTimes"/></summary>
        public const string NYTimes = "NYTimes";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.NYTimesVLines"/></summary>
        public const string NYTimesVLines = "NYTimesVLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DrawNYTimes"/></summary>
        public const string DrawNYTimes = "DrawNYTimes";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._LondonTimes"/></summary>
        public const string _LindonTimes = "_LindonTimes";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LondonTimes"/></summary>
        public const string LindonTimes = "LindonTimes";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.LondonTimesVLines"/></summary>
        public const string LindonTimesVLines = "LindonTimesVLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DrawLindonTimes"/></summary>
        public const string DrawLindonTimes = "DrawLindonTimes";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._TokyoTimes"/></summary>
        public const string _TokyoTimes = "_TokyoTimes";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TokyoTimes"/></summary>
        public const string TokyoTimes = "TokyoTimes";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.TokyoTimesVLines"/></summary>
        public const string TokyoTimesVLines = "TokyoTimesVLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DrawTokyoTimes"/></summary>
        public const string DrawTokyoTimes = "DrawTokyoTimes";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.Corridors_Closing"/></summary>
        public const string Corridors_Closing = "Corridors_Closing";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.ds"/></summary>
        public const string ds = "ds";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.dsVoltsPoly"/></summary>
        public const string dsVoltsPoly = "dsVoltsPoly";

        /// <summary>Metadata for class <see cref="HedgeHog.CharterControl.DraggablePointInfo"/></summary>
        public static class DraggablePointInfoMetadata
        {
                        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DraggablePointInfo.DataContext"/></summary>
            public const string DataContext = "DataContext";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DraggablePointInfo.DraggablePoint"/></summary>
            public const string DraggablePoint = "DraggablePoint";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DraggablePointInfo.MouseClickObserver"/></summary>
            public const string MouseClickObserver = "MouseClickObserver";


            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DraggablePointInfo.DataContext"/></summary>
            public static PropertyPath DataContextPath { get { return new PropertyPath("DataContext"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DraggablePointInfo.DraggablePoint"/></summary>
            public static PropertyPath DraggablePointPath { get { return new PropertyPath("DraggablePoint"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DraggablePointInfo.MouseClickObserver"/></summary>
            public static PropertyPath MouseClickObserverPath { get { return new PropertyPath("MouseClickObserver"); } }

        }

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.BuyRates"/></summary>
        public const string BuyRates = "BuyRates";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.SellRates"/></summary>
        public const string SellRates = "SellRates";

        /// <summary>Metadata for class <see cref="HedgeHog.CharterControl.BuySellLevel"/></summary>
        public static class BuySellLevelMetadata
        {
                        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.DataContext"/></summary>
            public const string DataContext = "DataContext";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.Rate"/></summary>
            public const string Rate = "Rate";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.IsBuy"/></summary>
            public const string IsBuy = "IsBuy";


            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.DataContext"/></summary>
            public static PropertyPath DataContextPath { get { return new PropertyPath("DataContext"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.Rate"/></summary>
            public static PropertyPath RatePath { get { return new PropertyPath("Rate"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.IsBuy"/></summary>
            public static PropertyPath IsBuyPath { get { return new PropertyPath("IsBuy"); } }

        }

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.StrokeArrayForTrades"/></summary>
        public const string StrokeArrayForTrades = "StrokeArrayForTrades";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.tradeLines"/></summary>
        public const string tradeLines = "tradeLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetTradeLines"/></summary>
        public const string SetTradeLines = "SetTradeLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetBuyRates"/></summary>
        public const string SetBuyRates = "SetBuyRates";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetSellRates"/></summary>
        public const string SetSellRates = "SetSellRates";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CleanSuppResRates"/></summary>
        public const string CleanSuppResRates = "CleanSuppResRates";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._isShiftDown"/></summary>
        public const string _isShiftDown = "_isShiftDown";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._dragPointPositionChanged"/></summary>
        public const string _dragPointPositionChanged = "_dragPointPositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetBuySellRates"/></summary>
        public const string SetBuySellRates = "SetBuySellRates";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.TriggerCanTrade"/></summary>
        public const string TriggerCanTrade = "TriggerCanTrade";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.plotter_MouseDown"/></summary>
        public const string plotter_MouseDown = "plotter_MouseDown";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CreatePointY"/></summary>
        public const string CreatePointY = "CreatePointY";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.slope"/></summary>
        public const string slope = "slope";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.y2"/></summary>
        public const string y2 = "y2";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.FibLevels"/></summary>
        public const string FibLevels = "FibLevels";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.GannAngles"/></summary>
        public const string GannAngles = "GannAngles";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.LineToPoint"/></summary>
        public const string LineToPoint = "LineToPoint";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._tradeLineStartDraggablePoint"/></summary>
        public const string _tradeLineStartDraggablePoint = "_tradeLineStartDraggablePoint";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._tradeLineStopDraggablePoint"/></summary>
        public const string _tradeLineStopDraggablePoint = "_tradeLineStopDraggablePoint";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.ResetTradeLinePosition"/></summary>
        public const string ResetTradeLinePosition = "ResetTradeLinePosition";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TradeLineSlope"/></summary>
        public const string TradeLineSlope = "TradeLineSlope";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TradeLineEndPoint"/></summary>
        public const string TradeLineEndPoint = "TradeLineEndPoint";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._tradeLineStartPosition"/></summary>
        public const string _tradeLineStartPosition = "_tradeLineStartPosition";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TradeLineStartPosition"/></summary>
        public const string TradeLineStartPosition = "TradeLineStartPosition";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._tradeLineStopPosition"/></summary>
        public const string _tradeLineStopPosition = "_tradeLineStopPosition";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TradeLineStopPosition"/></summary>
        public const string TradeLineStopPosition = "TradeLineStopPosition";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._shortWaveVerticalRange"/></summary>
        public const string _shortWaveVerticalRange = "_shortWaveVerticalRange";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._tradingHorisontalRange"/></summary>
        public const string _tradingHorisontalRange = "_tradingHorisontalRange";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GetDifference"/></summary>
        public const string GetDifference = "GetDifference";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CreateCurrencyDataSource"/></summary>
        public const string CreateCurrencyDataSource = "CreateCurrencyDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._DoShowTradingLine"/></summary>
        public const string _DoShowTradingLine = "_DoShowTradingLine";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DoShowTradingLine"/></summary>
        public const string DoShowTradingLine = "DoShowTradingLine";

        /// <summary>Metadata for class <see cref="HedgeHog.CharterControl.SegmentEx"/></summary>
        public static class SegmentExMetadata
        {
                        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SegmentEx.OnPropertyChanged"/></summary>
            public const string OnPropertyChanged = "OnPropertyChanged";

            /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SegmentEx.RaiseEndPositionChanged"/></summary>
            public const string RaiseEndPositionChanged = "RaiseEndPositionChanged";


        }

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.RaiseTrendLineDraw"/></summary>
        public const string RaiseTrendLineDraw = "RaiseTrendLineDraw";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.RaiseTradeLineChanged"/></summary>
        public const string RaiseTradeLineChanged = "RaiseTradeLineChanged";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._gannAnglesCount"/></summary>
        public const string _gannAnglesCount = "_gannAnglesCount";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAnglesCount"/></summary>
        public const string GannAnglesCount = "GannAnglesCount";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._GannAngle1x1Index"/></summary>
        public const string _GannAngle1x1Index = "_GannAngle1x1Index";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAngle1x1Index"/></summary>
        public const string GannAngle1x1Index = "GannAngle1x1Index";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.InsertGannLines"/></summary>
        public const string InsertGannLines = "InsertGannLines";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._DoShowFibLines"/></summary>
        public const string _DoShowFibLines = "_DoShowFibLines";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DoShowFibLines"/></summary>
        public const string DoShowFibLines = "DoShowFibLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.InsertFibLines"/></summary>
        public const string InsertFibLines = "InsertFibLines";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PipSize"/></summary>
        public const string PipSize = "PipSize";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GuessPipSize"/></summary>
        public const string GuessPipSize = "GuessPipSize";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.plotter_PreviewKeyDown"/></summary>
        public const string plotter_PreviewKeyDown = "plotter_PreviewKeyDown";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.AdjustDraggablePointByPip"/></summary>
        public const string AdjustDraggablePointByPip = "AdjustDraggablePointByPip";

        /// <summary>Metadata for class <see cref="HedgeHog.CharterControl.PlotterKeyDownEventArgs"/></summary>
        public static class PlotterKeyDownEventArgsMetadata
        {
                        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PlotterKeyDownEventArgs.Key"/></summary>
            public const string Key = "Key";


            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PlotterKeyDownEventArgs.Key"/></summary>
            public static PropertyPath KeyPath { get { return new PropertyPath("Key"); } }

        }

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.RaisePlotterKeyDown"/></summary>
        public const string RaisePlotterKeyDown = "RaisePlotterKeyDown";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.plotter_KeyDown"/></summary>
        public const string plotter_KeyDown = "plotter_KeyDown";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.CorridorStopPositionOld"/></summary>
        public const string CorridorStopPositionOld = "CorridorStopPositionOld";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.CorridorStartPositionOld"/></summary>
        public const string CorridorStartPositionOld = "CorridorStartPositionOld";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GetPriceStartDate"/></summary>
        public const string GetPriceStartDate = "GetPriceStartDate";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GetPriceStartDateContinuous"/></summary>
        public const string GetPriceStartDateContinuous = "GetPriceStartDateContinuous";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.corridorStartDateScheduler"/></summary>
        public const string corridorStartDateScheduler = "corridorStartDateScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CorridorStopPointX_IsMouseCapturedChanged"/></summary>
        public const string CorridorStopPointX_IsMouseCapturedChanged = "CorridorStopPointX_IsMouseCapturedChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CorridorStopPointX_PositionChanged"/></summary>
        public const string CorridorStopPointX_PositionChanged = "CorridorStopPointX_PositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CorridorStartPointX_IsMouseCapturedChanged"/></summary>
        public const string CorridorStartPointX_IsMouseCapturedChanged = "CorridorStartPointX_IsMouseCapturedChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CorridorStartPointX_PositionChanged"/></summary>
        public const string CorridorStartPointX_PositionChanged = "CorridorStartPointX_PositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.RaiseShowChart"/></summary>
        public const string RaiseShowChart = "RaiseShowChart";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnBuySellRemoved"/></summary>
        public const string OnBuySellRemoved = "OnBuySellRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnBuySellAdded"/></summary>
        public const string OnBuySellAdded = "OnBuySellAdded";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnPlay"/></summary>
        public const string OnPlay = "OnPlay";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnCorridorStopPositionChanged"/></summary>
        public const string OnCorridorStopPositionChanged = "OnCorridorStopPositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnCorridorStartPositionChanged"/></summary>
        public const string OnCorridorStartPositionChanged = "OnCorridorStartPositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnSupportResistanceChanged"/></summary>
        public const string OnSupportResistanceChanged = "OnSupportResistanceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetTradingRange"/></summary>
        public const string SetTradingRange = "SetTradingRange";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.FitToView"/></summary>
        public const string FitToView = "FitToView";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.inRendering"/></summary>
        public const string inRendering = "inRendering";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.IsPlotterInitialised"/></summary>
        public const string IsPlotterInitialised = "IsPlotterInitialised";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.AddTicks"/></summary>
        public const string AddTicks = "AddTicks";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._SetLastPointSubjectLocker"/></summary>
        public const string _SetLastPointSubjectLocker = "_SetLastPointSubjectLocker";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._SetLastPointSubject"/></summary>
        public const string _SetLastPointSubject = "_SetLastPointSubject";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.SetLastPointSubject"/></summary>
        public const string SetLastPointSubject = "SetLastPointSubject";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetLastPoint"/></summary>
        public const string SetLastPoint = "SetLastPoint";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._SetLastPoint"/></summary>
        public const string _SetLastPoint = "_SetLastPoint";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetPoint"/></summary>
        public const string SetPoint = "SetPoint";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.hasGannAnglesFilter"/></summary>
        public const string hasGannAnglesFilter = "hasGannAnglesFilter";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._voltGraph"/></summary>
        public const string _voltGraph = "_voltGraph";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._roundTo"/></summary>
        public const string _roundTo = "_roundTo";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetGannAngles"/></summary>
        public const string SetGannAngles = "SetGannAngles";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetFibLevels"/></summary>
        public const string SetFibLevels = "SetFibLevels";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.ReAdjustXY"/></summary>
        public const string ReAdjustXY = "ReAdjustXY";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.ConvertToDateTime"/></summary>
        public const string ConvertToDateTime = "ConvertToDateTime";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.ConvertToDouble"/></summary>
        public const string ConvertToDouble = "ConvertToDouble";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.SelectedGannAngleIndex"/></summary>
        public const string SelectedGannAngleIndex = "SelectedGannAngleIndex";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceMA"/></summary>
        public const string GetPriceMA = "GetPriceMA";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CalculateLastPrice"/></summary>
        public const string CalculateLastPrice = "CalculateLastPrice";


        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ColorPaletteCurrent"/></summary>
        public static PropertyPath ColorPaletteCurrentPath { get { return new PropertyPath("ColorPaletteCurrent"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BackgroundCurrent"/></summary>
        public static PropertyPath BackgroundCurrentPath { get { return new PropertyPath("BackgroundCurrent"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.tm"/></summary>
        public static PropertyPath tmPath { get { return new PropertyPath("tm"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsParentHidden"/></summary>
        public static PropertyPath IsParentHiddenPath { get { return new PropertyPath("IsParentHidden"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BarsPeriod"/></summary>
        public static PropertyPath BarsPeriodPath { get { return new PropertyPath("BarsPeriod"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BarsCount"/></summary>
        public static PropertyPath BarsCountPath { get { return new PropertyPath("BarsCount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.HeaderText"/></summary>
        public static PropertyPath HeaderTextPath { get { return new PropertyPath("HeaderText"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.Header"/></summary>
        public static PropertyPath HeaderPath { get { return new PropertyPath("Header"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsActive"/></summary>
        public static PropertyPath IsActivePath { get { return new PropertyPath("IsActive"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsSelected"/></summary>
        public static PropertyPath IsSelectedPath { get { return new PropertyPath("IsSelected"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsInPlay"/></summary>
        public static PropertyPath IsInPlayPath { get { return new PropertyPath("IsInPlay"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DelayInSeconds"/></summary>
        public static PropertyPath DelayInSecondsPath { get { return new PropertyPath("DelayInSeconds"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PlayStartDate"/></summary>
        public static PropertyPath PlayStartDatePath { get { return new PropertyPath("PlayStartDate"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.SuppResMinimumDistance"/></summary>
        public static PropertyPath SuppResMinimumDistancePath { get { return new PropertyPath("SuppResMinimumDistance"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.infoBox"/></summary>
        public static PropertyPath infoBoxPath { get { return new PropertyPath("infoBox"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorHeightMultiplier"/></summary>
        public static PropertyPath CorridorHeightMultiplierPath { get { return new PropertyPath("CorridorHeightMultiplier"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceHigh"/></summary>
        public static PropertyPath GetPriceHighPath { get { return new PropertyPath("GetPriceHigh"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceLow"/></summary>
        public static PropertyPath GetPriceLowPath { get { return new PropertyPath("GetPriceLow"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassBuy"/></summary>
        public static PropertyPath CenterOfMassBuyPath { get { return new PropertyPath("CenterOfMassBuy"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassSell"/></summary>
        public static PropertyPath CenterOfMassSellPath { get { return new PropertyPath("CenterOfMassSell"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PriceLineGraph"/></summary>
        public static PropertyPath PriceLineGraphPath { get { return new PropertyPath("PriceLineGraph"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PriceLineGraphBid"/></summary>
        public static PropertyPath PriceLineGraphBidPath { get { return new PropertyPath("PriceLineGraphBid"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.voltageHigh"/></summary>
        public static PropertyPath voltageHighPath { get { return new PropertyPath("voltageHigh"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.VoltageHigh"/></summary>
        public static PropertyPath VoltageHighPath { get { return new PropertyPath("VoltageHigh"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.voltageAverage"/></summary>
        public static PropertyPath voltageAveragePath { get { return new PropertyPath("voltageAverage"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.VoltageAverage"/></summary>
        public static PropertyPath VoltageAveragePath { get { return new PropertyPath("VoltageAverage"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMax"/></summary>
        public static PropertyPath LineMaxPath { get { return new PropertyPath("LineMax"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMaxAvg"/></summary>
        public static PropertyPath LineMaxAvgPath { get { return new PropertyPath("LineMaxAvg"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMin"/></summary>
        public static PropertyPath LineMinPath { get { return new PropertyPath("LineMin"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMinAvg"/></summary>
        public static PropertyPath LineMinAvgPath { get { return new PropertyPath("LineMinAvg"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DoShowCenterOfMass"/></summary>
        public static PropertyPath DoShowCenterOfMassPath { get { return new PropertyPath("DoShowCenterOfMass"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.centerOfMassHLineHigh"/></summary>
        public static PropertyPath centerOfMassHLineHighPath { get { return new PropertyPath("centerOfMassHLineHigh"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassHLineHigh"/></summary>
        public static PropertyPath CenterOfMassHLineHighPath { get { return new PropertyPath("CenterOfMassHLineHigh"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.centerOfMassHLineLow"/></summary>
        public static PropertyPath centerOfMassHLineLowPath { get { return new PropertyPath("centerOfMassHLineLow"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassHLineLow"/></summary>
        public static PropertyPath CenterOfMassHLineLowPath { get { return new PropertyPath("CenterOfMassHLineLow"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.MagnetPrice"/></summary>
        public static PropertyPath MagnetPricePath { get { return new PropertyPath("MagnetPrice"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineNetSell"/></summary>
        public static PropertyPath LineNetSellPath { get { return new PropertyPath("LineNetSell"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineNetBuy"/></summary>
        public static PropertyPath LineNetBuyPath { get { return new PropertyPath("LineNetBuy"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineAvgAsk"/></summary>
        public static PropertyPath LineAvgAskPath { get { return new PropertyPath("LineAvgAsk"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineAvgBid"/></summary>
        public static PropertyPath LineAvgBidPath { get { return new PropertyPath("LineAvgBid"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ShowDrags"/></summary>
        public static PropertyPath ShowDragsPath { get { return new PropertyPath("ShowDrags"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeShort"/></summary>
        public static PropertyPath LineTimeShortPath { get { return new PropertyPath("LineTimeShort"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeMiddle"/></summary>
        public static PropertyPath LineTimeMiddlePath { get { return new PropertyPath("LineTimeMiddle"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.lineTimeMax"/></summary>
        public static PropertyPath lineTimeMaxPath { get { return new PropertyPath("lineTimeMax"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeMax"/></summary>
        public static PropertyPath LineTimeMaxPath { get { return new PropertyPath("LineTimeMax"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeMin"/></summary>
        public static PropertyPath LineTimeMinPath { get { return new PropertyPath("LineTimeMin"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeAvg"/></summary>
        public static PropertyPath LineTimeAvgPath { get { return new PropertyPath("LineTimeAvg"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeTakeProfit"/></summary>
        public static PropertyPath LineTimeTakeProfitPath { get { return new PropertyPath("LineTimeTakeProfit"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeTakeProfit1"/></summary>
        public static PropertyPath LineTimeTakeProfit1Path { get { return new PropertyPath("LineTimeTakeProfit1"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeTakeProfit2"/></summary>
        public static PropertyPath LineTimeTakeProfit2Path { get { return new PropertyPath("LineTimeTakeProfit2"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeTakeProfit3"/></summary>
        public static PropertyPath LineTimeTakeProfit3Path { get { return new PropertyPath("LineTimeTakeProfit3"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannLine"/></summary>
        public static PropertyPath GannLinePath { get { return new PropertyPath("GannLine"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine"/></summary>
        public static PropertyPath TrendLinePath { get { return new PropertyPath("TrendLine"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine21"/></summary>
        public static PropertyPath TrendLine21Path { get { return new PropertyPath("TrendLine21"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine2"/></summary>
        public static PropertyPath TrendLine2Path { get { return new PropertyPath("TrendLine2"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine02"/></summary>
        public static PropertyPath TrendLine02Path { get { return new PropertyPath("TrendLine02"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine31"/></summary>
        public static PropertyPath TrendLine31Path { get { return new PropertyPath("TrendLine31"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine3"/></summary>
        public static PropertyPath TrendLine3Path { get { return new PropertyPath("TrendLine3"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine03"/></summary>
        public static PropertyPath TrendLine03Path { get { return new PropertyPath("TrendLine03"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAngleOffsetPoint"/></summary>
        public static PropertyPath GannAngleOffsetPointPath { get { return new PropertyPath("GannAngleOffsetPoint"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorStopPointX"/></summary>
        public static PropertyPath CorridorStopPointXPath { get { return new PropertyPath("CorridorStopPointX"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorStartPointX"/></summary>
        public static PropertyPath CorridorStartPointXPath { get { return new PropertyPath("CorridorStartPointX"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ActiveDraggablePoint"/></summary>
        public static PropertyPath ActiveDraggablePointPath { get { return new PropertyPath("ActiveDraggablePoint"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PlotterScheduler"/></summary>
        public static PropertyPath PlotterSchedulerPath { get { return new PropertyPath("PlotterScheduler"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.newsTimes"/></summary>
        public static PropertyPath newsTimesPath { get { return new PropertyPath("newsTimes"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TradeTimes"/></summary>
        public static PropertyPath TradeTimesPath { get { return new PropertyPath("TradeTimes"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.NYTimes"/></summary>
        public static PropertyPath NYTimesPath { get { return new PropertyPath("NYTimes"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LondonTimes"/></summary>
        public static PropertyPath LindonTimesPath { get { return new PropertyPath("LindonTimes"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TokyoTimes"/></summary>
        public static PropertyPath TokyoTimesPath { get { return new PropertyPath("TokyoTimes"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TradeLineSlope"/></summary>
        public static PropertyPath TradeLineSlopePath { get { return new PropertyPath("TradeLineSlope"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TradeLineEndPoint"/></summary>
        public static PropertyPath TradeLineEndPointPath { get { return new PropertyPath("TradeLineEndPoint"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TradeLineStartPosition"/></summary>
        public static PropertyPath TradeLineStartPositionPath { get { return new PropertyPath("TradeLineStartPosition"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TradeLineStopPosition"/></summary>
        public static PropertyPath TradeLineStopPositionPath { get { return new PropertyPath("TradeLineStopPosition"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DoShowTradingLine"/></summary>
        public static PropertyPath DoShowTradingLinePath { get { return new PropertyPath("DoShowTradingLine"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAnglesCount"/></summary>
        public static PropertyPath GannAnglesCountPath { get { return new PropertyPath("GannAnglesCount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAngle1x1Index"/></summary>
        public static PropertyPath GannAngle1x1IndexPath { get { return new PropertyPath("GannAngle1x1Index"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DoShowFibLines"/></summary>
        public static PropertyPath DoShowFibLinesPath { get { return new PropertyPath("DoShowFibLines"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PipSize"/></summary>
        public static PropertyPath PipSizePath { get { return new PropertyPath("PipSize"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.SetLastPointSubject"/></summary>
        public static PropertyPath SetLastPointSubjectPath { get { return new PropertyPath("SetLastPointSubject"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.SelectedGannAngleIndex"/></summary>
        public static PropertyPath SelectedGannAngleIndexPath { get { return new PropertyPath("SelectedGannAngleIndex"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceMA"/></summary>
        public static PropertyPath GetPriceMAPath { get { return new PropertyPath("GetPriceMA"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CalculateLastPrice"/></summary>
        public static PropertyPath CalculateLastPricePath { get { return new PropertyPath("CalculateLastPrice"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.CharterPlainControl"/></summary>
    public static class CharterPlainControlMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl._newsEventComparicon"/></summary>
        public const string _newsEventComparicon = "_newsEventComparicon";

        /// <summary>Refers to method <see cref="HedgeHog.CharterPlainControl.ReadNewsEventsHistoryFromDB"/></summary>
        public const string ReadNewsEventsHistoryFromDB = "ReadNewsEventsHistoryFromDB";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl._NewsHistoryCurrent"/></summary>
        public const string _NewsHistoryCurrent = "_NewsHistoryCurrent";

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.NewsHistoryCurrent"/></summary>
        public const string NewsHistoryCurrent = "NewsHistoryCurrent";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl._newsEventHistory"/></summary>
        public const string _newsEventHistory = "_newsEventHistory";

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.NewsEventHistory"/></summary>
        public const string NewsEventHistory = "NewsEventHistory";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl._BarPeriod"/></summary>
        public const string _BarPeriod = "_BarPeriod";

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.BarPeriod"/></summary>
        public const string BarPeriod = "BarPeriod";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl._DateStart"/></summary>
        public const string _DateStart = "_DateStart";

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.DateStart"/></summary>
        public const string DateStart = "DateStart";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl._DateLengthText"/></summary>
        public const string _DateLengthText = "_DateLengthText";

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.DateLengthText"/></summary>
        public const string DateLengthText = "DateLengthText";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl._DateLength"/></summary>
        public const string _DateLength = "_DateLength";

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.DateLength"/></summary>
        public const string DateLength = "DateLength";

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.IsPlotterInitialised"/></summary>
        public const string IsPlotterInitialised = "IsPlotterInitialised";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.priceLineGraphColorAsk"/></summary>
        public const string priceLineGraphColorAsk = "priceLineGraphColorAsk";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.priceLineGraphColorBid"/></summary>
        public const string priceLineGraphColorBid = "priceLineGraphColorBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.animatedTimeX"/></summary>
        public const string animatedTimeX = "animatedTimeX";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.animatedTime0X"/></summary>
        public const string animatedTime0X = "animatedTime0X";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.animatedPrice1Y"/></summary>
        public const string animatedPrice1Y = "animatedPrice1Y";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.animatedPriceBidY"/></summary>
        public const string animatedPriceBidY = "animatedPriceBidY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.animatedDataSourceBid"/></summary>
        public const string animatedDataSourceBid = "animatedDataSourceBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.animatedPriceY"/></summary>
        public const string animatedPriceY = "animatedPriceY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.animatedDataSource"/></summary>
        public const string animatedDataSource = "animatedDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.inRendering"/></summary>
        public const string inRendering = "inRendering";

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.PriceLineGraph"/></summary>
        public const string PriceLineGraph = "PriceLineGraph";

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.PriceLineGraphBid"/></summary>
        public const string PriceLineGraphBid = "PriceLineGraphBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterPlainControl.otherVLines"/></summary>
        public const string otherVLines = "otherVLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterPlainControl.DrawVertivalLines"/></summary>
        public const string DrawVertivalLines = "DrawVertivalLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterPlainControl.AddTicks"/></summary>
        public const string AddTicks = "AddTicks";

        /// <summary>Refers to method <see cref="HedgeHog.CharterPlainControl.CreateCurrencyDataSource"/></summary>
        public const string CreateCurrencyDataSource = "CreateCurrencyDataSource";

        /// <summary>Refers to method <see cref="HedgeHog.CharterPlainControl.GetPriceStartDateContinuous"/></summary>
        public const string GetPriceStartDateContinuous = "GetPriceStartDateContinuous";

        /// <summary>Refers to method <see cref="HedgeHog.CharterPlainControl.ReAdjustXY"/></summary>
        public const string ReAdjustXY = "ReAdjustXY";

        /// <summary>Refers to method <see cref="HedgeHog.CharterPlainControl.GetDifference"/></summary>
        public const string GetDifference = "GetDifference";

        /// <summary>Refers to method <see cref="HedgeHog.CharterPlainControl.FitToView"/></summary>
        public const string FitToView = "FitToView";

        /// <summary>Refers to method <see cref="HedgeHog.CharterPlainControl.plotter_KeyDown"/></summary>
        public const string plotter_KeyDown = "plotter_KeyDown";


        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.NewsHistoryCurrent"/></summary>
        public static PropertyPath NewsHistoryCurrentPath { get { return new PropertyPath("NewsHistoryCurrent"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.NewsEventHistory"/></summary>
        public static PropertyPath NewsEventHistoryPath { get { return new PropertyPath("NewsEventHistory"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.BarPeriod"/></summary>
        public static PropertyPath BarPeriodPath { get { return new PropertyPath("BarPeriod"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.DateStart"/></summary>
        public static PropertyPath DateStartPath { get { return new PropertyPath("DateStart"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.DateLengthText"/></summary>
        public static PropertyPath DateLengthTextPath { get { return new PropertyPath("DateLengthText"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.DateLength"/></summary>
        public static PropertyPath DateLengthPath { get { return new PropertyPath("DateLength"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.IsPlotterInitialised"/></summary>
        public static PropertyPath IsPlotterInitialisedPath { get { return new PropertyPath("IsPlotterInitialised"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.PriceLineGraph"/></summary>
        public static PropertyPath PriceLineGraphPath { get { return new PropertyPath("PriceLineGraph"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterPlainControl.PriceLineGraphBid"/></summary>
        public static PropertyPath PriceLineGraphBidPath { get { return new PropertyPath("PriceLineGraphBid"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.DatePoint"/></summary>
    public static class DatePointMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.DatePoint.X"/></summary>
        public const string X = "X";

        /// <summary>Refers to property <see cref="HedgeHog.DatePoint.Y"/></summary>
        public const string Y = "Y";


        /// <summary>Refers to property <see cref="HedgeHog.DatePoint.X"/></summary>
        public static PropertyPath XPath { get { return new PropertyPath("X"); } }

        /// <summary>Refers to property <see cref="HedgeHog.DatePoint.Y"/></summary>
        public static PropertyPath YPath { get { return new PropertyPath("Y"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.CharterSnapshotControl"/></summary>
    public static class CharterSnapshotControlMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._newsEventComparicon"/></summary>
        public const string _newsEventComparicon = "_newsEventComparicon";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.ReadNewsEventsHistoryFromDB"/></summary>
        public const string ReadNewsEventsHistoryFromDB = "ReadNewsEventsHistoryFromDB";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._NewsHistoryCurrent"/></summary>
        public const string _NewsHistoryCurrent = "_NewsHistoryCurrent";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.NewsHistoryCurrent"/></summary>
        public const string NewsHistoryCurrent = "NewsHistoryCurrent";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._newsEventHistory"/></summary>
        public const string _newsEventHistory = "_newsEventHistory";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.NewsEventHistory"/></summary>
        public const string NewsEventHistory = "NewsEventHistory";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._BarPeriod"/></summary>
        public const string _BarPeriod = "_BarPeriod";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.BarPeriod"/></summary>
        public const string BarPeriod = "BarPeriod";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._DateStart"/></summary>
        public const string _DateStart = "_DateStart";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.DateStart"/></summary>
        public const string DateStart = "DateStart";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._DateLengthText"/></summary>
        public const string _DateLengthText = "_DateLengthText";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.DateLengthText"/></summary>
        public const string DateLengthText = "DateLengthText";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._DateLength"/></summary>
        public const string _DateLength = "_DateLength";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.DateLength"/></summary>
        public const string DateLength = "DateLength";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._IsContinuous"/></summary>
        public const string _IsContinuous = "_IsContinuous";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.IsContinuous"/></summary>
        public const string IsContinuous = "IsContinuous";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._NewsEvents"/></summary>
        public const string _NewsEvents = "_NewsEvents";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.NewsEvents"/></summary>
        public const string NewsEvents = "NewsEvents";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._pairs"/></summary>
        public const string _pairs = "_pairs";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.Pairs"/></summary>
        public const string Pairs = "Pairs";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._PairCurrent"/></summary>
        public const string _PairCurrent = "_PairCurrent";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.PairCurrent"/></summary>
        public const string PairCurrent = "PairCurrent";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._NewsEventCurrent"/></summary>
        public const string _NewsEventCurrent = "_NewsEventCurrent";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.NewsEventCurrent"/></summary>
        public const string NewsEventCurrent = "NewsEventCurrent";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._newsEventComparer"/></summary>
        public const string _newsEventComparer = "_newsEventComparer";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl._ShowCommand"/></summary>
        public const string _ShowCommand = "_ShowCommand";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.ShowCommand"/></summary>
        public const string ShowCommand = "ShowCommand";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.Show"/></summary>
        public const string Show = "Show";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.IsPlotterInitialised"/></summary>
        public const string IsPlotterInitialised = "IsPlotterInitialised";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.priceLineGraphColorAsk"/></summary>
        public const string priceLineGraphColorAsk = "priceLineGraphColorAsk";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.priceLineGraphColorBid"/></summary>
        public const string priceLineGraphColorBid = "priceLineGraphColorBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.animatedTimeX"/></summary>
        public const string animatedTimeX = "animatedTimeX";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.animatedTime0X"/></summary>
        public const string animatedTime0X = "animatedTime0X";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.animatedPrice1Y"/></summary>
        public const string animatedPrice1Y = "animatedPrice1Y";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.animatedPriceBidY"/></summary>
        public const string animatedPriceBidY = "animatedPriceBidY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.animatedDataSourceBid"/></summary>
        public const string animatedDataSourceBid = "animatedDataSourceBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.animatedPriceY"/></summary>
        public const string animatedPriceY = "animatedPriceY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.animatedDataSource"/></summary>
        public const string animatedDataSource = "animatedDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.inRendering"/></summary>
        public const string inRendering = "inRendering";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.PriceLineGraph"/></summary>
        public const string PriceLineGraph = "PriceLineGraph";

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.PriceLineGraphBid"/></summary>
        public const string PriceLineGraphBid = "PriceLineGraphBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterSnapshotControl.otherVLines"/></summary>
        public const string otherVLines = "otherVLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.DrawVertivalLines"/></summary>
        public const string DrawVertivalLines = "DrawVertivalLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.AddTicks"/></summary>
        public const string AddTicks = "AddTicks";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.CompareNewsEvents"/></summary>
        public const string CompareNewsEvents = "CompareNewsEvents";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.CreateCurrencyDataSource"/></summary>
        public const string CreateCurrencyDataSource = "CreateCurrencyDataSource";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.GetPriceStartDateContinuous"/></summary>
        public const string GetPriceStartDateContinuous = "GetPriceStartDateContinuous";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.ReAdjustXY"/></summary>
        public const string ReAdjustXY = "ReAdjustXY";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.GetDifference"/></summary>
        public const string GetDifference = "GetDifference";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.FitToView"/></summary>
        public const string FitToView = "FitToView";

        /// <summary>Refers to method <see cref="HedgeHog.CharterSnapshotControl.plotter_KeyDown"/></summary>
        public const string plotter_KeyDown = "plotter_KeyDown";


        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.NewsHistoryCurrent"/></summary>
        public static PropertyPath NewsHistoryCurrentPath { get { return new PropertyPath("NewsHistoryCurrent"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.NewsEventHistory"/></summary>
        public static PropertyPath NewsEventHistoryPath { get { return new PropertyPath("NewsEventHistory"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.BarPeriod"/></summary>
        public static PropertyPath BarPeriodPath { get { return new PropertyPath("BarPeriod"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.DateStart"/></summary>
        public static PropertyPath DateStartPath { get { return new PropertyPath("DateStart"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.DateLengthText"/></summary>
        public static PropertyPath DateLengthTextPath { get { return new PropertyPath("DateLengthText"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.DateLength"/></summary>
        public static PropertyPath DateLengthPath { get { return new PropertyPath("DateLength"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.IsContinuous"/></summary>
        public static PropertyPath IsContinuousPath { get { return new PropertyPath("IsContinuous"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.NewsEvents"/></summary>
        public static PropertyPath NewsEventsPath { get { return new PropertyPath("NewsEvents"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.Pairs"/></summary>
        public static PropertyPath PairsPath { get { return new PropertyPath("Pairs"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.PairCurrent"/></summary>
        public static PropertyPath PairCurrentPath { get { return new PropertyPath("PairCurrent"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.NewsEventCurrent"/></summary>
        public static PropertyPath NewsEventCurrentPath { get { return new PropertyPath("NewsEventCurrent"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.ShowCommand"/></summary>
        public static PropertyPath ShowCommandPath { get { return new PropertyPath("ShowCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.IsPlotterInitialised"/></summary>
        public static PropertyPath IsPlotterInitialisedPath { get { return new PropertyPath("IsPlotterInitialised"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.PriceLineGraph"/></summary>
        public static PropertyPath PriceLineGraphPath { get { return new PropertyPath("PriceLineGraph"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterSnapshotControl.PriceLineGraphBid"/></summary>
        public static PropertyPath PriceLineGraphBidPath { get { return new PropertyPath("PriceLineGraphBid"); } }

    }

}

namespace HedgeHog.Charter.FileMetadata.Images.Metadata
{
    /// <summary>Metadata for File DownArrow-32-Red.png</summary>
    public static class DownArrow32RedPng    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/Images/DownArrow-32-Red.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Images/DownArrow-32-Red.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Images/DownArrow-32-Red.png")); } }


    }

    /// <summary>Metadata for File DownArrow-32.png</summary>
    public static class DownArrow32Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/Images/DownArrow-32.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Images/DownArrow-32.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Images/DownArrow-32.png")); } }


    }

}

namespace HedgeHog.Charter.FileMetadata.Properties.Metadata
{
    /// <summary>Metadata for File Resources.resx</summary>
    public static class ResourcesResx    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/Properties/Resources.resx", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Properties/Resources.resx"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Properties/Resources.resx")); } }


    }

    /// <summary>Metadata for File Settings.settings</summary>
    public static class SettingsSettings    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/Properties/Settings.settings", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Properties/Settings.settings"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Properties/Settings.settings")); } }


    }

}

namespace HedgeHog.Charter.Properties.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Charter.Properties.Resources"/></summary>
    public static class ResourcesMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Charter.Properties.Resources.resourceMan"/></summary>
        public const string resourceMan = "resourceMan";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.Properties.Resources.resourceCulture"/></summary>
        public const string resourceCulture = "resourceCulture";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Resources.ResourceManager"/></summary>
        public const string ResourceManager = "ResourceManager";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Resources.Culture"/></summary>
        public const string Culture = "Culture";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Resources.ResourceManager"/></summary>
        public static PropertyPath ResourceManagerPath { get { return new PropertyPath("ResourceManager"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Resources.Culture"/></summary>
        public static PropertyPath CulturePath { get { return new PropertyPath("Culture"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.Properties.Settings"/></summary>
    public static class SettingsMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Charter.Properties.Settings.defaultInstance"/></summary>
        public const string defaultInstance = "defaultInstance";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Settings.Default"/></summary>
        public const string Default = "Default";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Settings.Default"/></summary>
        public static PropertyPath DefaultPath { get { return new PropertyPath("Default"); } }

    }

}

namespace HedgeHog.Charter.FileMetadata.Themes.Metadata
{
    /// <summary>Metadata for XAML Generic.xaml</summary>
    public static class GenericXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/Themes/Generic.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Themes/Generic.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Themes/Generic.xaml")); } }


    }

}

namespace HedgeHog.Charter.ViewModel.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Charter.ViewModel.MainViewModel"/></summary>
    public static class MainViewModelMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.ViewModel.ViewModelLocator"/></summary>
    public static class ViewModelLocatorMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Charter.ViewModel.ViewModelLocator.Main"/></summary>
        public const string Main = "Main";

        /// <summary>Refers to method <see cref="HedgeHog.Charter.ViewModel.ViewModelLocator.Cleanup"/></summary>
        public const string Cleanup = "Cleanup";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.ViewModel.ViewModelLocator.Main"/></summary>
        public static PropertyPath MainPath { get { return new PropertyPath("Main"); } }

    }

}

#pragma warning enable
// ReSharper restore PossibleNullReferenceException
