

// ReSharper disable PossibleNullReferenceException
/*
This code was automatically generated by Daniel Vaughan's metadata generator.
Changes to this file may be lost if regeneration occurs.
http://danielvaughan.orpius.com
*/
using System.Windows;
using System.Windows.Media.Imaging;
using System;
using System.Linq;
using System.Linq.Expressions;


#pragma warning disable 

namespace HedgeHog.Charter.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Charter.AttachedProperties"/></summary>
    public static class AttachedPropertiesMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.ColoredSegment"/></summary>
    public static class ColoredSegmentMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Charter.ColoredSegment.OnInitialized"/></summary>
        public const string OnInitialized = "OnInitialized";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.ColoredSegment.originalColor"/></summary>
        public const string originalColor = "originalColor";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectedColor"/></summary>
        public const string SelectedColor = "SelectedColor";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.ColoredSegment.SelectedColorProperty"/></summary>
        public const string SelectedColorProperty = "SelectedColorProperty";

        /// <summary>Refers to method <see cref="HedgeHog.Charter.ColoredSegment.OnPropertyChanged"/></summary>
        public const string OnPropertyChanged = "OnPropertyChanged";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.ColoredSegment.MyPropertyProperty"/></summary>
        public const string MyPropertyProperty = "MyPropertyProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectedValue"/></summary>
        public const string SelectedValue = "SelectedValue";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.ColoredSegment.SelectedValueProperty"/></summary>
        public const string SelectedValueProperty = "SelectedValueProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectValue"/></summary>
        public const string SelectValue = "SelectValue";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.ColoredSegment.SelectValueProperty"/></summary>
        public const string SelectValueProperty = "SelectValueProperty";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectedColor"/></summary>
        public static PropertyPath SelectedColorPath { get { return new PropertyPath("SelectedColor"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectedValue"/></summary>
        public static PropertyPath SelectedValuePath { get { return new PropertyPath("SelectedValue"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Charter.ColoredSegment.SelectValue"/></summary>
        public static PropertyPath SelectValuePath { get { return new PropertyPath("SelectValue"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.CursorH"/></summary>
    public static class CursorHMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.DraggableManager"/></summary>
    public static class DraggableManagerMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Charter.DraggableManager.SetHorizontalAnchor"/></summary>
        public const string SetHorizontalAnchor = "SetHorizontalAnchor";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.GraggableLine"/></summary>
    public static class GraggableLineMetadata
    {
        
    }

}

namespace HedgeHog.Charter.FileMetadata.Metadata
{
    /// <summary>Metadata for File ChartElements</summary>
    public static class ChartElements    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/ChartElements", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/ChartElements"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/ChartElements")); } }


    }

    /// <summary>Metadata for XAML CharterControl.xaml</summary>
    public static class CharterControlXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/CharterControl.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CharterControl.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CharterControl.xaml")); } }

            /// <summary>Represents x:Key="DraggArrowUp"/></summary>
            public static string DraggArrowUpKey { get { return "DraggArrowUp"; } }

            /// <summary>Represents x:Key="DraggArrowDown"/></summary>
            public static string DraggArrowDownKey { get { return "DraggArrowDown"; } }

            /// <summary>Represents x:Key="BoolToSrtingConverter"/></summary>
            public static string BoolToSrtingConverterKey { get { return "BoolToSrtingConverter"; } }

            /// <summary>Represents x:Key="PlayButtonStyle"/></summary>
            public static string PlayButtonStyleKey { get { return "PlayButtonStyle"; } }


    }

    /// <summary>Metadata for XAML Corridors.xaml</summary>
    public static class CorridorsXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/Corridors.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Corridors.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Corridors.xaml")); } }

            /// <summary>Represents x:Key="DraggArrowUp"/></summary>
            public static string DraggArrowUpKey { get { return "DraggArrowUp"; } }

            /// <summary>Represents x:Key="DraggArrowDown"/></summary>
            public static string DraggArrowDownKey { get { return "DraggArrowDown"; } }

            /// <summary>Represents x:Key="BoolToSrtingConverter"/></summary>
            public static string BoolToSrtingConverterKey { get { return "BoolToSrtingConverter"; } }

            /// <summary>Represents x:Key="PlayButtonStyle"/></summary>
            public static string PlayButtonStyleKey { get { return "PlayButtonStyle"; } }


    }

    /// <summary>Metadata for File CS_4_0.tt</summary>
    public static class CS_4_0Tt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/CS_4_0.tt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CS_4_0.tt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CS_4_0.tt")); } }


    }

    /// <summary>Metadata for XAML CursorH.xaml</summary>
    public static class CursorHXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/CursorH.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CursorH.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/CursorH.xaml")); } }


    }

    /// <summary>Metadata for XAML GraggableLine.xaml</summary>
    public static class GraggableLineXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/GraggableLine.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/GraggableLine.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/GraggableLine.xaml")); } }


    }

}

namespace HedgeHog.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.CharterControlMessage"/></summary>
    public static class CharterControlMessageMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.CharterControl"/></summary>
    public static class CharterControlMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GetIsInteractive"/></summary>
        public const string GetIsInteractive = "GetIsInteractive";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetIsInteractive"/></summary>
        public const string SetIsInteractive = "SetIsInteractive";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.IsInteractiveProperty"/></summary>
        public const string IsInteractiveProperty = "IsInteractiveProperty";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GetFriend"/></summary>
        public const string GetFriend = "GetFriend";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetFriend"/></summary>
        public const string SetFriend = "SetFriend";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.FriendProperty"/></summary>
        public const string FriendProperty = "FriendProperty";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._barsPeriod"/></summary>
        public const string _barsPeriod = "_barsPeriod";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BarsPeriod"/></summary>
        public const string BarsPeriod = "BarsPeriod";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._BarsCount"/></summary>
        public const string _BarsCount = "_BarsCount";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BarsCount"/></summary>
        public const string BarsCount = "BarsCount";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._CorridorAngle"/></summary>
        public const string _CorridorAngle = "_CorridorAngle";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorAngle"/></summary>
        public const string CorridorAngle = "CorridorAngle";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._HeightInPips"/></summary>
        public const string _HeightInPips = "_HeightInPips";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.HeightInPips"/></summary>
        public const string HeightInPips = "HeightInPips";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._StDev"/></summary>
        public const string _StDev = "_StDev";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.StDev"/></summary>
        public const string StDev = "StDev";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.Header"/></summary>
        public const string Header = "Header";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsActive"/></summary>
        public const string IsActive = "IsActive";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.IsActiveProperty"/></summary>
        public const string IsActiveProperty = "IsActiveProperty";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsSelected"/></summary>
        public const string IsSelected = "IsSelected";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.IsSelectedProperty"/></summary>
        public const string IsSelectedProperty = "IsSelectedProperty";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._IsInPlay"/></summary>
        public const string _IsInPlay = "_IsInPlay";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsInPlay"/></summary>
        public const string IsInPlay = "IsInPlay";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._DelayInSeconds"/></summary>
        public const string _DelayInSeconds = "_DelayInSeconds";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DelayInSeconds"/></summary>
        public const string DelayInSeconds = "DelayInSeconds";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._PlayStartDate"/></summary>
        public const string _PlayStartDate = "_PlayStartDate";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PlayStartDate"/></summary>
        public const string PlayStartDate = "PlayStartDate";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.SuppResMinimumDistance"/></summary>
        public const string SuppResMinimumDistance = "SuppResMinimumDistance";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedTimeX"/></summary>
        public const string animatedTimeX = "animatedTimeX";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedTime0X"/></summary>
        public const string animatedTime0X = "animatedTime0X";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedPriceY"/></summary>
        public const string animatedPriceY = "animatedPriceY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedDataSource"/></summary>
        public const string animatedDataSource = "animatedDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedPriceBidY"/></summary>
        public const string animatedPriceBidY = "animatedPriceBidY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedDataSourceBid"/></summary>
        public const string animatedDataSourceBid = "animatedDataSourceBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedPrice1Y"/></summary>
        public const string animatedPrice1Y = "animatedPrice1Y";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedDataSource1"/></summary>
        public const string animatedDataSource1 = "animatedDataSource1";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVoltTimeX"/></summary>
        public const string animatedVoltTimeX = "animatedVoltTimeX";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVoltValueY"/></summary>
        public const string animatedVoltValueY = "animatedVoltValueY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVoltDataSource"/></summary>
        public const string animatedVoltDataSource = "animatedVoltDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVolt1TimeX"/></summary>
        public const string animatedVolt1TimeX = "animatedVolt1TimeX";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVolt1ValueY"/></summary>
        public const string animatedVolt1ValueY = "animatedVolt1ValueY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.animatedVolt1DataSource"/></summary>
        public const string animatedVolt1DataSource = "animatedVolt1DataSource";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.infoBox"/></summary>
        public const string infoBox = "infoBox";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.viewPortContainer"/></summary>
        public const string viewPortContainer = "viewPortContainer";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorHeightMultiplier"/></summary>
        public const string CorridorHeightMultiplier = "CorridorHeightMultiplier";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.PriceBarValue"/></summary>
        public const string PriceBarValue = "PriceBarValue";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceFunc"/></summary>
        public const string GetPriceFunc = "GetPriceFunc";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceHigh"/></summary>
        public const string GetPriceHigh = "GetPriceHigh";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceLow"/></summary>
        public const string GetPriceLow = "GetPriceLow";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassBuy"/></summary>
        public const string CenterOfMassBuy = "CenterOfMassBuy";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassSell"/></summary>
        public const string CenterOfMassSell = "CenterOfMassSell";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PriceLineGraph"/></summary>
        public const string PriceLineGraph = "PriceLineGraph";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PriceLineGraphBid"/></summary>
        public const string PriceLineGraphBid = "PriceLineGraphBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.priceLineGraphColor"/></summary>
        public const string priceLineGraphColor = "priceLineGraphColor";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.priceLineGraphColorBuy"/></summary>
        public const string priceLineGraphColorBuy = "priceLineGraphColorBuy";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.priceLineGraphColorSell"/></summary>
        public const string priceLineGraphColorSell = "priceLineGraphColorSell";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.buySell"/></summary>
        public const string buySell = "buySell";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetPriceLineColor"/></summary>
        public const string SetPriceLineColor = "SetPriceLineColor";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineMax"/></summary>
        public const string lineMax = "lineMax";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMax"/></summary>
        public const string LineMax = "LineMax";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineMaxAvg"/></summary>
        public const string lineMaxAvg = "lineMaxAvg";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMaxAvg"/></summary>
        public const string LineMaxAvg = "LineMaxAvg";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineMin"/></summary>
        public const string lineMin = "lineMin";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMin"/></summary>
        public const string LineMin = "LineMin";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineMinAvg"/></summary>
        public const string lineMinAvg = "lineMinAvg";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMinAvg"/></summary>
        public const string LineMinAvg = "LineMinAvg";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._DoShowCenterOfMass"/></summary>
        public const string _DoShowCenterOfMass = "_DoShowCenterOfMass";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DoShowCenterOfMass"/></summary>
        public const string DoShowCenterOfMass = "DoShowCenterOfMass";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.centerOfMassBrush"/></summary>
        public const string centerOfMassBrush = "centerOfMassBrush";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._centerOfMassHLineHigh"/></summary>
        public const string _centerOfMassHLineHigh = "_centerOfMassHLineHigh";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.centerOfMassHLineHigh"/></summary>
        public const string centerOfMassHLineHigh = "centerOfMassHLineHigh";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassHLineHigh"/></summary>
        public const string CenterOfMassHLineHigh = "CenterOfMassHLineHigh";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._centerOfMassHLineLow"/></summary>
        public const string _centerOfMassHLineLow = "_centerOfMassHLineLow";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.centerOfMassHLineLow"/></summary>
        public const string centerOfMassHLineLow = "centerOfMassHLineLow";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassHLineLow"/></summary>
        public const string CenterOfMassHLineLow = "CenterOfMassHLineLow";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.magnetPrice"/></summary>
        public const string magnetPrice = "magnetPrice";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.MagnetPrice"/></summary>
        public const string MagnetPrice = "MagnetPrice";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineNetSell"/></summary>
        public const string lineNetSell = "lineNetSell";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineNetSell"/></summary>
        public const string LineNetSell = "LineNetSell";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineNetBuy"/></summary>
        public const string lineNetBuy = "lineNetBuy";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineNetBuy"/></summary>
        public const string LineNetBuy = "LineNetBuy";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineAvgAsk"/></summary>
        public const string lineAvgAsk = "lineAvgAsk";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineAvgAsk"/></summary>
        public const string LineAvgAsk = "LineAvgAsk";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineAvgBid"/></summary>
        public const string lineAvgBid = "lineAvgBid";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineAvgBid"/></summary>
        public const string LineAvgBid = "LineAvgBid";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._lineTimeMax"/></summary>
        public const string _lineTimeMax = "_lineTimeMax";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.lineTimeMax"/></summary>
        public const string lineTimeMax = "lineTimeMax";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeMax"/></summary>
        public const string LineTimeMax = "LineTimeMax";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineTimeMin"/></summary>
        public const string lineTimeMin = "lineTimeMin";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeMin"/></summary>
        public const string LineTimeMin = "LineTimeMin";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.lineTimeAvg"/></summary>
        public const string lineTimeAvg = "lineTimeAvg";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeAvg"/></summary>
        public const string LineTimeAvg = "LineTimeAvg";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.gannLine"/></summary>
        public const string gannLine = "gannLine";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannLine"/></summary>
        public const string GannLine = "GannLine";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine"/></summary>
        public const string trendLine = "trendLine";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine"/></summary>
        public const string TrendLine = "TrendLine";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine1"/></summary>
        public const string trendLine1 = "trendLine1";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine1"/></summary>
        public const string TrendLine1 = "TrendLine1";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine11"/></summary>
        public const string trendLine11 = "trendLine11";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine11"/></summary>
        public const string TrendLine11 = "TrendLine11";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine2"/></summary>
        public const string trendLine2 = "trendLine2";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine2"/></summary>
        public const string TrendLine2 = "TrendLine2";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.trendLine22"/></summary>
        public const string trendLine22 = "trendLine22";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine22"/></summary>
        public const string TrendLine22 = "TrendLine22";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._GannAngleOffsetPoint"/></summary>
        public const string _GannAngleOffsetPoint = "_GannAngleOffsetPoint";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAngleOffsetPoint"/></summary>
        public const string GannAngleOffsetPoint = "GannAngleOffsetPoint";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.GannAngleChangedScheduler"/></summary>
        public const string GannAngleChangedScheduler = "GannAngleChangedScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._GannAngleOffsetPoint_PositionChanged"/></summary>
        public const string _GannAngleOffsetPoint_PositionChanged = "_GannAngleOffsetPoint_PositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnGannAngleChanged"/></summary>
        public const string OnGannAngleChanged = "OnGannAngleChanged";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._CorridorStartPointX"/></summary>
        public const string _CorridorStartPointX = "_CorridorStartPointX";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorStartPointX"/></summary>
        public const string CorridorStartPointX = "CorridorStartPointX";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._CorridorStartPointX_PreviewMouseUp"/></summary>
        public const string _CorridorStartPointX_PreviewMouseUp = "_CorridorStartPointX_PreviewMouseUp";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._CorridorStartPointX_GotFocus"/></summary>
        public const string _CorridorStartPointX_GotFocus = "_CorridorStartPointX_GotFocus";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl._CorridorStartPointX_PreviewMouseLeftButtonDown"/></summary>
        public const string _CorridorStartPointX_PreviewMouseLeftButtonDown = "_CorridorStartPointX_PreviewMouseLeftButtonDown";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DraggablePoint_MouseLeftButtonDown"/></summary>
        public const string DraggablePoint_MouseLeftButtonDown = "DraggablePoint_MouseLeftButtonDown";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.DraggablePoint_KeyDown"/></summary>
        public const string DraggablePoint_KeyDown = "DraggablePoint_KeyDown";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._ActiveDraggablePoint"/></summary>
        public const string _ActiveDraggablePoint = "_ActiveDraggablePoint";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ActiveDraggablePoint"/></summary>
        public const string ActiveDraggablePoint = "ActiveDraggablePoint";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.otherHLines"/></summary>
        public const string otherHLines = "otherHLines";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.otherVLines"/></summary>
        public const string otherVLines = "otherVLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.Corridors_Closing"/></summary>
        public const string Corridors_Closing = "Corridors_Closing";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.ds"/></summary>
        public const string ds = "ds";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.dsAvg1"/></summary>
        public const string dsAvg1 = "dsAvg1";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.dsAvg2"/></summary>
        public const string dsAvg2 = "dsAvg2";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.dsAvg3"/></summary>
        public const string dsAvg3 = "dsAvg3";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.dsVolts"/></summary>
        public const string dsVolts = "dsVolts";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.dsVoltsPoly"/></summary>
        public const string dsVoltsPoly = "dsVoltsPoly";

        /// <summary>Metadata for class <see cref="HedgeHog.CharterControl.DraggablePointInfo"/></summary>
        public static class DraggablePointInfoMetadata
        {
                        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DraggablePointInfo.DraggablePoint"/></summary>
            public const string DraggablePoint = "DraggablePoint";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DraggablePointInfo.TradesCount"/></summary>
            public const string TradesCount = "TradesCount";


            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DraggablePointInfo.DraggablePoint"/></summary>
            public static PropertyPath DraggablePointPath { get { return new PropertyPath("DraggablePoint"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DraggablePointInfo.TradesCount"/></summary>
            public static PropertyPath TradesCountPath { get { return new PropertyPath("TradesCount"); } }

        }

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.BuyRates"/></summary>
        public const string BuyRates = "BuyRates";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.SellRates"/></summary>
        public const string SellRates = "SellRates";

        /// <summary>Metadata for class <see cref="HedgeHog.CharterControl.BuySellLevel"/></summary>
        public static class BuySellLevelMetadata
        {
                        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.Rate"/></summary>
            public const string Rate = "Rate";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.CrossCount"/></summary>
            public const string CrossCount = "CrossCount";

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.IsBuy"/></summary>
            public const string IsBuy = "IsBuy";


            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.Rate"/></summary>
            public static PropertyPath RatePath { get { return new PropertyPath("Rate"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.CrossCount"/></summary>
            public static PropertyPath CrossCountPath { get { return new PropertyPath("CrossCount"); } }

            /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BuySellLevel.IsBuy"/></summary>
            public static PropertyPath IsBuyPath { get { return new PropertyPath("IsBuy"); } }

        }

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.StrokeArrayForTrades"/></summary>
        public const string StrokeArrayForTrades = "StrokeArrayForTrades";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.tradeLines"/></summary>
        public const string tradeLines = "tradeLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetTradeLines"/></summary>
        public const string SetTradeLines = "SetTradeLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetBuyRates"/></summary>
        public const string SetBuyRates = "SetBuyRates";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetSellRates"/></summary>
        public const string SetSellRates = "SetSellRates";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CleanSuppResRates"/></summary>
        public const string CleanSuppResRates = "CleanSuppResRates";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._isShiftDown"/></summary>
        public const string _isShiftDown = "_isShiftDown";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetBuySellRates"/></summary>
        public const string SetBuySellRates = "SetBuySellRates";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CreatePointY"/></summary>
        public const string CreatePointY = "CreatePointY";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.FibLevels"/></summary>
        public const string FibLevels = "FibLevels";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.GannAngles"/></summary>
        public const string GannAngles = "GannAngles";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.LineToPoint"/></summary>
        public const string LineToPoint = "LineToPoint";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CreateCurrencyDataSource"/></summary>
        public const string CreateCurrencyDataSource = "CreateCurrencyDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._gannAnglesCount"/></summary>
        public const string _gannAnglesCount = "_gannAnglesCount";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAnglesCount"/></summary>
        public const string GannAnglesCount = "GannAnglesCount";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._GannAngle1x1Index"/></summary>
        public const string _GannAngle1x1Index = "_GannAngle1x1Index";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAngle1x1Index"/></summary>
        public const string GannAngle1x1Index = "GannAngle1x1Index";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.InsertGannLines"/></summary>
        public const string InsertGannLines = "InsertGannLines";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._DoShowFibLines"/></summary>
        public const string _DoShowFibLines = "_DoShowFibLines";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DoShowFibLines"/></summary>
        public const string DoShowFibLines = "DoShowFibLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.InsertFibLines"/></summary>
        public const string InsertFibLines = "InsertFibLines";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GuessPipSize"/></summary>
        public const string GuessPipSize = "GuessPipSize";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.plotter_PreviewKeyDown"/></summary>
        public const string plotter_PreviewKeyDown = "plotter_PreviewKeyDown";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.AdjustDraggablePointByPip"/></summary>
        public const string AdjustDraggablePointByPip = "AdjustDraggablePointByPip";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.plotter_KeyDown"/></summary>
        public const string plotter_KeyDown = "plotter_KeyDown";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.CorridorStartPositionOld"/></summary>
        public const string CorridorStartPositionOld = "CorridorStartPositionOld";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.GetPriceStartDate"/></summary>
        public const string GetPriceStartDate = "GetPriceStartDate";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.corridorStartDateScheduler"/></summary>
        public const string corridorStartDateScheduler = "corridorStartDateScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CorridorStartPointX_IsMouseCapturedChanged"/></summary>
        public const string CorridorStartPointX_IsMouseCapturedChanged = "CorridorStartPointX_IsMouseCapturedChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.CorridorStartPointX_PositionChanged"/></summary>
        public const string CorridorStartPointX_PositionChanged = "CorridorStartPointX_PositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnBuySellRemoved"/></summary>
        public const string OnBuySellRemoved = "OnBuySellRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnBuySellAdded"/></summary>
        public const string OnBuySellAdded = "OnBuySellAdded";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnPlay"/></summary>
        public const string OnPlay = "OnPlay";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnCorridorStartPositionChanged"/></summary>
        public const string OnCorridorStartPositionChanged = "OnCorridorStartPositionChanged";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl._suppResChangeScheduler"/></summary>
        public const string _suppResChangeScheduler = "_suppResChangeScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.OnSupportResistanceChanged"/></summary>
        public const string OnSupportResistanceChanged = "OnSupportResistanceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.UpdateTicks"/></summary>
        public const string UpdateTicks = "UpdateTicks";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.inRendering"/></summary>
        public const string inRendering = "inRendering";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.IsPlotterInitialised"/></summary>
        public const string IsPlotterInitialised = "IsPlotterInitialised";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.AddTicks"/></summary>
        public const string AddTicks = "AddTicks";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetPoint"/></summary>
        public const string SetPoint = "SetPoint";

        /// <summary>Refers to field <see cref="HedgeHog.CharterControl.hasGannAnglesFilter"/></summary>
        public const string hasGannAnglesFilter = "hasGannAnglesFilter";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetGannAngles"/></summary>
        public const string SetGannAngles = "SetGannAngles";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.SetFibLevels"/></summary>
        public const string SetFibLevels = "SetFibLevels";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.ReAdjustXY"/></summary>
        public const string ReAdjustXY = "ReAdjustXY";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.ConvertToDateTime"/></summary>
        public const string ConvertToDateTime = "ConvertToDateTime";

        /// <summary>Refers to method <see cref="HedgeHog.CharterControl.ConvertToDouble"/></summary>
        public const string ConvertToDouble = "ConvertToDouble";

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.SelectedGannAngleIndex"/></summary>
        public const string SelectedGannAngleIndex = "SelectedGannAngleIndex";


        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BarsPeriod"/></summary>
        public static PropertyPath BarsPeriodPath { get { return new PropertyPath("BarsPeriod"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.BarsCount"/></summary>
        public static PropertyPath BarsCountPath { get { return new PropertyPath("BarsCount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorAngle"/></summary>
        public static PropertyPath CorridorAnglePath { get { return new PropertyPath("CorridorAngle"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.HeightInPips"/></summary>
        public static PropertyPath HeightInPipsPath { get { return new PropertyPath("HeightInPips"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.StDev"/></summary>
        public static PropertyPath StDevPath { get { return new PropertyPath("StDev"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.Header"/></summary>
        public static PropertyPath HeaderPath { get { return new PropertyPath("Header"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsActive"/></summary>
        public static PropertyPath IsActivePath { get { return new PropertyPath("IsActive"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsSelected"/></summary>
        public static PropertyPath IsSelectedPath { get { return new PropertyPath("IsSelected"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.IsInPlay"/></summary>
        public static PropertyPath IsInPlayPath { get { return new PropertyPath("IsInPlay"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DelayInSeconds"/></summary>
        public static PropertyPath DelayInSecondsPath { get { return new PropertyPath("DelayInSeconds"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PlayStartDate"/></summary>
        public static PropertyPath PlayStartDatePath { get { return new PropertyPath("PlayStartDate"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.SuppResMinimumDistance"/></summary>
        public static PropertyPath SuppResMinimumDistancePath { get { return new PropertyPath("SuppResMinimumDistance"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorHeightMultiplier"/></summary>
        public static PropertyPath CorridorHeightMultiplierPath { get { return new PropertyPath("CorridorHeightMultiplier"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceFunc"/></summary>
        public static PropertyPath GetPriceFuncPath { get { return new PropertyPath("GetPriceFunc"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceHigh"/></summary>
        public static PropertyPath GetPriceHighPath { get { return new PropertyPath("GetPriceHigh"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GetPriceLow"/></summary>
        public static PropertyPath GetPriceLowPath { get { return new PropertyPath("GetPriceLow"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassBuy"/></summary>
        public static PropertyPath CenterOfMassBuyPath { get { return new PropertyPath("CenterOfMassBuy"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassSell"/></summary>
        public static PropertyPath CenterOfMassSellPath { get { return new PropertyPath("CenterOfMassSell"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PriceLineGraph"/></summary>
        public static PropertyPath PriceLineGraphPath { get { return new PropertyPath("PriceLineGraph"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.PriceLineGraphBid"/></summary>
        public static PropertyPath PriceLineGraphBidPath { get { return new PropertyPath("PriceLineGraphBid"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMax"/></summary>
        public static PropertyPath LineMaxPath { get { return new PropertyPath("LineMax"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMaxAvg"/></summary>
        public static PropertyPath LineMaxAvgPath { get { return new PropertyPath("LineMaxAvg"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMin"/></summary>
        public static PropertyPath LineMinPath { get { return new PropertyPath("LineMin"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineMinAvg"/></summary>
        public static PropertyPath LineMinAvgPath { get { return new PropertyPath("LineMinAvg"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DoShowCenterOfMass"/></summary>
        public static PropertyPath DoShowCenterOfMassPath { get { return new PropertyPath("DoShowCenterOfMass"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.centerOfMassHLineHigh"/></summary>
        public static PropertyPath centerOfMassHLineHighPath { get { return new PropertyPath("centerOfMassHLineHigh"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassHLineHigh"/></summary>
        public static PropertyPath CenterOfMassHLineHighPath { get { return new PropertyPath("CenterOfMassHLineHigh"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.centerOfMassHLineLow"/></summary>
        public static PropertyPath centerOfMassHLineLowPath { get { return new PropertyPath("centerOfMassHLineLow"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CenterOfMassHLineLow"/></summary>
        public static PropertyPath CenterOfMassHLineLowPath { get { return new PropertyPath("CenterOfMassHLineLow"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.MagnetPrice"/></summary>
        public static PropertyPath MagnetPricePath { get { return new PropertyPath("MagnetPrice"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineNetSell"/></summary>
        public static PropertyPath LineNetSellPath { get { return new PropertyPath("LineNetSell"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineNetBuy"/></summary>
        public static PropertyPath LineNetBuyPath { get { return new PropertyPath("LineNetBuy"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineAvgAsk"/></summary>
        public static PropertyPath LineAvgAskPath { get { return new PropertyPath("LineAvgAsk"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineAvgBid"/></summary>
        public static PropertyPath LineAvgBidPath { get { return new PropertyPath("LineAvgBid"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.lineTimeMax"/></summary>
        public static PropertyPath lineTimeMaxPath { get { return new PropertyPath("lineTimeMax"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeMax"/></summary>
        public static PropertyPath LineTimeMaxPath { get { return new PropertyPath("LineTimeMax"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeMin"/></summary>
        public static PropertyPath LineTimeMinPath { get { return new PropertyPath("LineTimeMin"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.LineTimeAvg"/></summary>
        public static PropertyPath LineTimeAvgPath { get { return new PropertyPath("LineTimeAvg"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannLine"/></summary>
        public static PropertyPath GannLinePath { get { return new PropertyPath("GannLine"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine"/></summary>
        public static PropertyPath TrendLinePath { get { return new PropertyPath("TrendLine"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine1"/></summary>
        public static PropertyPath TrendLine1Path { get { return new PropertyPath("TrendLine1"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine11"/></summary>
        public static PropertyPath TrendLine11Path { get { return new PropertyPath("TrendLine11"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine2"/></summary>
        public static PropertyPath TrendLine2Path { get { return new PropertyPath("TrendLine2"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.TrendLine22"/></summary>
        public static PropertyPath TrendLine22Path { get { return new PropertyPath("TrendLine22"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAngleOffsetPoint"/></summary>
        public static PropertyPath GannAngleOffsetPointPath { get { return new PropertyPath("GannAngleOffsetPoint"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.CorridorStartPointX"/></summary>
        public static PropertyPath CorridorStartPointXPath { get { return new PropertyPath("CorridorStartPointX"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.ActiveDraggablePoint"/></summary>
        public static PropertyPath ActiveDraggablePointPath { get { return new PropertyPath("ActiveDraggablePoint"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAnglesCount"/></summary>
        public static PropertyPath GannAnglesCountPath { get { return new PropertyPath("GannAnglesCount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.GannAngle1x1Index"/></summary>
        public static PropertyPath GannAngle1x1IndexPath { get { return new PropertyPath("GannAngle1x1Index"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.DoShowFibLines"/></summary>
        public static PropertyPath DoShowFibLinesPath { get { return new PropertyPath("DoShowFibLines"); } }

        /// <summary>Refers to property <see cref="HedgeHog.CharterControl.SelectedGannAngleIndex"/></summary>
        public static PropertyPath SelectedGannAngleIndexPath { get { return new PropertyPath("SelectedGannAngleIndex"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Corridors"/></summary>
    public static class CorridorsMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Corridors.GetIsInteractive"/></summary>
        public const string GetIsInteractive = "GetIsInteractive";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.SetIsInteractive"/></summary>
        public const string SetIsInteractive = "SetIsInteractive";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.IsInteractiveProperty"/></summary>
        public const string IsInteractiveProperty = "IsInteractiveProperty";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.GetFriend"/></summary>
        public const string GetFriend = "GetFriend";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.SetFriend"/></summary>
        public const string SetFriend = "SetFriend";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.FriendProperty"/></summary>
        public const string FriendProperty = "FriendProperty";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._IsInPlay"/></summary>
        public const string _IsInPlay = "_IsInPlay";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.IsInPlay"/></summary>
        public const string IsInPlay = "IsInPlay";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._DelayInSeconds"/></summary>
        public const string _DelayInSeconds = "_DelayInSeconds";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.DelayInSeconds"/></summary>
        public const string DelayInSeconds = "DelayInSeconds";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._PlayStartDate"/></summary>
        public const string _PlayStartDate = "_PlayStartDate";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.PlayStartDate"/></summary>
        public const string PlayStartDate = "PlayStartDate";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.SuppResMinimumDistance"/></summary>
        public const string SuppResMinimumDistance = "SuppResMinimumDistance";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedTimeX"/></summary>
        public const string animatedTimeX = "animatedTimeX";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedTime0X"/></summary>
        public const string animatedTime0X = "animatedTime0X";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedPriceY"/></summary>
        public const string animatedPriceY = "animatedPriceY";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedDataSource"/></summary>
        public const string animatedDataSource = "animatedDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedPriceBidY"/></summary>
        public const string animatedPriceBidY = "animatedPriceBidY";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedDataSourceBid"/></summary>
        public const string animatedDataSourceBid = "animatedDataSourceBid";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedPrice1Y"/></summary>
        public const string animatedPrice1Y = "animatedPrice1Y";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedDataSource1"/></summary>
        public const string animatedDataSource1 = "animatedDataSource1";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedVoltTimeX"/></summary>
        public const string animatedVoltTimeX = "animatedVoltTimeX";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedVoltValueY"/></summary>
        public const string animatedVoltValueY = "animatedVoltValueY";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedVoltDataSource"/></summary>
        public const string animatedVoltDataSource = "animatedVoltDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedVolt1TimeX"/></summary>
        public const string animatedVolt1TimeX = "animatedVolt1TimeX";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedVolt1ValueY"/></summary>
        public const string animatedVolt1ValueY = "animatedVolt1ValueY";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.animatedVolt1DataSource"/></summary>
        public const string animatedVolt1DataSource = "animatedVolt1DataSource";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.infoBox"/></summary>
        public const string infoBox = "infoBox";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.viewPortContainer"/></summary>
        public const string viewPortContainer = "viewPortContainer";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CorridorHeightMultiplier"/></summary>
        public const string CorridorHeightMultiplier = "CorridorHeightMultiplier";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.PriceBarValue"/></summary>
        public const string PriceBarValue = "PriceBarValue";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.GetPriceFunc"/></summary>
        public const string GetPriceFunc = "GetPriceFunc";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CenterOfMassBuy"/></summary>
        public const string CenterOfMassBuy = "CenterOfMassBuy";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CenterOfMassSell"/></summary>
        public const string CenterOfMassSell = "CenterOfMassSell";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.PriceLineGraph"/></summary>
        public const string PriceLineGraph = "PriceLineGraph";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.priceLineGraphColor"/></summary>
        public const string priceLineGraphColor = "priceLineGraphColor";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.priceLineGraphColorBuy"/></summary>
        public const string priceLineGraphColorBuy = "priceLineGraphColorBuy";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.priceLineGraphColorSell"/></summary>
        public const string priceLineGraphColorSell = "priceLineGraphColorSell";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.buySell"/></summary>
        public const string buySell = "buySell";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.SetPriceLineColor"/></summary>
        public const string SetPriceLineColor = "SetPriceLineColor";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.lineMax"/></summary>
        public const string lineMax = "lineMax";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineMax"/></summary>
        public const string LineMax = "LineMax";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.lineMaxAvg"/></summary>
        public const string lineMaxAvg = "lineMaxAvg";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineMaxAvg"/></summary>
        public const string LineMaxAvg = "LineMaxAvg";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.lineMin"/></summary>
        public const string lineMin = "lineMin";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineMin"/></summary>
        public const string LineMin = "LineMin";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.lineMinAvg"/></summary>
        public const string lineMinAvg = "lineMinAvg";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineMinAvg"/></summary>
        public const string LineMinAvg = "LineMinAvg";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._DoShowCenterOfMass"/></summary>
        public const string _DoShowCenterOfMass = "_DoShowCenterOfMass";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.DoShowCenterOfMass"/></summary>
        public const string DoShowCenterOfMass = "DoShowCenterOfMass";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.centerOfMassBrush"/></summary>
        public const string centerOfMassBrush = "centerOfMassBrush";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._centerOfMassHLineHigh"/></summary>
        public const string _centerOfMassHLineHigh = "_centerOfMassHLineHigh";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.centerOfMassHLineHigh"/></summary>
        public const string centerOfMassHLineHigh = "centerOfMassHLineHigh";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CenterOfMassHLineHigh"/></summary>
        public const string CenterOfMassHLineHigh = "CenterOfMassHLineHigh";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._centerOfMassHLineLow"/></summary>
        public const string _centerOfMassHLineLow = "_centerOfMassHLineLow";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.centerOfMassHLineLow"/></summary>
        public const string centerOfMassHLineLow = "centerOfMassHLineLow";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CenterOfMassHLineLow"/></summary>
        public const string CenterOfMassHLineLow = "CenterOfMassHLineLow";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.magnetPrice"/></summary>
        public const string magnetPrice = "magnetPrice";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.MagnetPrice"/></summary>
        public const string MagnetPrice = "MagnetPrice";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.lineNetSell"/></summary>
        public const string lineNetSell = "lineNetSell";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineNetSell"/></summary>
        public const string LineNetSell = "LineNetSell";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.lineNetBuy"/></summary>
        public const string lineNetBuy = "lineNetBuy";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineNetBuy"/></summary>
        public const string LineNetBuy = "LineNetBuy";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.lineAvgAsk"/></summary>
        public const string lineAvgAsk = "lineAvgAsk";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineAvgAsk"/></summary>
        public const string LineAvgAsk = "LineAvgAsk";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.lineAvgBid"/></summary>
        public const string lineAvgBid = "lineAvgBid";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineAvgBid"/></summary>
        public const string LineAvgBid = "LineAvgBid";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._lineTimeMax"/></summary>
        public const string _lineTimeMax = "_lineTimeMax";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.lineTimeMax"/></summary>
        public const string lineTimeMax = "lineTimeMax";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineTimeMax"/></summary>
        public const string LineTimeMax = "LineTimeMax";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.lineTimeMin"/></summary>
        public const string lineTimeMin = "lineTimeMin";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineTimeMin"/></summary>
        public const string LineTimeMin = "LineTimeMin";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.lineTimeAvg"/></summary>
        public const string lineTimeAvg = "lineTimeAvg";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineTimeAvg"/></summary>
        public const string LineTimeAvg = "LineTimeAvg";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.gannLine"/></summary>
        public const string gannLine = "gannLine";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.GannLine"/></summary>
        public const string GannLine = "GannLine";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.trendLine"/></summary>
        public const string trendLine = "trendLine";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.TrendLine"/></summary>
        public const string TrendLine = "TrendLine";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.trendLine1"/></summary>
        public const string trendLine1 = "trendLine1";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.TrendLine1"/></summary>
        public const string TrendLine1 = "TrendLine1";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.trendLine11"/></summary>
        public const string trendLine11 = "trendLine11";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.TrendLine11"/></summary>
        public const string TrendLine11 = "TrendLine11";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.trendLine2"/></summary>
        public const string trendLine2 = "trendLine2";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.TrendLine2"/></summary>
        public const string TrendLine2 = "TrendLine2";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.trendLine22"/></summary>
        public const string trendLine22 = "trendLine22";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.TrendLine22"/></summary>
        public const string TrendLine22 = "TrendLine22";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._GannAngleOffsetPoint"/></summary>
        public const string _GannAngleOffsetPoint = "_GannAngleOffsetPoint";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.GannAngleOffsetPoint"/></summary>
        public const string GannAngleOffsetPoint = "GannAngleOffsetPoint";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.GannAngleChangedScheduler"/></summary>
        public const string GannAngleChangedScheduler = "GannAngleChangedScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors._GannAngleOffsetPoint_PositionChanged"/></summary>
        public const string _GannAngleOffsetPoint_PositionChanged = "_GannAngleOffsetPoint_PositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.OnGannAngleChanged"/></summary>
        public const string OnGannAngleChanged = "OnGannAngleChanged";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._CorridorStartPointX"/></summary>
        public const string _CorridorStartPointX = "_CorridorStartPointX";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CorridorStartPointX"/></summary>
        public const string CorridorStartPointX = "CorridorStartPointX";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors._CorridorStartPointX_PreviewMouseUp"/></summary>
        public const string _CorridorStartPointX_PreviewMouseUp = "_CorridorStartPointX_PreviewMouseUp";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors._CorridorStartPointX_GotFocus"/></summary>
        public const string _CorridorStartPointX_GotFocus = "_CorridorStartPointX_GotFocus";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors._CorridorStartPointX_PreviewMouseLeftButtonDown"/></summary>
        public const string _CorridorStartPointX_PreviewMouseLeftButtonDown = "_CorridorStartPointX_PreviewMouseLeftButtonDown";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.DraggablePoint_MouseLeftButtonDown"/></summary>
        public const string DraggablePoint_MouseLeftButtonDown = "DraggablePoint_MouseLeftButtonDown";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.DraggablePoint_KeyDown"/></summary>
        public const string DraggablePoint_KeyDown = "DraggablePoint_KeyDown";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._ActiveDraggablePoint"/></summary>
        public const string _ActiveDraggablePoint = "_ActiveDraggablePoint";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.ActiveDraggablePoint"/></summary>
        public const string ActiveDraggablePoint = "ActiveDraggablePoint";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.otherHLines"/></summary>
        public const string otherHLines = "otherHLines";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.otherVLines"/></summary>
        public const string otherVLines = "otherVLines";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.Corridors_Closing"/></summary>
        public const string Corridors_Closing = "Corridors_Closing";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.ds"/></summary>
        public const string ds = "ds";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.dsAvg1"/></summary>
        public const string dsAvg1 = "dsAvg1";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.dsAvg2"/></summary>
        public const string dsAvg2 = "dsAvg2";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.dsAvg3"/></summary>
        public const string dsAvg3 = "dsAvg3";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.dsVolts"/></summary>
        public const string dsVolts = "dsVolts";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.dsVoltsPoly"/></summary>
        public const string dsVoltsPoly = "dsVoltsPoly";

        /// <summary>Metadata for class <see cref="HedgeHog.Corridors.DraggablePointInfo"/></summary>
        public static class DraggablePointInfoMetadata
        {
                        /// <summary>Refers to property <see cref="HedgeHog.Corridors.DraggablePointInfo.DraggablePoint"/></summary>
            public const string DraggablePoint = "DraggablePoint";

            /// <summary>Refers to property <see cref="HedgeHog.Corridors.DraggablePointInfo.TradesCount"/></summary>
            public const string TradesCount = "TradesCount";


            /// <summary>Refers to property <see cref="HedgeHog.Corridors.DraggablePointInfo.DraggablePoint"/></summary>
            public static PropertyPath DraggablePointPath { get { return new PropertyPath("DraggablePoint"); } }

            /// <summary>Refers to property <see cref="HedgeHog.Corridors.DraggablePointInfo.TradesCount"/></summary>
            public static PropertyPath TradesCountPath { get { return new PropertyPath("TradesCount"); } }

        }

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.BuyRates"/></summary>
        public const string BuyRates = "BuyRates";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.SellRates"/></summary>
        public const string SellRates = "SellRates";

        /// <summary>Metadata for class <see cref="HedgeHog.Corridors.BuySellLevel"/></summary>
        public static class BuySellLevelMetadata
        {
                        /// <summary>Refers to property <see cref="HedgeHog.Corridors.BuySellLevel.Rate"/></summary>
            public const string Rate = "Rate";

            /// <summary>Refers to property <see cref="HedgeHog.Corridors.BuySellLevel.CrossCount"/></summary>
            public const string CrossCount = "CrossCount";

            /// <summary>Refers to property <see cref="HedgeHog.Corridors.BuySellLevel.IsBuy"/></summary>
            public const string IsBuy = "IsBuy";


            /// <summary>Refers to property <see cref="HedgeHog.Corridors.BuySellLevel.Rate"/></summary>
            public static PropertyPath RatePath { get { return new PropertyPath("Rate"); } }

            /// <summary>Refers to property <see cref="HedgeHog.Corridors.BuySellLevel.CrossCount"/></summary>
            public static PropertyPath CrossCountPath { get { return new PropertyPath("CrossCount"); } }

            /// <summary>Refers to property <see cref="HedgeHog.Corridors.BuySellLevel.IsBuy"/></summary>
            public static PropertyPath IsBuyPath { get { return new PropertyPath("IsBuy"); } }

        }

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.StrokeArrayForTrades"/></summary>
        public const string StrokeArrayForTrades = "StrokeArrayForTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.tradeLines"/></summary>
        public const string tradeLines = "tradeLines";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.SetTradeLines"/></summary>
        public const string SetTradeLines = "SetTradeLines";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.SetBuyRates"/></summary>
        public const string SetBuyRates = "SetBuyRates";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.SetSellRates"/></summary>
        public const string SetSellRates = "SetSellRates";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.CleanSuppResRates"/></summary>
        public const string CleanSuppResRates = "CleanSuppResRates";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._isShiftDown"/></summary>
        public const string _isShiftDown = "_isShiftDown";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.SetBuySellRates"/></summary>
        public const string SetBuySellRates = "SetBuySellRates";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.CreatePointY"/></summary>
        public const string CreatePointY = "CreatePointY";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.FibLevels"/></summary>
        public const string FibLevels = "FibLevels";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.GannAngles"/></summary>
        public const string GannAngles = "GannAngles";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.LineToPoint"/></summary>
        public const string LineToPoint = "LineToPoint";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.CreateCurrencyDataSource"/></summary>
        public const string CreateCurrencyDataSource = "CreateCurrencyDataSource";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._gannAnglesCount"/></summary>
        public const string _gannAnglesCount = "_gannAnglesCount";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.GannAnglesCount"/></summary>
        public const string GannAnglesCount = "GannAnglesCount";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._GannAngle1x1Index"/></summary>
        public const string _GannAngle1x1Index = "_GannAngle1x1Index";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.GannAngle1x1Index"/></summary>
        public const string GannAngle1x1Index = "GannAngle1x1Index";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.InsertGannLines"/></summary>
        public const string InsertGannLines = "InsertGannLines";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._DoShowFibLines"/></summary>
        public const string _DoShowFibLines = "_DoShowFibLines";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.DoShowFibLines"/></summary>
        public const string DoShowFibLines = "DoShowFibLines";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.InsertFibLines"/></summary>
        public const string InsertFibLines = "InsertFibLines";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.GuessPipSize"/></summary>
        public const string GuessPipSize = "GuessPipSize";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.plotter_PreviewKeyDown"/></summary>
        public const string plotter_PreviewKeyDown = "plotter_PreviewKeyDown";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.AdjustDraggablePointByPip"/></summary>
        public const string AdjustDraggablePointByPip = "AdjustDraggablePointByPip";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.plotter_KeyDown"/></summary>
        public const string plotter_KeyDown = "plotter_KeyDown";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.CorridorStartPositionOld"/></summary>
        public const string CorridorStartPositionOld = "CorridorStartPositionOld";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.GetPriceStartDate"/></summary>
        public const string GetPriceStartDate = "GetPriceStartDate";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.corridorStartDateScheduler"/></summary>
        public const string corridorStartDateScheduler = "corridorStartDateScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.CorridorStartPointX_IsMouseCapturedChanged"/></summary>
        public const string CorridorStartPointX_IsMouseCapturedChanged = "CorridorStartPointX_IsMouseCapturedChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.CorridorStartPointX_PositionChanged"/></summary>
        public const string CorridorStartPointX_PositionChanged = "CorridorStartPointX_PositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.OnBuySellRemoved"/></summary>
        public const string OnBuySellRemoved = "OnBuySellRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.OnBuySellAdded"/></summary>
        public const string OnBuySellAdded = "OnBuySellAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.OnPlay"/></summary>
        public const string OnPlay = "OnPlay";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.OnCorridorStartPositionChanged"/></summary>
        public const string OnCorridorStartPositionChanged = "OnCorridorStartPositionChanged";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors._suppResChangeScheduler"/></summary>
        public const string _suppResChangeScheduler = "_suppResChangeScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.OnSupportResistanceChanged"/></summary>
        public const string OnSupportResistanceChanged = "OnSupportResistanceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.UpdateTicks"/></summary>
        public const string UpdateTicks = "UpdateTicks";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.inRendering"/></summary>
        public const string inRendering = "inRendering";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.IsPlotterInitialised"/></summary>
        public const string IsPlotterInitialised = "IsPlotterInitialised";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.AddTicks"/></summary>
        public const string AddTicks = "AddTicks";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.SetPoint"/></summary>
        public const string SetPoint = "SetPoint";

        /// <summary>Refers to field <see cref="HedgeHog.Corridors.hasGannAnglesFilter"/></summary>
        public const string hasGannAnglesFilter = "hasGannAnglesFilter";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.SetGannAngles"/></summary>
        public const string SetGannAngles = "SetGannAngles";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.SetFibLevels"/></summary>
        public const string SetFibLevels = "SetFibLevels";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.ReAdjustXY"/></summary>
        public const string ReAdjustXY = "ReAdjustXY";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.ConvertToDateTime"/></summary>
        public const string ConvertToDateTime = "ConvertToDateTime";

        /// <summary>Refers to method <see cref="HedgeHog.Corridors.ConvertToDouble"/></summary>
        public const string ConvertToDouble = "ConvertToDouble";

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.SelectedGannAngleIndex"/></summary>
        public const string SelectedGannAngleIndex = "SelectedGannAngleIndex";


        /// <summary>Refers to property <see cref="HedgeHog.Corridors.IsInPlay"/></summary>
        public static PropertyPath IsInPlayPath { get { return new PropertyPath("IsInPlay"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.DelayInSeconds"/></summary>
        public static PropertyPath DelayInSecondsPath { get { return new PropertyPath("DelayInSeconds"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.PlayStartDate"/></summary>
        public static PropertyPath PlayStartDatePath { get { return new PropertyPath("PlayStartDate"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.SuppResMinimumDistance"/></summary>
        public static PropertyPath SuppResMinimumDistancePath { get { return new PropertyPath("SuppResMinimumDistance"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CorridorHeightMultiplier"/></summary>
        public static PropertyPath CorridorHeightMultiplierPath { get { return new PropertyPath("CorridorHeightMultiplier"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.GetPriceFunc"/></summary>
        public static PropertyPath GetPriceFuncPath { get { return new PropertyPath("GetPriceFunc"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CenterOfMassBuy"/></summary>
        public static PropertyPath CenterOfMassBuyPath { get { return new PropertyPath("CenterOfMassBuy"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CenterOfMassSell"/></summary>
        public static PropertyPath CenterOfMassSellPath { get { return new PropertyPath("CenterOfMassSell"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.PriceLineGraph"/></summary>
        public static PropertyPath PriceLineGraphPath { get { return new PropertyPath("PriceLineGraph"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineMax"/></summary>
        public static PropertyPath LineMaxPath { get { return new PropertyPath("LineMax"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineMaxAvg"/></summary>
        public static PropertyPath LineMaxAvgPath { get { return new PropertyPath("LineMaxAvg"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineMin"/></summary>
        public static PropertyPath LineMinPath { get { return new PropertyPath("LineMin"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineMinAvg"/></summary>
        public static PropertyPath LineMinAvgPath { get { return new PropertyPath("LineMinAvg"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.DoShowCenterOfMass"/></summary>
        public static PropertyPath DoShowCenterOfMassPath { get { return new PropertyPath("DoShowCenterOfMass"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.centerOfMassHLineHigh"/></summary>
        public static PropertyPath centerOfMassHLineHighPath { get { return new PropertyPath("centerOfMassHLineHigh"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CenterOfMassHLineHigh"/></summary>
        public static PropertyPath CenterOfMassHLineHighPath { get { return new PropertyPath("CenterOfMassHLineHigh"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.centerOfMassHLineLow"/></summary>
        public static PropertyPath centerOfMassHLineLowPath { get { return new PropertyPath("centerOfMassHLineLow"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CenterOfMassHLineLow"/></summary>
        public static PropertyPath CenterOfMassHLineLowPath { get { return new PropertyPath("CenterOfMassHLineLow"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.MagnetPrice"/></summary>
        public static PropertyPath MagnetPricePath { get { return new PropertyPath("MagnetPrice"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineNetSell"/></summary>
        public static PropertyPath LineNetSellPath { get { return new PropertyPath("LineNetSell"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineNetBuy"/></summary>
        public static PropertyPath LineNetBuyPath { get { return new PropertyPath("LineNetBuy"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineAvgAsk"/></summary>
        public static PropertyPath LineAvgAskPath { get { return new PropertyPath("LineAvgAsk"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineAvgBid"/></summary>
        public static PropertyPath LineAvgBidPath { get { return new PropertyPath("LineAvgBid"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.lineTimeMax"/></summary>
        public static PropertyPath lineTimeMaxPath { get { return new PropertyPath("lineTimeMax"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineTimeMax"/></summary>
        public static PropertyPath LineTimeMaxPath { get { return new PropertyPath("LineTimeMax"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineTimeMin"/></summary>
        public static PropertyPath LineTimeMinPath { get { return new PropertyPath("LineTimeMin"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.LineTimeAvg"/></summary>
        public static PropertyPath LineTimeAvgPath { get { return new PropertyPath("LineTimeAvg"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.GannLine"/></summary>
        public static PropertyPath GannLinePath { get { return new PropertyPath("GannLine"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.TrendLine"/></summary>
        public static PropertyPath TrendLinePath { get { return new PropertyPath("TrendLine"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.TrendLine1"/></summary>
        public static PropertyPath TrendLine1Path { get { return new PropertyPath("TrendLine1"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.TrendLine11"/></summary>
        public static PropertyPath TrendLine11Path { get { return new PropertyPath("TrendLine11"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.TrendLine2"/></summary>
        public static PropertyPath TrendLine2Path { get { return new PropertyPath("TrendLine2"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.TrendLine22"/></summary>
        public static PropertyPath TrendLine22Path { get { return new PropertyPath("TrendLine22"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.GannAngleOffsetPoint"/></summary>
        public static PropertyPath GannAngleOffsetPointPath { get { return new PropertyPath("GannAngleOffsetPoint"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.CorridorStartPointX"/></summary>
        public static PropertyPath CorridorStartPointXPath { get { return new PropertyPath("CorridorStartPointX"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.ActiveDraggablePoint"/></summary>
        public static PropertyPath ActiveDraggablePointPath { get { return new PropertyPath("ActiveDraggablePoint"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.GannAnglesCount"/></summary>
        public static PropertyPath GannAnglesCountPath { get { return new PropertyPath("GannAnglesCount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.GannAngle1x1Index"/></summary>
        public static PropertyPath GannAngle1x1IndexPath { get { return new PropertyPath("GannAngle1x1Index"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.DoShowFibLines"/></summary>
        public static PropertyPath DoShowFibLinesPath { get { return new PropertyPath("DoShowFibLines"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Corridors.SelectedGannAngleIndex"/></summary>
        public static PropertyPath SelectedGannAngleIndexPath { get { return new PropertyPath("SelectedGannAngleIndex"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.ChartTick"/></summary>
    public static class ChartTickMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.ChartTick.price"/></summary>
        public const string price = "price";

        /// <summary>Refers to property <see cref="HedgeHog.ChartTick.Price"/></summary>
        public const string Price = "Price";

        /// <summary>Refers to property <see cref="HedgeHog.ChartTick.Time"/></summary>
        public const string Time = "Time";


        /// <summary>Refers to property <see cref="HedgeHog.ChartTick.Price"/></summary>
        public static PropertyPath PricePath { get { return new PropertyPath("Price"); } }

        /// <summary>Refers to property <see cref="HedgeHog.ChartTick.Time"/></summary>
        public static PropertyPath TimePath { get { return new PropertyPath("Time"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.BuySellRateRemovedEventArgs"/></summary>
    public static class BuySellRateRemovedEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.BuySellRateRemovedEventArgs.UID"/></summary>
        public const string UID = "UID";


        /// <summary>Refers to property <see cref="HedgeHog.BuySellRateRemovedEventArgs.UID"/></summary>
        public static PropertyPath UIDPath { get { return new PropertyPath("UID"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.BuySellRateAddedEventArgs"/></summary>
    public static class BuySellRateAddedEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.BuySellRateAddedEventArgs.IsBuy"/></summary>
        public const string IsBuy = "IsBuy";

        /// <summary>Refers to property <see cref="HedgeHog.BuySellRateAddedEventArgs.Rate"/></summary>
        public const string Rate = "Rate";


        /// <summary>Refers to property <see cref="HedgeHog.BuySellRateAddedEventArgs.IsBuy"/></summary>
        public static PropertyPath IsBuyPath { get { return new PropertyPath("IsBuy"); } }

        /// <summary>Refers to property <see cref="HedgeHog.BuySellRateAddedEventArgs.Rate"/></summary>
        public static PropertyPath RatePath { get { return new PropertyPath("Rate"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.PlayEventArgs"/></summary>
    public static class PlayEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.PlayEventArgs.Play"/></summary>
        public const string Play = "Play";

        /// <summary>Refers to property <see cref="HedgeHog.PlayEventArgs.StartDate"/></summary>
        public const string StartDate = "StartDate";

        /// <summary>Refers to property <see cref="HedgeHog.PlayEventArgs.Delay"/></summary>
        public const string Delay = "Delay";


        /// <summary>Refers to property <see cref="HedgeHog.PlayEventArgs.Play"/></summary>
        public static PropertyPath PlayPath { get { return new PropertyPath("Play"); } }

        /// <summary>Refers to property <see cref="HedgeHog.PlayEventArgs.StartDate"/></summary>
        public static PropertyPath StartDatePath { get { return new PropertyPath("StartDate"); } }

        /// <summary>Refers to property <see cref="HedgeHog.PlayEventArgs.Delay"/></summary>
        public static PropertyPath DelayPath { get { return new PropertyPath("Delay"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.GannAngleOffsetChangedEventArgs"/></summary>
    public static class GannAngleOffsetChangedEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.GannAngleOffsetChangedEventArgs.Offset"/></summary>
        public const string Offset = "Offset";


        /// <summary>Refers to property <see cref="HedgeHog.GannAngleOffsetChangedEventArgs.Offset"/></summary>
        public static PropertyPath OffsetPath { get { return new PropertyPath("Offset"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.SupportResistanceChangedEventArgs"/></summary>
    public static class SupportResistanceChangedEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.SupportResistanceChangedEventArgs.UID"/></summary>
        public const string UID = "UID";


        /// <summary>Refers to property <see cref="HedgeHog.SupportResistanceChangedEventArgs.UID"/></summary>
        public static PropertyPath UIDPath { get { return new PropertyPath("UID"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.CorridorPositionChangedEventArgs"/></summary>
    public static class CorridorPositionChangedEventArgsMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.PositionChangedBaseEventArgs<T>"/></summary>
    public static class PositionChangedBaseEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.PositionChangedBaseEventArgs{T}.NewPosition"/></summary>
        public const string NewPosition = "NewPosition";

        /// <summary>Refers to property <see cref="HedgeHog.PositionChangedBaseEventArgs{T}.OldPosition"/></summary>
        public const string OldPosition = "OldPosition";


        /// <summary>Refers to property <see cref="HedgeHog.PositionChangedBaseEventArgs{T}.NewPosition"/></summary>
        public static PropertyPath NewPositionPath { get { return new PropertyPath("NewPosition"); } }

        /// <summary>Refers to property <see cref="HedgeHog.PositionChangedBaseEventArgs{T}.OldPosition"/></summary>
        public static PropertyPath OldPositionPath { get { return new PropertyPath("OldPosition"); } }

    }

}

namespace HedgeHog.Charter.FileMetadata.Images.Metadata
{
    /// <summary>Metadata for File DownArrow-32.png</summary>
    public static class DownArrow32Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/Images/DownArrow-32.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Images/DownArrow-32.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Images/DownArrow-32.png")); } }


    }

}

namespace HedgeHog.Charter.FileMetadata.Properties.Metadata
{
    /// <summary>Metadata for File Resources.resx</summary>
    public static class ResourcesResx    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/Properties/Resources.resx", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Properties/Resources.resx"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Properties/Resources.resx")); } }


    }

    /// <summary>Metadata for File Settings.settings</summary>
    public static class SettingsSettings    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/Properties/Settings.settings", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Properties/Settings.settings"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Properties/Settings.settings")); } }


    }

}

namespace HedgeHog.Charter.Properties.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Charter.Properties.Resources"/></summary>
    public static class ResourcesMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Charter.Properties.Resources.resourceMan"/></summary>
        public const string resourceMan = "resourceMan";

        /// <summary>Refers to field <see cref="HedgeHog.Charter.Properties.Resources.resourceCulture"/></summary>
        public const string resourceCulture = "resourceCulture";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Resources.ResourceManager"/></summary>
        public const string ResourceManager = "ResourceManager";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Resources.Culture"/></summary>
        public const string Culture = "Culture";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Resources.ResourceManager"/></summary>
        public static PropertyPath ResourceManagerPath { get { return new PropertyPath("ResourceManager"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Resources.Culture"/></summary>
        public static PropertyPath CulturePath { get { return new PropertyPath("Culture"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Charter.Properties.Settings"/></summary>
    public static class SettingsMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Charter.Properties.Settings.defaultInstance"/></summary>
        public const string defaultInstance = "defaultInstance";

        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Settings.Default"/></summary>
        public const string Default = "Default";


        /// <summary>Refers to property <see cref="HedgeHog.Charter.Properties.Settings.Default"/></summary>
        public static PropertyPath DefaultPath { get { return new PropertyPath("Default"); } }

    }

}

namespace HedgeHog.Charter.FileMetadata.Themes.Metadata
{
    /// <summary>Metadata for XAML Generic.xaml</summary>
    public static class GenericXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Charter;component/Themes/Generic.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Themes/Generic.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Charter;component/Themes/Generic.xaml")); } }


    }

}

#pragma warning enable
// ReSharper restore PossibleNullReferenceException
