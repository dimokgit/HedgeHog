

// ReSharper disable PossibleNullReferenceException
/*
This code was automatically generated by Daniel Vaughan's metadata generator.
Changes to this file may be lost if regeneration occurs.
http://danielvaughan.orpius.com
*/
using System.Windows;
using System.Windows.Media.Imaging;
using System;
using System.Linq;
using System.Linq.Expressions;


#pragma warning disable 
namespace HedgeHog.Alice.Client.FileMetadata.Metadata
{
    /// <summary>Metadata for File app.config</summary>
    public static class AppConfig    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/app.config", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/app.config"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/app.config")); } }


    }

    /// <summary>Metadata for XAML App.xaml</summary>
    public static class AppXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/App.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/App.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/App.xaml")); } }

            /// <summary>Represents x:Key="BoolToColorConverter"/></summary>
            public static string BoolToColorConverterKey { get { return "BoolToColorConverter"; } }

            /// <summary>Represents x:Key="ProfitToColorConverter"/></summary>
            public static string ProfitToColorConverterKey { get { return "ProfitToColorConverter"; } }

            /// <summary>Represents x:Key="DateTimeConverter"/></summary>
            public static string DateTimeConverterKey { get { return "DateTimeConverter"; } }

            /// <summary>Represents x:Key="BoolToSrtingConverter"/></summary>
            public static string BoolToSrtingConverterKey { get { return "BoolToSrtingConverter"; } }

            /// <summary>Represents x:Key="InvertBooleanConverter"/></summary>
            public static string InvertBooleanConverterKey { get { return "InvertBooleanConverter"; } }

            /// <summary>Represents x:Key="PassThroughConverter"/></summary>
            public static string PassThroughConverterKey { get { return "PassThroughConverter"; } }

            /// <summary>Represents x:Key="TemplatedParentDataContextConverter"/></summary>
            public static string TemplatedParentDataContextConverterKey { get { return "TemplatedParentDataContextConverter"; } }

            /// <summary>Represents x:Key="ReadOnlyDataGridStyle"/></summary>
            public static string ReadOnlyDataGridStyleKey { get { return "ReadOnlyDataGridStyle"; } }


    }

    /// <summary>Metadata for File Controls</summary>
    public static class Controls    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Controls", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Controls"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Controls")); } }


    }

    /// <summary>Metadata for File CS_4_0.tt</summary>
    public static class CS_4_0Tt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/CS_4_0.tt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/CS_4_0.tt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/CS_4_0.tt")); } }


    }

    /// <summary>Metadata for File Data</summary>
    public static class Data    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Data", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Data"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Data")); } }


    }

    /// <summary>Metadata for XAML Dictionary1.xaml</summary>
    public static class Dictionary1Xaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Dictionary1.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Dictionary1.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Dictionary1.xaml")); } }


    }

    /// <summary>Metadata for XAML DockingWindow.xaml</summary>
    public static class DockingWindowXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/DockingWindow.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/DockingWindow.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/DockingWindow.xaml")); } }

            /// <summary>Represents x:Key="GlobalStorage"/></summary>
            public static string GlobalStorageKey { get { return "GlobalStorage"; } }

            /// <summary>Represents x:Key="SnapshotTemplate"/></summary>
            public static string SnapshotTemplateKey { get { return "SnapshotTemplate"; } }

            /// <summary>Represents x:Key="CharterHeaderTemplate"/></summary>
            public static string CharterHeaderTemplateKey { get { return "CharterHeaderTemplate"; } }

            /// <summary>Represents x:Key="RadPaneContextMenu"/></summary>
            public static string RadPaneContextMenuKey { get { return "RadPaneContextMenu"; } }

            /// <summary>Represents x:Key="StopCellEditTemplate"/></summary>
            public static string StopCellEditTemplateKey { get { return "StopCellEditTemplate"; } }

            /// <summary>Represents x:Key="GrossCellTemplate"/></summary>
            public static string GrossCellTemplateKey { get { return "GrossCellTemplate"; } }

            /// <summary>Represents x:Key="TradesOnServer"/></summary>
            public static string TradesOnServerKey { get { return "TradesOnServer"; } }

            /// <summary>Represents x:Key="ClosedTradesTemplate"/></summary>
            public static string ClosedTradesTemplateKey { get { return "ClosedTradesTemplate"; } }

            /// <summary>Represents x:Key="MarketsTemplate"/></summary>
            public static string MarketsTemplateKey { get { return "MarketsTemplate"; } }

            /// <summary>Represents x:Key="OpenTradesHeaderTemplate"/></summary>
            public static string OpenTradesHeaderTemplateKey { get { return "OpenTradesHeaderTemplate"; } }

            /// <summary>Represents x:Key="OpenTradesTitleTemplate"/></summary>
            public static string OpenTradesTitleTemplateKey { get { return "OpenTradesTitleTemplate"; } }

            /// <summary>Represents x:Key="OrdersOnServer"/></summary>
            public static string OrdersOnServerKey { get { return "OrdersOnServer"; } }

            /// <summary>Represents x:Key="DeleteAccountCellTemplate"/></summary>
            public static string DeleteAccountCellTemplateKey { get { return "DeleteAccountCellTemplate"; } }

            /// <summary>Represents x:Key="CloseServerTradeTemplate"/></summary>
            public static string CloseServerTradeTemplateKey { get { return "CloseServerTradeTemplate"; } }


    }

    /// <summary>Metadata for File HedgeHog.ico</summary>
    public static class HedgeHogIco    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/HedgeHog.ico", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/HedgeHog.ico"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/HedgeHog.ico")); } }


    }

    /// <summary>Metadata for XAML MainWindow.xaml</summary>
    public static class MainWindowXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/MainWindow.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/MainWindow.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/MainWindow.xaml")); } }

            /// <summary>Represents x:Key="StopCellEditTemplate"/></summary>
            public static string StopCellEditTemplateKey { get { return "StopCellEditTemplate"; } }

            /// <summary>Represents x:Key="GrossCellTemplate"/></summary>
            public static string GrossCellTemplateKey { get { return "GrossCellTemplate"; } }

            /// <summary>Represents x:Key="TradesOnServer"/></summary>
            public static string TradesOnServerKey { get { return "TradesOnServer"; } }

            /// <summary>Represents x:Key="DeleteAccountCellTemplate"/></summary>
            public static string DeleteAccountCellTemplateKey { get { return "DeleteAccountCellTemplate"; } }

            /// <summary>Represents x:Key="CloseServerTradeTemplate"/></summary>
            public static string CloseServerTradeTemplateKey { get { return "CloseServerTradeTemplate"; } }


    }

    /// <summary>Metadata for File MVVMLight.Nuget.Readme.txt</summary>
    public static class MVVMLightNugetReadmeTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/MVVMLight.Nuget.Readme.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/MVVMLight.Nuget.Readme.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/MVVMLight.Nuget.Readme.txt")); } }


    }

    /// <summary>Metadata for File packages.config</summary>
    public static class PackagesConfig    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/packages.config", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/packages.config"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/packages.config")); } }


    }

}


namespace HedgeHog.Alice.Client.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.App"/></summary>
    public static class AppMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.App.IsInDesignMode"/></summary>
        public const string IsInDesignMode = "IsInDesignMode";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.App.container"/></summary>
        public const string container = "container";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.App.ChildWindows"/></summary>
        public const string ChildWindows = "ChildWindows";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.App.Resources"/></summary>
        public const string Resources = "Resources";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.App.App_DispatcherUnhandledException"/></summary>
        public const string App_DispatcherUnhandledException = "App_DispatcherUnhandledException";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.App.GetTraderModelBase"/></summary>
        public const string GetTraderModelBase = "GetTraderModelBase";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.App.Application_Exit"/></summary>
        public const string Application_Exit = "Application_Exit";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.App.OnStartup"/></summary>
        public const string OnStartup = "OnStartup";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.App.OnExit"/></summary>
        public const string OnExit = "OnExit";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.App.IsInDesignMode"/></summary>
        public static PropertyPath IsInDesignModePath { get { return new PropertyPath("IsInDesignMode"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.App.Resources"/></summary>
        public static PropertyPath ResourcesPath { get { return new PropertyPath("Resources"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.ProfitToColorConverter"/></summary>
    public static class ProfitToColorConverterMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.ProfitToColorConverter.defaultInstance"/></summary>
        public const string defaultInstance = "defaultInstance";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.ProfitToColorConverter.Default"/></summary>
        public const string Default = "Default";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.ProfitToColorConverter.Convert"/></summary>
        public const string Convert = "Convert";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.ProfitToColorConverter.ConvertBack"/></summary>
        public const string ConvertBack = "ConvertBack";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.ProfitToColorConverter.Default"/></summary>
        public static PropertyPath DefaultPath { get { return new PropertyPath("Default"); } }

    }

    /// <summary>Metadata for interface <see cref="HedgeHog.Alice.Client.IAccountHolder"/></summary>
    public static class IAccountHolderMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.IAccountHolder.Login"/></summary>
        public const string Login = "Login";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.MarketHours"/></summary>
    public static class MarketHoursMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.MarketHours._Market"/></summary>
        public const string _Market = "_Market";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MarketHours.Market"/></summary>
        public const string Market = "Market";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.MarketHours._TimeZone"/></summary>
        public const string _TimeZone = "_TimeZone";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MarketHours.TimeZone"/></summary>
        public const string TimeZone = "TimeZone";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.MarketHours._Opens"/></summary>
        public const string _Opens = "_Opens";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MarketHours.Opens"/></summary>
        public const string Opens = "Opens";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.MarketHours._Closes"/></summary>
        public const string _Closes = "_Closes";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MarketHours.Closes"/></summary>
        public const string Closes = "Closes";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.MarketHours._Status"/></summary>
        public const string _Status = "_Status";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MarketHours.Status"/></summary>
        public const string Status = "Status";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MarketHours.Market"/></summary>
        public static PropertyPath MarketPath { get { return new PropertyPath("Market"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MarketHours.TimeZone"/></summary>
        public static PropertyPath TimeZonePath { get { return new PropertyPath("TimeZone"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MarketHours.Opens"/></summary>
        public static PropertyPath OpensPath { get { return new PropertyPath("Opens"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MarketHours.Closes"/></summary>
        public static PropertyPath ClosesPath { get { return new PropertyPath("Closes"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MarketHours.Status"/></summary>
        public static PropertyPath StatusPath { get { return new PropertyPath("Status"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.MarketHoursHound"/></summary>
    public static class MarketHoursHoundMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MarketHoursHound.CleanHtml"/></summary>
        public const string CleanHtml = "CleanHtml";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MarketHoursHound.Fetch"/></summary>
        public const string Fetch = "Fetch";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Static"/></summary>
    public static class StaticMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Static.GetEntryOrderLimit"/></summary>
        public const string GetEntryOrderLimit = "GetEntryOrderLimit";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.DataGridStyleSelector"/></summary>
    public static class DataGridStyleSelectorMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DataGridStyleSelector.SelectStyle"/></summary>
        public const string SelectStyle = "SelectStyle";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TradeRequestManager"/></summary>
    public static class TradeRequestManagerMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradeRequestManager.RaiseTradeRequestManagerEvent"/></summary>
        public const string RaiseTradeRequestManagerEvent = "RaiseTradeRequestManagerEvent";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.openQueueScheduler"/></summary>
        public const string openQueueScheduler = "openQueueScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradeRequestManager.fw"/></summary>
        public const string fw = "fw";

        /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest"/></summary>
        public static class OpenRequestMetadata
        {
                        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest.pair"/></summary>
            public const string pair = "pair";

            /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest.buy"/></summary>
            public const string buy = "buy";

            /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest.lots"/></summary>
            public const string lots = "lots";

            /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest.serverTradeID"/></summary>
            public const string serverTradeID = "serverTradeID";

            /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest.pendingTrade"/></summary>
            public const string pendingTrade = "pendingTrade";


        }

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.closeQueue"/></summary>
        public const string closeQueue = "closeQueue";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.openQueue"/></summary>
        public const string openQueue = "openQueue";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradeRequestManager.AddOpenTradeRequest"/></summary>
        public const string AddOpenTradeRequest = "AddOpenTradeRequest";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradeRequestManager.RunOpenQueue"/></summary>
        public const string RunOpenQueue = "RunOpenQueue";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenTrade"/></summary>
        public const string OpenTrade = "OpenTrade";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradeRequestManager.fw"/></summary>
        public static PropertyPath fwPath { get { return new PropertyPath("fw"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TradeRequestManagerEventArgs"/></summary>
    public static class TradeRequestManagerEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradeRequestManagerEventArgs.Exception"/></summary>
        public const string Exception = "Exception";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradeRequestManagerEventArgs.Exception"/></summary>
        public static PropertyPath ExceptionPath { get { return new PropertyPath("Exception"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.MasterListChangedEventArgs"/></summary>
    public static class MasterListChangedEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MasterListChangedEventArgs.MasterTrades"/></summary>
        public const string MasterTrades = "MasterTrades";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MasterListChangedEventArgs.MasterTrades"/></summary>
        public static PropertyPath MasterTradesPath { get { return new PropertyPath("MasterTrades"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.NeedAccountInfoEventArgs"/></summary>
    public static class NeedAccountInfoEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.NeedAccountInfoEventArgs.Accounts"/></summary>
        public const string Accounts = "Accounts";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.NeedAccountInfoEventArgs.Accounts"/></summary>
        public static PropertyPath AccountsPath { get { return new PropertyPath("Accounts"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TraderModel"/></summary>
    public static class TraderModelMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._defaultLocker"/></summary>
        public const string _defaultLocker = "_defaultLocker";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._default"/></summary>
        public const string _default = "_default";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Default"/></summary>
        public const string Default = "Default";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._coreFX"/></summary>
        public const string _coreFX = "_coreFX";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CoreFX"/></summary>
        public const string CoreFX = "CoreFX";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster"/></summary>
        public const string fwMaster = "fwMaster";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.FWMaster"/></summary>
        public const string FWMaster = "FWMaster";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsLoggedIn"/></summary>
        public const string IsLoggedIn = "IsLoggedIn";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._isInLogin"/></summary>
        public const string _isInLogin = "_isInLogin";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsInLogin"/></summary>
        public const string IsInLogin = "IsInLogin";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsNotInLogin"/></summary>
        public const string IsNotInLogin = "IsNotInLogin";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.virtualTrader"/></summary>
        public const string virtualTrader = "virtualTrader";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualTrader"/></summary>
        public const string VirtualTrader = "VirtualTrader";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradesManager"/></summary>
        public const string TradesManager = "TradesManager";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._SessionStatus"/></summary>
        public const string _SessionStatus = "_SessionStatus";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SessionStatus"/></summary>
        public const string SessionStatus = "SessionStatus";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._ServerToLocalRatioValue"/></summary>
        public const string _ServerToLocalRatioValue = "_ServerToLocalRatioValue";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerToLocalRatioValue"/></summary>
        public const string ServerToLocalRatioValue = "ServerToLocalRatioValue";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerToLocalRatio"/></summary>
        public const string ServerToLocalRatio = "ServerToLocalRatio";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IsInVirtualTrading"/></summary>
        public const string _IsInVirtualTrading = "_IsInVirtualTrading";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsInVirtualTrading"/></summary>
        public const string IsInVirtualTrading = "IsInVirtualTrading";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualDateStart"/></summary>
        public const string _VirtualDateStart = "_VirtualDateStart";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualDateStart"/></summary>
        public const string VirtualDateStart = "VirtualDateStart";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualDelay"/></summary>
        public const string _VirtualDelay = "_VirtualDelay";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualDelay"/></summary>
        public const string VirtualDelay = "VirtualDelay";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualPause"/></summary>
        public const string _VirtualPause = "_VirtualPause";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualPause"/></summary>
        public const string VirtualPause = "VirtualPause";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualClearTest"/></summary>
        public const string _VirtualClearTest = "_VirtualClearTest";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualClearTest"/></summary>
        public const string VirtualClearTest = "VirtualClearTest";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualMonthsToTest"/></summary>
        public const string _VirtualMonthsToTest = "_VirtualMonthsToTest";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualMonthsToTest"/></summary>
        public const string VirtualMonthsToTest = "VirtualMonthsToTest";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.MasterAccount"/></summary>
        public const string MasterAccount = "MasterAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._tradingStatistics"/></summary>
        public const string _tradingStatistics = "_tradingStatistics";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingStatistics"/></summary>
        public const string TradingStatistics = "TradingStatistics";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnNeedTradingStatistics"/></summary>
        public const string OnNeedTradingStatistics = "OnNeedTradingStatistics";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnMasterTradeAccountChanged"/></summary>
        public const string OnMasterTradeAccountChanged = "OnMasterTradeAccountChanged";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._stepForwarRequery"/></summary>
        public const string _stepForwarRequery = "_stepForwarRequery";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.stepForwarRequery"/></summary>
        public const string stepForwarRequery = "stepForwarRequery";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._StepForwardCommand"/></summary>
        public const string _StepForwardCommand = "_StepForwardCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.StepForwardCommand"/></summary>
        public const string StepForwardCommand = "StepForwardCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CommandManager_RequerySuggested"/></summary>
        public const string CommandManager_RequerySuggested = "CommandManager_RequerySuggested";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel._StepForwardCommand_CanExecuteChanged"/></summary>
        public const string _StepForwardCommand_CanExecuteChanged = "_StepForwardCommand_CanExecuteChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnStepForward"/></summary>
        public const string OnStepForward = "OnStepForward";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._StepBackCommand"/></summary>
        public const string _StepBackCommand = "_StepBackCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.StepBackCommand"/></summary>
        public const string StepBackCommand = "StepBackCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnStepBack"/></summary>
        public const string OnStepBack = "OnStepBack";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnOrderToNoLoss"/></summary>
        public const string OnOrderToNoLoss = "OnOrderToNoLoss";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.RaiseMasterListChangedEvent"/></summary>
        public const string RaiseMasterListChangedEvent = "RaiseMasterListChangedEvent";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.RaiseSlaveLoginRequestEvent"/></summary>
        public const string RaiseSlaveLoginRequestEvent = "RaiseSlaveLoginRequestEvent";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMacrosCases"/></summary>
        public const string TradingMacrosCases = "TradingMacrosCases";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IsAccountManagerExpanded"/></summary>
        public const string _IsAccountManagerExpanded = "_IsAccountManagerExpanded";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsAccountManagerExpanded"/></summary>
        public const string IsAccountManagerExpanded = "IsAccountManagerExpanded";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.slaveAccounts"/></summary>
        public const string slaveAccounts = "slaveAccounts";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveAccounts"/></summary>
        public const string SlaveAccounts = "SlaveAccounts";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._ShowAllAccountsFilter"/></summary>
        public const string _ShowAllAccountsFilter = "_ShowAllAccountsFilter";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ShowAllAccountsFilter"/></summary>
        public const string ShowAllAccountsFilter = "ShowAllAccountsFilter";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._tradingAccountsList"/></summary>
        public const string _tradingAccountsList = "_tradingAccountsList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccountsList"/></summary>
        public const string TradingAccountsList = "TradingAccountsList";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.RaiseTradingMacroNameChanged"/></summary>
        public const string RaiseTradingMacroNameChanged = "RaiseTradingMacroNameChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.ta_PropertyChanged"/></summary>
        public const string ta_PropertyChanged = "ta_PropertyChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel._tradingAccountsList_CurrentChanged"/></summary>
        public const string _tradingAccountsList_CurrentChanged = "_tradingAccountsList_CurrentChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.FilterTradingAccounts"/></summary>
        public const string FilterTradingAccounts = "FilterTradingAccounts";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._TradingAccountsSet"/></summary>
        public const string _TradingAccountsSet = "_TradingAccountsSet";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccountsSet"/></summary>
        public const string TradingAccountsSet = "TradingAccountsSet";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel._TradingAccountsSet_CollectionChanged"/></summary>
        public const string _TradingAccountsSet_CollectionChanged = "_TradingAccountsSet_CollectionChanged";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMaster"/></summary>
        public const string TradingMaster = "TradingMaster";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMasters"/></summary>
        public const string TradingMasters = "TradingMasters";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingSlaves"/></summary>
        public const string TradingSlaves = "TradingSlaves";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._slaveModels"/></summary>
        public const string _slaveModels = "_slaveModels";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveModels"/></summary>
        public const string SlaveModels = "SlaveModels";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.orders"/></summary>
        public const string orders = "orders";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OrdersList"/></summary>
        public const string OrdersList = "OrdersList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTrades"/></summary>
        public const string ServerTrades = "ServerTrades";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTradesList"/></summary>
        public const string ServerTradesList = "ServerTradesList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ClosedTrades"/></summary>
        public const string ClosedTrades = "ClosedTrades";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ClosedTradesList"/></summary>
        public const string ClosedTradesList = "ClosedTradesList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Markets"/></summary>
        public const string Markets = "Markets";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.MarketsList"/></summary>
        public const string MarketsList = "MarketsList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AbsentTrades"/></summary>
        public const string AbsentTrades = "AbsentTrades";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AbsentTradesList"/></summary>
        public const string AbsentTradesList = "AbsentTradesList";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._accountModel"/></summary>
        public const string _accountModel = "_accountModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AccountModel"/></summary>
        public const string AccountModel = "AccountModel";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.AccountModel_CloseAllTrades"/></summary>
        public const string AccountModel_CloseAllTrades = "AccountModel_CloseAllTrades";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerAccountRow"/></summary>
        public const string ServerAccountRow = "ServerAccountRow";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CurrentLoss"/></summary>
        public const string CurrentLoss = "CurrentLoss";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._priceChangeSubscribtion"/></summary>
        public const string _priceChangeSubscribtion = "_priceChangeSubscribtion";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.PriceChangeSubscribtion"/></summary>
        public const string PriceChangeSubscribtion = "PriceChangeSubscribtion";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._tradeColsedSubscribtion"/></summary>
        public const string _tradeColsedSubscribtion = "_tradeColsedSubscribtion";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradeColsedSubscribtion"/></summary>
        public const string TradeColsedSubscribtion = "TradeColsedSubscribtion";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._orderChangedSubscribtion"/></summary>
        public const string _orderChangedSubscribtion = "_orderChangedSubscribtion";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OrderChangedSubscribtion"/></summary>
        public const string OrderChangedSubscribtion = "OrderChangedSubscribtion";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.SlaveAccountInfos"/></summary>
        public const string SlaveAccountInfos = "SlaveAccountInfos";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._slaveAccountInfosView"/></summary>
        public const string _slaveAccountInfosView = "_slaveAccountInfosView";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveAccountInfosView"/></summary>
        public const string SlaveAccountInfosView = "SlaveAccountInfosView";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._serverAddress"/></summary>
        public const string _serverAddress = "_serverAddress";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.serverAddressPostfix"/></summary>
        public const string serverAddressPostfix = "serverAddressPostfix";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.serverAddressSuffix"/></summary>
        public const string serverAddressSuffix = "serverAddressSuffix";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerAddress"/></summary>
        public const string ServerAddress = "ServerAddress";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.isInRemoteMode"/></summary>
        public const string isInRemoteMode = "isInRemoteMode";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._aliceMode"/></summary>
        public const string _aliceMode = "_aliceMode";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AliceMode"/></summary>
        public const string AliceMode = "AliceMode";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._serverTime"/></summary>
        public const string _serverTime = "_serverTime";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTime"/></summary>
        public const string ServerTime = "ServerTime";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.lastLogTime"/></summary>
        public const string lastLogTime = "lastLogTime";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LogText"/></summary>
        public const string LogText = "LogText";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._logExpandedTargetBlock"/></summary>
        public const string _logExpandedTargetBlock = "_logExpandedTargetBlock";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._logQueue"/></summary>
        public const string _logQueue = "_logQueue";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._log"/></summary>
        public const string _log = "_log";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Log"/></summary>
        public const string Log = "Log";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._LogExoandedTargetBlock"/></summary>
        public const string _LogExoandedTargetBlock = "_LogExoandedTargetBlock";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LogExoandedTargetBlock"/></summary>
        public const string LogExoandedTargetBlock = "LogExoandedTargetBlock";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsLogPinned"/></summary>
        public const string IsLogPinned = "IsLogPinned";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IsLogExpanded"/></summary>
        public const string _IsLogExpanded = "_IsLogExpanded";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsLogExpanded"/></summary>
        public const string IsLogExpanded = "IsLogExpanded";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._LoginCommand"/></summary>
        public const string _LoginCommand = "_LoginCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LoginCommand"/></summary>
        public const string LoginCommand = "LoginCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.Login"/></summary>
        public const string Login = "Login";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._ToggleShowAllAccountsCommand"/></summary>
        public const string _ToggleShowAllAccountsCommand = "_ToggleShowAllAccountsCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ToggleShowAllAccountsCommand"/></summary>
        public const string ToggleShowAllAccountsCommand = "ToggleShowAllAccountsCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.ToggleShowAllAccounts"/></summary>
        public const string ToggleShowAllAccounts = "ToggleShowAllAccounts";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._SetOrderToNoLossCommand"/></summary>
        public const string _SetOrderToNoLossCommand = "_SetOrderToNoLossCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SetOrderToNoLossCommand"/></summary>
        public const string SetOrderToNoLossCommand = "SetOrderToNoLossCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.SetOrderToNoLoss"/></summary>
        public const string SetOrderToNoLoss = "SetOrderToNoLoss";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IncreaseLimitCommand"/></summary>
        public const string _IncreaseLimitCommand = "_IncreaseLimitCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseLimitCommand"/></summary>
        public const string IncreaseLimitCommand = "IncreaseLimitCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseLimit"/></summary>
        public const string IncreaseLimit = "IncreaseLimit";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DecreaseLimitCommand"/></summary>
        public const string _DecreaseLimitCommand = "_DecreaseLimitCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseLimitCommand"/></summary>
        public const string DecreaseLimitCommand = "DecreaseLimitCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseLimit"/></summary>
        public const string DecreaseLimit = "DecreaseLimit";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DecreaseStopCommand"/></summary>
        public const string _DecreaseStopCommand = "_DecreaseStopCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseStopCommand"/></summary>
        public const string DecreaseStopCommand = "DecreaseStopCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseStop"/></summary>
        public const string DecreaseStop = "DecreaseStop";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IncreaseEntryStopCommand"/></summary>
        public const string _IncreaseEntryStopCommand = "_IncreaseEntryStopCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryStopCommand"/></summary>
        public const string IncreaseEntryStopCommand = "IncreaseEntryStopCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryStop"/></summary>
        public const string IncreaseEntryStop = "IncreaseEntryStop";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DecreaseEntryStopCommandCommand"/></summary>
        public const string _DecreaseEntryStopCommandCommand = "_DecreaseEntryStopCommandCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryStopCommandCommand"/></summary>
        public const string DecreaseEntryStopCommandCommand = "DecreaseEntryStopCommandCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryStopCommand"/></summary>
        public const string DecreaseEntryStopCommand = "DecreaseEntryStopCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IncreaseEntryLimitCommand"/></summary>
        public const string _IncreaseEntryLimitCommand = "_IncreaseEntryLimitCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryLimitCommand"/></summary>
        public const string IncreaseEntryLimitCommand = "IncreaseEntryLimitCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryLimit"/></summary>
        public const string IncreaseEntryLimit = "IncreaseEntryLimit";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DecreaseEntryLimitCommand"/></summary>
        public const string _DecreaseEntryLimitCommand = "_DecreaseEntryLimitCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryLimitCommand"/></summary>
        public const string DecreaseEntryLimitCommand = "DecreaseEntryLimitCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryLimit"/></summary>
        public const string DecreaseEntryLimit = "DecreaseEntryLimit";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IncreaseEntryRateCommand"/></summary>
        public const string _IncreaseEntryRateCommand = "_IncreaseEntryRateCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryRateCommand"/></summary>
        public const string IncreaseEntryRateCommand = "IncreaseEntryRateCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryRate"/></summary>
        public const string IncreaseEntryRate = "IncreaseEntryRate";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DecreaseEntryRateCommand"/></summary>
        public const string _DecreaseEntryRateCommand = "_DecreaseEntryRateCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryRateCommand"/></summary>
        public const string DecreaseEntryRateCommand = "DecreaseEntryRateCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryRate"/></summary>
        public const string DecreaseEntryRate = "DecreaseEntryRate";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._CancelEntryOrderCommand"/></summary>
        public const string _CancelEntryOrderCommand = "_CancelEntryOrderCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CancelEntryOrderCommand"/></summary>
        public const string CancelEntryOrderCommand = "CancelEntryOrderCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CancelEntryOrder"/></summary>
        public const string CancelEntryOrder = "CancelEntryOrder";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._EncreaseStopCommand"/></summary>
        public const string _EncreaseStopCommand = "_EncreaseStopCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.EncreaseStopCommand"/></summary>
        public const string EncreaseStopCommand = "EncreaseStopCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.EncreaseStop"/></summary>
        public const string EncreaseStop = "EncreaseStop";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DeleteTradingAccountCommand"/></summary>
        public const string _DeleteTradingAccountCommand = "_DeleteTradingAccountCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DeleteTradingAccountCommand"/></summary>
        public const string DeleteTradingAccountCommand = "DeleteTradingAccountCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DeleteTradingAccount"/></summary>
        public const string DeleteTradingAccount = "DeleteTradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._SaveTradingSlavesCommand"/></summary>
        public const string _SaveTradingSlavesCommand = "_SaveTradingSlavesCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SaveTradingSlavesCommand"/></summary>
        public const string SaveTradingSlavesCommand = "SaveTradingSlavesCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.SaveTradingSlaves"/></summary>
        public const string SaveTradingSlaves = "SaveTradingSlaves";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._OpenNewLocalAccountCommand"/></summary>
        public const string _OpenNewLocalAccountCommand = "_OpenNewLocalAccountCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewLocalAccountCommand"/></summary>
        public const string OpenNewLocalAccountCommand = "OpenNewLocalAccountCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewLocalAccount"/></summary>
        public const string OpenNewLocalAccount = "OpenNewLocalAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._AddNewSlaveAccountCommand"/></summary>
        public const string _AddNewSlaveAccountCommand = "_AddNewSlaveAccountCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AddNewSlaveAccountCommand"/></summary>
        public const string AddNewSlaveAccountCommand = "AddNewSlaveAccountCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.AddNewSlaveAccount"/></summary>
        public const string AddNewSlaveAccount = "AddNewSlaveAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._OpenNewServerAccountCommand"/></summary>
        public const string _OpenNewServerAccountCommand = "_OpenNewServerAccountCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewServerAccountCommand"/></summary>
        public const string OpenNewServerAccountCommand = "OpenNewServerAccountCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewServerAccount"/></summary>
        public const string OpenNewServerAccount = "OpenNewServerAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._UpdatePasswordCommand"/></summary>
        public const string _UpdatePasswordCommand = "_UpdatePasswordCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.UpdatePasswordCommand"/></summary>
        public const string UpdatePasswordCommand = "UpdatePasswordCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.UpdatePassword"/></summary>
        public const string UpdatePassword = "UpdatePassword";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._CloseServerTradeCommand"/></summary>
        public const string _CloseServerTradeCommand = "_CloseServerTradeCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CloseServerTradeCommand"/></summary>
        public const string CloseServerTradeCommand = "CloseServerTradeCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CloseServerTrade"/></summary>
        public const string CloseServerTrade = "CloseServerTrade";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.BackTestEventArgs"/></summary>
        public const string BackTestEventArgs = "BackTestEventArgs";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._BackTestStepBackCommand"/></summary>
        public const string _BackTestStepBackCommand = "_BackTestStepBackCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.BackTestStepBackCommand"/></summary>
        public const string BackTestStepBackCommand = "BackTestStepBackCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.BackTestStepBack"/></summary>
        public const string BackTestStepBack = "BackTestStepBack";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._LoadHistoryCommand"/></summary>
        public const string _LoadHistoryCommand = "_LoadHistoryCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LoadHistoryCommand"/></summary>
        public const string LoadHistoryCommand = "LoadHistoryCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.loadHistoryTast"/></summary>
        public const string loadHistoryTast = "loadHistoryTast";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.isLoadHistoryTaskRunning"/></summary>
        public const string isLoadHistoryTaskRunning = "isLoadHistoryTaskRunning";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.LoadHistory"/></summary>
        public const string LoadHistory = "LoadHistory";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._ReportCommand"/></summary>
        public const string _ReportCommand = "_ReportCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ReportCommand"/></summary>
        public const string ReportCommand = "ReportCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.Report"/></summary>
        public const string Report = "Report";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._CloseAllServerTradesCommand"/></summary>
        public const string _CloseAllServerTradesCommand = "_CloseAllServerTradesCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CloseAllServerTradesCommand"/></summary>
        public const string CloseAllServerTradesCommand = "CloseAllServerTradesCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CloseAllServerTrades"/></summary>
        public const string CloseAllServerTrades = "CloseAllServerTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._AccountLoginCommand"/></summary>
        public const string _AccountLoginCommand = "_AccountLoginCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AccountLoginCommand"/></summary>
        public const string AccountLoginCommand = "AccountLoginCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.AccountLogin"/></summary>
        public const string AccountLogin = "AccountLogin";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.LoginAsync"/></summary>
        public const string LoginAsync = "LoginAsync";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DatabasePath"/></summary>
        public const string _DatabasePath = "_DatabasePath";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DatabasePath"/></summary>
        public const string DatabasePath = "DatabasePath";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._OpenDataBaseCommand"/></summary>
        public const string _OpenDataBaseCommand = "_OpenDataBaseCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenDataBaseCommand"/></summary>
        public const string OpenDataBaseCommand = "OpenDataBaseCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OpenDataBase"/></summary>
        public const string OpenDataBase = "OpenDataBase";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._TestCommand"/></summary>
        public const string _TestCommand = "_TestCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TestCommand"/></summary>
        public const string TestCommand = "TestCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.Test"/></summary>
        public const string Test = "Test";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LoginInfo"/></summary>
        public const string LoginInfo = "LoginInfo";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccounts"/></summary>
        public const string TradingAccounts = "TradingAccounts";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._tradingAccount"/></summary>
        public const string _tradingAccount = "_tradingAccount";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccount"/></summary>
        public const string TradingAccount = "TradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._tradingPassword"/></summary>
        public const string _tradingPassword = "_tradingPassword";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingPassword"/></summary>
        public const string TradingPassword = "TradingPassword";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._tradingDemo"/></summary>
        public const string _tradingDemo = "_tradingDemo";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingDemo"/></summary>
        public const string TradingDemo = "TradingDemo";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TargetInPips"/></summary>
        public const string TargetInPips = "TargetInPips";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.GetTradesScheduler"/></summary>
        public const string GetTradesScheduler = "GetTradesScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Title"/></summary>
        public const string Title = "Title";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.isInDesign"/></summary>
        public const string isInDesign = "isInDesign";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.Using_FetchServerTrades"/></summary>
        public const string Using_FetchServerTrades = "Using_FetchServerTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._coreFXObserver"/></summary>
        public const string _coreFXObserver = "_coreFXObserver";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._throttleInterval"/></summary>
        public const string _throttleInterval = "_throttleInterval";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.UpdateTradingAccount"/></summary>
        public const string UpdateTradingAccount = "UpdateTradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._UpdateTradingAccountTargetBlock"/></summary>
        public const string _UpdateTradingAccountTargetBlock = "_UpdateTradingAccountTargetBlock";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.UpdateTradingAccountTargetBlock"/></summary>
        public const string UpdateTradingAccountTargetBlock = "UpdateTradingAccountTargetBlock";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._InvokeSyncronizeTargetBlock"/></summary>
        public const string _InvokeSyncronizeTargetBlock = "_InvokeSyncronizeTargetBlock";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.InvokeSyncronizeTargetBlock"/></summary>
        public const string InvokeSyncronizeTargetBlock = "InvokeSyncronizeTargetBlock";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.Initialize"/></summary>
        public const string Initialize = "Initialize";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnMasterTradeRemoved"/></summary>
        public const string OnMasterTradeRemoved = "OnMasterTradeRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_TradeRemoved"/></summary>
        public const string fwMaster_TradeRemoved = "fwMaster_TradeRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_Error"/></summary>
        public const string fwMaster_Error = "fwMaster_Error";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_PriceChanged"/></summary>
        public const string fwMaster_PriceChanged = "fwMaster_PriceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.RunPriceChanged"/></summary>
        public const string RunPriceChanged = "RunPriceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnMasterTradeAdded"/></summary>
        public const string OnMasterTradeAdded = "OnMasterTradeAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_TradeAdded"/></summary>
        public const string fwMaster_TradeAdded = "fwMaster_TradeAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_OrderChanged"/></summary>
        public const string fwMaster_OrderChanged = "fwMaster_OrderChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_OrderAdded"/></summary>
        public const string fwMaster_OrderAdded = "fwMaster_OrderAdded";

        /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TraderModel.InvokeSyncronizeEventArgs"/></summary>
        public static class InvokeSyncronizeEventArgsMetadata
        {
                        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.InvokeSyncronizeEventArgs.Account"/></summary>
            public const string Account = "Account";


            /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.InvokeSyncronizeEventArgs.Account"/></summary>
            public static PropertyPath AccountPath { get { return new PropertyPath("Account"); } }

        }

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnInvokeSyncronize"/></summary>
        public const string OnInvokeSyncronize = "OnInvokeSyncronize";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.InvokeSyncronize"/></summary>
        public const string InvokeSyncronize = "InvokeSyncronize";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsAliceActive"/></summary>
        public const string IsAliceActive = "IsAliceActive";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.UpdateTrades"/></summary>
        public const string UpdateTrades = "UpdateTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.UpdateOrders"/></summary>
        public const string UpdateOrders = "UpdateOrders";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.Using"/></summary>
        public const string Using = "Using";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.changeStop"/></summary>
        public const string changeStop = "changeStop";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.changeStops"/></summary>
        public const string changeStops = "changeStops";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.changeLimit"/></summary>
        public const string changeLimit = "changeLimit";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.changeLimits"/></summary>
        public const string changeLimits = "changeLimits";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.changeStopsOrLimits"/></summary>
        public const string changeStopsOrLimits = "changeStopsOrLimits";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CanExecuteStopLimitChange"/></summary>
        public const string CanExecuteStopLimitChange = "CanExecuteStopLimitChange";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CanExecuteStopChange"/></summary>
        public const string CanExecuteStopChange = "CanExecuteStopChange";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CanExecuteLimitChange"/></summary>
        public const string CanExecuteLimitChange = "CanExecuteLimitChange";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.stopDeltas"/></summary>
        public const string stopDeltas = "stopDeltas";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.limitDeltas"/></summary>
        public const string limitDeltas = "limitDeltas";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.AddtDelta"/></summary>
        public const string AddtDelta = "AddtDelta";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._changeLimitScheduler"/></summary>
        public const string _changeLimitScheduler = "_changeLimitScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.changeLimitScheduler"/></summary>
        public const string changeLimitScheduler = "changeLimitScheduler";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._changeStopScheduler"/></summary>
        public const string _changeStopScheduler = "_changeStopScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.changeStopScheduler"/></summary>
        public const string changeStopScheduler = "changeStopScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMacroName"/></summary>
        public const string TradingMacroName = "TradingMacroName";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CommissionByTrade"/></summary>
        public const string CommissionByTrade = "CommissionByTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CommissionByTrades"/></summary>
        public const string CommissionByTrades = "CommissionByTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.tradeIdLast"/></summary>
        public const string tradeIdLast = "tradeIdLast";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.AddCosedTrade"/></summary>
        public const string AddCosedTrade = "AddCosedTrade";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Default"/></summary>
        public static PropertyPath DefaultPath { get { return new PropertyPath("Default"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CoreFX"/></summary>
        public static PropertyPath CoreFXPath { get { return new PropertyPath("CoreFX"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.FWMaster"/></summary>
        public static PropertyPath FWMasterPath { get { return new PropertyPath("FWMaster"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsLoggedIn"/></summary>
        public static PropertyPath IsLoggedInPath { get { return new PropertyPath("IsLoggedIn"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsInLogin"/></summary>
        public static PropertyPath IsInLoginPath { get { return new PropertyPath("IsInLogin"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsNotInLogin"/></summary>
        public static PropertyPath IsNotInLoginPath { get { return new PropertyPath("IsNotInLogin"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualTrader"/></summary>
        public static PropertyPath VirtualTraderPath { get { return new PropertyPath("VirtualTrader"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradesManager"/></summary>
        public static PropertyPath TradesManagerPath { get { return new PropertyPath("TradesManager"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SessionStatus"/></summary>
        public static PropertyPath SessionStatusPath { get { return new PropertyPath("SessionStatus"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerToLocalRatioValue"/></summary>
        public static PropertyPath ServerToLocalRatioValuePath { get { return new PropertyPath("ServerToLocalRatioValue"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerToLocalRatio"/></summary>
        public static PropertyPath ServerToLocalRatioPath { get { return new PropertyPath("ServerToLocalRatio"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsInVirtualTrading"/></summary>
        public static PropertyPath IsInVirtualTradingPath { get { return new PropertyPath("IsInVirtualTrading"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualDateStart"/></summary>
        public static PropertyPath VirtualDateStartPath { get { return new PropertyPath("VirtualDateStart"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualDelay"/></summary>
        public static PropertyPath VirtualDelayPath { get { return new PropertyPath("VirtualDelay"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualPause"/></summary>
        public static PropertyPath VirtualPausePath { get { return new PropertyPath("VirtualPause"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualClearTest"/></summary>
        public static PropertyPath VirtualClearTestPath { get { return new PropertyPath("VirtualClearTest"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualMonthsToTest"/></summary>
        public static PropertyPath VirtualMonthsToTestPath { get { return new PropertyPath("VirtualMonthsToTest"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.MasterAccount"/></summary>
        public static PropertyPath MasterAccountPath { get { return new PropertyPath("MasterAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingStatistics"/></summary>
        public static PropertyPath TradingStatisticsPath { get { return new PropertyPath("TradingStatistics"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.stepForwarRequery"/></summary>
        public static PropertyPath stepForwarRequeryPath { get { return new PropertyPath("stepForwarRequery"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.StepForwardCommand"/></summary>
        public static PropertyPath StepForwardCommandPath { get { return new PropertyPath("StepForwardCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.StepBackCommand"/></summary>
        public static PropertyPath StepBackCommandPath { get { return new PropertyPath("StepBackCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMacrosCases"/></summary>
        public static PropertyPath TradingMacrosCasesPath { get { return new PropertyPath("TradingMacrosCases"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsAccountManagerExpanded"/></summary>
        public static PropertyPath IsAccountManagerExpandedPath { get { return new PropertyPath("IsAccountManagerExpanded"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveAccounts"/></summary>
        public static PropertyPath SlaveAccountsPath { get { return new PropertyPath("SlaveAccounts"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ShowAllAccountsFilter"/></summary>
        public static PropertyPath ShowAllAccountsFilterPath { get { return new PropertyPath("ShowAllAccountsFilter"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccountsList"/></summary>
        public static PropertyPath TradingAccountsListPath { get { return new PropertyPath("TradingAccountsList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccountsSet"/></summary>
        public static PropertyPath TradingAccountsSetPath { get { return new PropertyPath("TradingAccountsSet"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMaster"/></summary>
        public static PropertyPath TradingMasterPath { get { return new PropertyPath("TradingMaster"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMasters"/></summary>
        public static PropertyPath TradingMastersPath { get { return new PropertyPath("TradingMasters"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingSlaves"/></summary>
        public static PropertyPath TradingSlavesPath { get { return new PropertyPath("TradingSlaves"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveModels"/></summary>
        public static PropertyPath SlaveModelsPath { get { return new PropertyPath("SlaveModels"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.orders"/></summary>
        public static PropertyPath ordersPath { get { return new PropertyPath("orders"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OrdersList"/></summary>
        public static PropertyPath OrdersListPath { get { return new PropertyPath("OrdersList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTrades"/></summary>
        public static PropertyPath ServerTradesPath { get { return new PropertyPath("ServerTrades"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTradesList"/></summary>
        public static PropertyPath ServerTradesListPath { get { return new PropertyPath("ServerTradesList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ClosedTrades"/></summary>
        public static PropertyPath ClosedTradesPath { get { return new PropertyPath("ClosedTrades"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ClosedTradesList"/></summary>
        public static PropertyPath ClosedTradesListPath { get { return new PropertyPath("ClosedTradesList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Markets"/></summary>
        public static PropertyPath MarketsPath { get { return new PropertyPath("Markets"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.MarketsList"/></summary>
        public static PropertyPath MarketsListPath { get { return new PropertyPath("MarketsList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AbsentTrades"/></summary>
        public static PropertyPath AbsentTradesPath { get { return new PropertyPath("AbsentTrades"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AbsentTradesList"/></summary>
        public static PropertyPath AbsentTradesListPath { get { return new PropertyPath("AbsentTradesList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AccountModel"/></summary>
        public static PropertyPath AccountModelPath { get { return new PropertyPath("AccountModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerAccountRow"/></summary>
        public static PropertyPath ServerAccountRowPath { get { return new PropertyPath("ServerAccountRow"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CurrentLoss"/></summary>
        public static PropertyPath CurrentLossPath { get { return new PropertyPath("CurrentLoss"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.PriceChangeSubscribtion"/></summary>
        public static PropertyPath PriceChangeSubscribtionPath { get { return new PropertyPath("PriceChangeSubscribtion"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradeColsedSubscribtion"/></summary>
        public static PropertyPath TradeColsedSubscribtionPath { get { return new PropertyPath("TradeColsedSubscribtion"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OrderChangedSubscribtion"/></summary>
        public static PropertyPath OrderChangedSubscribtionPath { get { return new PropertyPath("OrderChangedSubscribtion"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveAccountInfosView"/></summary>
        public static PropertyPath SlaveAccountInfosViewPath { get { return new PropertyPath("SlaveAccountInfosView"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerAddress"/></summary>
        public static PropertyPath ServerAddressPath { get { return new PropertyPath("ServerAddress"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.isInRemoteMode"/></summary>
        public static PropertyPath isInRemoteModePath { get { return new PropertyPath("isInRemoteMode"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AliceMode"/></summary>
        public static PropertyPath AliceModePath { get { return new PropertyPath("AliceMode"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTime"/></summary>
        public static PropertyPath ServerTimePath { get { return new PropertyPath("ServerTime"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LogText"/></summary>
        public static PropertyPath LogTextPath { get { return new PropertyPath("LogText"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Log"/></summary>
        public static PropertyPath LogPath { get { return new PropertyPath("Log"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LogExoandedTargetBlock"/></summary>
        public static PropertyPath LogExoandedTargetBlockPath { get { return new PropertyPath("LogExoandedTargetBlock"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsLogPinned"/></summary>
        public static PropertyPath IsLogPinnedPath { get { return new PropertyPath("IsLogPinned"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsLogExpanded"/></summary>
        public static PropertyPath IsLogExpandedPath { get { return new PropertyPath("IsLogExpanded"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LoginCommand"/></summary>
        public static PropertyPath LoginCommandPath { get { return new PropertyPath("LoginCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ToggleShowAllAccountsCommand"/></summary>
        public static PropertyPath ToggleShowAllAccountsCommandPath { get { return new PropertyPath("ToggleShowAllAccountsCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SetOrderToNoLossCommand"/></summary>
        public static PropertyPath SetOrderToNoLossCommandPath { get { return new PropertyPath("SetOrderToNoLossCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseLimitCommand"/></summary>
        public static PropertyPath IncreaseLimitCommandPath { get { return new PropertyPath("IncreaseLimitCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseLimitCommand"/></summary>
        public static PropertyPath DecreaseLimitCommandPath { get { return new PropertyPath("DecreaseLimitCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseStopCommand"/></summary>
        public static PropertyPath DecreaseStopCommandPath { get { return new PropertyPath("DecreaseStopCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryStopCommand"/></summary>
        public static PropertyPath IncreaseEntryStopCommandPath { get { return new PropertyPath("IncreaseEntryStopCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryStopCommandCommand"/></summary>
        public static PropertyPath DecreaseEntryStopCommandCommandPath { get { return new PropertyPath("DecreaseEntryStopCommandCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryLimitCommand"/></summary>
        public static PropertyPath IncreaseEntryLimitCommandPath { get { return new PropertyPath("IncreaseEntryLimitCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryLimitCommand"/></summary>
        public static PropertyPath DecreaseEntryLimitCommandPath { get { return new PropertyPath("DecreaseEntryLimitCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryRateCommand"/></summary>
        public static PropertyPath IncreaseEntryRateCommandPath { get { return new PropertyPath("IncreaseEntryRateCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryRateCommand"/></summary>
        public static PropertyPath DecreaseEntryRateCommandPath { get { return new PropertyPath("DecreaseEntryRateCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CancelEntryOrderCommand"/></summary>
        public static PropertyPath CancelEntryOrderCommandPath { get { return new PropertyPath("CancelEntryOrderCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.EncreaseStopCommand"/></summary>
        public static PropertyPath EncreaseStopCommandPath { get { return new PropertyPath("EncreaseStopCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DeleteTradingAccountCommand"/></summary>
        public static PropertyPath DeleteTradingAccountCommandPath { get { return new PropertyPath("DeleteTradingAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SaveTradingSlavesCommand"/></summary>
        public static PropertyPath SaveTradingSlavesCommandPath { get { return new PropertyPath("SaveTradingSlavesCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewLocalAccountCommand"/></summary>
        public static PropertyPath OpenNewLocalAccountCommandPath { get { return new PropertyPath("OpenNewLocalAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AddNewSlaveAccountCommand"/></summary>
        public static PropertyPath AddNewSlaveAccountCommandPath { get { return new PropertyPath("AddNewSlaveAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewServerAccountCommand"/></summary>
        public static PropertyPath OpenNewServerAccountCommandPath { get { return new PropertyPath("OpenNewServerAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.UpdatePasswordCommand"/></summary>
        public static PropertyPath UpdatePasswordCommandPath { get { return new PropertyPath("UpdatePasswordCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CloseServerTradeCommand"/></summary>
        public static PropertyPath CloseServerTradeCommandPath { get { return new PropertyPath("CloseServerTradeCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.BackTestStepBackCommand"/></summary>
        public static PropertyPath BackTestStepBackCommandPath { get { return new PropertyPath("BackTestStepBackCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LoadHistoryCommand"/></summary>
        public static PropertyPath LoadHistoryCommandPath { get { return new PropertyPath("LoadHistoryCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.isLoadHistoryTaskRunning"/></summary>
        public static PropertyPath isLoadHistoryTaskRunningPath { get { return new PropertyPath("isLoadHistoryTaskRunning"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ReportCommand"/></summary>
        public static PropertyPath ReportCommandPath { get { return new PropertyPath("ReportCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CloseAllServerTradesCommand"/></summary>
        public static PropertyPath CloseAllServerTradesCommandPath { get { return new PropertyPath("CloseAllServerTradesCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AccountLoginCommand"/></summary>
        public static PropertyPath AccountLoginCommandPath { get { return new PropertyPath("AccountLoginCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DatabasePath"/></summary>
        public static PropertyPath DatabasePathPath { get { return new PropertyPath("DatabasePath"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenDataBaseCommand"/></summary>
        public static PropertyPath OpenDataBaseCommandPath { get { return new PropertyPath("OpenDataBaseCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TestCommand"/></summary>
        public static PropertyPath TestCommandPath { get { return new PropertyPath("TestCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LoginInfo"/></summary>
        public static PropertyPath LoginInfoPath { get { return new PropertyPath("LoginInfo"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccounts"/></summary>
        public static PropertyPath TradingAccountsPath { get { return new PropertyPath("TradingAccounts"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccount"/></summary>
        public static PropertyPath TradingAccountPath { get { return new PropertyPath("TradingAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingPassword"/></summary>
        public static PropertyPath TradingPasswordPath { get { return new PropertyPath("TradingPassword"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingDemo"/></summary>
        public static PropertyPath TradingDemoPath { get { return new PropertyPath("TradingDemo"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TargetInPips"/></summary>
        public static PropertyPath TargetInPipsPath { get { return new PropertyPath("TargetInPips"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Title"/></summary>
        public static PropertyPath TitlePath { get { return new PropertyPath("Title"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.isInDesign"/></summary>
        public static PropertyPath isInDesignPath { get { return new PropertyPath("isInDesign"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.UpdateTradingAccountTargetBlock"/></summary>
        public static PropertyPath UpdateTradingAccountTargetBlockPath { get { return new PropertyPath("UpdateTradingAccountTargetBlock"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.InvokeSyncronizeTargetBlock"/></summary>
        public static PropertyPath InvokeSyncronizeTargetBlockPath { get { return new PropertyPath("InvokeSyncronizeTargetBlock"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsAliceActive"/></summary>
        public static PropertyPath IsAliceActivePath { get { return new PropertyPath("IsAliceActive"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.changeLimitScheduler"/></summary>
        public static PropertyPath changeLimitSchedulerPath { get { return new PropertyPath("changeLimitScheduler"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.changeStopScheduler"/></summary>
        public static PropertyPath changeStopSchedulerPath { get { return new PropertyPath("changeStopScheduler"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMacroName"/></summary>
        public static PropertyPath TradingMacroNamePath { get { return new PropertyPath("TradingMacroName"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.DockingWindow"/></summary>
    public static class DockingWindowMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow.IsCharterContainerPropertyName"/></summary>
        public const string IsCharterContainerPropertyName = "IsCharterContainerPropertyName";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.GetIsCharterContainer"/></summary>
        public const string GetIsCharterContainer = "GetIsCharterContainer";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.SetIsCharterContainer"/></summary>
        public const string SetIsCharterContainer = "SetIsCharterContainer";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow.IsCharterContainerProperty"/></summary>
        public const string IsCharterContainerProperty = "IsCharterContainerProperty";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow.ParentRadPaneGroupPropertyName"/></summary>
        public const string ParentRadPaneGroupPropertyName = "ParentRadPaneGroupPropertyName";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.GetParentRadPaneGroup"/></summary>
        public const string GetParentRadPaneGroup = "GetParentRadPaneGroup";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.SetParentRadPaneGroup"/></summary>
        public const string SetParentRadPaneGroup = "SetParentRadPaneGroup";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow.ParentRadPaneGroupProperty"/></summary>
        public const string ParentRadPaneGroupProperty = "ParentRadPaneGroupProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.CurrentDirectory"/></summary>
        public const string CurrentDirectory = "CurrentDirectory";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.SettingsFileName"/></summary>
        public const string SettingsFileName = "SettingsFileName";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow._originalLayout"/></summary>
        public const string _originalLayout = "_originalLayout";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow._hiddenCharters"/></summary>
        public const string _hiddenCharters = "_hiddenCharters";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.Charters"/></summary>
        public const string Charters = "Charters";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.AddCharterToHidden"/></summary>
        public const string AddCharterToHidden = "AddCharterToHidden";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.RemoveCharterFromHidden"/></summary>
        public const string RemoveCharterFromHidden = "RemoveCharterFromHidden";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow._canUserCloseDictionary"/></summary>
        public const string _canUserCloseDictionary = "_canUserCloseDictionary";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.CanUserClose"/></summary>
        public const string CanUserClose = "CanUserClose";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow._Views"/></summary>
        public const string _Views = "_Views";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.Views"/></summary>
        public const string Views = "Views";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow._MainWindowModel"/></summary>
        public const string _MainWindowModel = "_MainWindowModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.MainWindowModel"/></summary>
        public const string MainWindowModel = "MainWindowModel";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.DockingWindow_StateChanged"/></summary>
        public const string DockingWindow_StateChanged = "DockingWindow_StateChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.keybd_event"/></summary>
        public const string keybd_event = "keybd_event";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.NoTelerik"/></summary>
        public const string NoTelerik = "NoTelerik";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.RootVisual_Loaded"/></summary>
        public const string RootVisual_Loaded = "RootVisual_Loaded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.RootVisual_ElementCleaning"/></summary>
        public const string RootVisual_ElementCleaning = "RootVisual_ElementCleaning";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.RootVisual_ElementLoaded"/></summary>
        public const string RootVisual_ElementLoaded = "RootVisual_ElementLoaded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.RootVisual_PaneStateChange"/></summary>
        public const string RootVisual_PaneStateChange = "RootVisual_PaneStateChange";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.RootVisual_Close"/></summary>
        public const string RootVisual_Close = "RootVisual_Close";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow._IsLogExpandedTargetBlock"/></summary>
        public const string _IsLogExpandedTargetBlock = "_IsLogExpandedTargetBlock";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.IsLogExpandedTargetBlock"/></summary>
        public const string IsLogExpandedTargetBlock = "IsLogExpandedTargetBlock";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.DataContext_PropertyChanged"/></summary>
        public const string DataContext_PropertyChanged = "DataContext_PropertyChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.DockingWindow_Closing"/></summary>
        public const string DockingWindow_Closing = "DockingWindow_Closing";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow._TileChartsCommand"/></summary>
        public const string _TileChartsCommand = "_TileChartsCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.TileChartsCommand"/></summary>
        public const string TileChartsCommand = "TileChartsCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.TileCharts"/></summary>
        public const string TileCharts = "TileCharts";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow._ResetLayoutCommand"/></summary>
        public const string _ResetLayoutCommand = "_ResetLayoutCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.ResetLayoutCommand"/></summary>
        public const string ResetLayoutCommand = "ResetLayoutCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.ResetLayout"/></summary>
        public const string ResetLayout = "ResetLayout";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow._ShowAllPanesCommand"/></summary>
        public const string _ShowAllPanesCommand = "_ShowAllPanesCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.ShowAllPanesCommand"/></summary>
        public const string ShowAllPanesCommand = "ShowAllPanesCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.ShowAllPanes"/></summary>
        public const string ShowAllPanes = "ShowAllPanes";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow._LoadLayoutCommand"/></summary>
        public const string _LoadLayoutCommand = "_LoadLayoutCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.LoadLayoutCommand"/></summary>
        public const string LoadLayoutCommand = "LoadLayoutCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.DockingWindow._SaveLayoutAsCommand"/></summary>
        public const string _SaveLayoutAsCommand = "_SaveLayoutAsCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.SaveLayoutAsCommand"/></summary>
        public const string SaveLayoutAsCommand = "SaveLayoutAsCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.SaveLayoutAs"/></summary>
        public const string SaveLayoutAs = "SaveLayoutAs";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.LoadLayoutFromFile"/></summary>
        public const string LoadLayoutFromFile = "LoadLayoutFromFile";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.LoadLayout"/></summary>
        public const string LoadLayout = "LoadLayout";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.LoadOriginalLayout"/></summary>
        public const string LoadOriginalLayout = "LoadOriginalLayout";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.SaveOriginalLayout"/></summary>
        public const string SaveOriginalLayout = "SaveOriginalLayout";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.SaveLayout"/></summary>
        public const string SaveLayout = "SaveLayout";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.OpenLayoutPath"/></summary>
        public const string OpenLayoutPath = "OpenLayoutPath";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.SaveLayoutPath"/></summary>
        public const string SaveLayoutPath = "SaveLayoutPath";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.RemoveCharter"/></summary>
        public const string RemoveCharter = "RemoveCharter";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.AddCharter"/></summary>
        public const string AddCharter = "AddCharter";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.GetCharterFromPane"/></summary>
        public const string GetCharterFromPane = "GetCharterFromPane";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.IsCharterPane"/></summary>
        public const string IsCharterPane = "IsCharterPane";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.SetCharterPaneBindings"/></summary>
        public const string SetCharterPaneBindings = "SetCharterPaneBindings";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.FindChartPaneByName"/></summary>
        public const string FindChartPaneByName = "FindChartPaneByName";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.FindChartsSplitter"/></summary>
        public const string FindChartsSplitter = "FindChartsSplitter";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DockingWindow.Grid_KeyDown"/></summary>
        public const string Grid_KeyDown = "Grid_KeyDown";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.CurrentDirectory"/></summary>
        public static PropertyPath CurrentDirectoryPath { get { return new PropertyPath("CurrentDirectory"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.SettingsFileName"/></summary>
        public static PropertyPath SettingsFileNamePath { get { return new PropertyPath("SettingsFileName"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow._originalLayout"/></summary>
        public static PropertyPath _originalLayoutPath { get { return new PropertyPath("_originalLayout"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.Charters"/></summary>
        public static PropertyPath ChartersPath { get { return new PropertyPath("Charters"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.Views"/></summary>
        public static PropertyPath ViewsPath { get { return new PropertyPath("Views"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.MainWindowModel"/></summary>
        public static PropertyPath MainWindowModelPath { get { return new PropertyPath("MainWindowModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.IsLogExpandedTargetBlock"/></summary>
        public static PropertyPath IsLogExpandedTargetBlockPath { get { return new PropertyPath("IsLogExpandedTargetBlock"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.TileChartsCommand"/></summary>
        public static PropertyPath TileChartsCommandPath { get { return new PropertyPath("TileChartsCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.ResetLayoutCommand"/></summary>
        public static PropertyPath ResetLayoutCommandPath { get { return new PropertyPath("ResetLayoutCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.ShowAllPanesCommand"/></summary>
        public static PropertyPath ShowAllPanesCommandPath { get { return new PropertyPath("ShowAllPanesCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.LoadLayoutCommand"/></summary>
        public static PropertyPath LoadLayoutCommandPath { get { return new PropertyPath("LoadLayoutCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.DockingWindow.SaveLayoutAsCommand"/></summary>
        public static PropertyPath SaveLayoutAsCommandPath { get { return new PropertyPath("SaveLayoutAsCommand"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.MainWindow"/></summary>
    public static class MainWindowMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MainWindow.ViewModel"/></summary>
        public const string ViewModel = "ViewModel";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MainWindow.GetTradingAccountsQuery"/></summary>
        public const string GetTradingAccountsQuery = "GetTradingAccountsQuery";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MainWindow.Window_Loaded"/></summary>
        public const string Window_Loaded = "Window_Loaded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MainWindow.DataGrid_KeyDown"/></summary>
        public const string DataGrid_KeyDown = "DataGrid_KeyDown";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MainWindow.SlaveModelGrid_KeyDown"/></summary>
        public const string SlaveModelGrid_KeyDown = "SlaveModelGrid_KeyDown";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MainWindow.Window_Closed"/></summary>
        public const string Window_Closed = "Window_Closed";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MainWindow.ViewModel"/></summary>
        public static PropertyPath ViewModelPath { get { return new PropertyPath("ViewModel"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.OrderTemplatesView"/></summary>
    public static class OrderTemplatesViewMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.OrderTemplatesView.DataGrid_KeyDown"/></summary>
        public const string DataGrid_KeyDown = "DataGrid_KeyDown";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.OrderTemplatesModel"/></summary>
    public static class OrderTemplatesModelMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.OrderTemplates"/></summary>
        public const string OrderTemplates = "OrderTemplates";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.OrderTemplatesModel._MasterModel"/></summary>
        public const string _MasterModel = "_MasterModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.MasterModel"/></summary>
        public const string MasterModel = "MasterModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.LotSize"/></summary>
        public const string LotSize = "LotSize";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.OrderTemplatesModel._AvailiblePairs"/></summary>
        public const string _AvailiblePairs = "_AvailiblePairs";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.AvailiblePairs"/></summary>
        public const string AvailiblePairs = "AvailiblePairs";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.CoreFX_LoggedInEvent"/></summary>
        public const string CoreFX_LoggedInEvent = "CoreFX_LoggedInEvent";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.OrderTemplatesModel._BuyOrderCommand"/></summary>
        public const string _BuyOrderCommand = "_BuyOrderCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.BuyOrderCommand"/></summary>
        public const string BuyOrderCommand = "BuyOrderCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.BuyOrder"/></summary>
        public const string BuyOrder = "BuyOrder";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.OrderTemplatesModel._SellOrderCommand"/></summary>
        public const string _SellOrderCommand = "_SellOrderCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.SellOrderCommand"/></summary>
        public const string SellOrderCommand = "SellOrderCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.SellOrder"/></summary>
        public const string SellOrder = "SellOrder";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.OrderTemplates"/></summary>
        public static PropertyPath OrderTemplatesPath { get { return new PropertyPath("OrderTemplates"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.MasterModel"/></summary>
        public static PropertyPath MasterModelPath { get { return new PropertyPath("MasterModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.LotSize"/></summary>
        public static PropertyPath LotSizePath { get { return new PropertyPath("LotSize"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.AvailiblePairs"/></summary>
        public static PropertyPath AvailiblePairsPath { get { return new PropertyPath("AvailiblePairs"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.BuyOrderCommand"/></summary>
        public static PropertyPath BuyOrderCommandPath { get { return new PropertyPath("BuyOrderCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.SellOrderCommand"/></summary>
        public static PropertyPath SellOrderCommandPath { get { return new PropertyPath("SellOrderCommand"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.RemoteControlModel"/></summary>
    public static class RemoteControlModelMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._StartReplayCommand"/></summary>
        public const string _StartReplayCommand = "_StartReplayCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.StartReplayCommand"/></summary>
        public const string StartReplayCommand = "StartReplayCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._replayArguments"/></summary>
        public const string _replayArguments = "_replayArguments";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ReplayArguments"/></summary>
        public const string ReplayArguments = "ReplayArguments";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._replayTasks"/></summary>
        public const string _replayTasks = "_replayTasks";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.StartReplay"/></summary>
        public const string StartReplay = "StartReplay";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.FillTestParams"/></summary>
        public const string FillTestParams = "FillTestParams";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ReplaceTestParamRaw"/></summary>
        public const string ReplaceTestParamRaw = "ReplaceTestParamRaw";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ContinueReplayWith"/></summary>
        public const string ContinueReplayWith = "ContinueReplayWith";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._bestSessionCriteria"/></summary>
        public const string _bestSessionCriteria = "_bestSessionCriteria";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetBestSessions"/></summary>
        public const string GetBestSessions = "GetBestSessions";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.SetTestCorridorDistanceRatio"/></summary>
        public const string SetTestCorridorDistanceRatio = "SetTestCorridorDistanceRatio";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._replayTaskCancellationToken"/></summary>
        public const string _replayTaskCancellationToken = "_replayTaskCancellationToken";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.StartReplayInternal"/></summary>
        public const string StartReplayInternal = "StartReplayInternal";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.SaveTradingSettings"/></summary>
        public const string SaveTradingSettings = "SaveTradingSettings";

        /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.RemoteControlModel.TestParam"/></summary>
        public static class TestParamMetadata
        {
                        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.TestParam._pairs"/></summary>
            public const string _pairs = "_pairs";

            /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.TestParam.GetEnumerator"/></summary>
            public const string GetEnumerator = "GetEnumerator";

            /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.TestParam.GetEnumerator"/></summary>
            public const string System_Collections_IEnumerable_GetEnumerator = "System.Collections.IEnumerable.GetEnumerator";


        }

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.TestParams"/></summary>
        public const string TestParams = "TestParams";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._testParamsRaw"/></summary>
        public const string _testParamsRaw = "_testParamsRaw";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.profitToClose"/></summary>
        public const string profitToClose = "profitToClose";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._tradingStatistics"/></summary>
        public const string _tradingStatistics = "_tradingStatistics";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.charters"/></summary>
        public const string charters = "charters";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.DeleteCharter"/></summary>
        public const string DeleteCharter = "DeleteCharter";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.RequestAddCharterToUI"/></summary>
        public const string RequestAddCharterToUI = "RequestAddCharterToUI";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetCharter"/></summary>
        public const string GetCharter = "GetCharter";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charterNew_ShowChart"/></summary>
        public const string charterNew_ShowChart = "charterNew_ShowChart";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charterNew_TradeLineChanged"/></summary>
        public const string charterNew_TradeLineChanged = "charterNew_TradeLineChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charterNew_PlotterKeyDown"/></summary>
        public const string charterNew_PlotterKeyDown = "charterNew_PlotterKeyDown";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charterNew_LineTimeMiddleChanged"/></summary>
        public const string charterNew_LineTimeMiddleChanged = "charterNew_LineTimeMiddleChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charterNew_LineTimeShortChanged"/></summary>
        public const string charterNew_LineTimeShortChanged = "charterNew_LineTimeShortChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_BuySellRemoved"/></summary>
        public const string charter_BuySellRemoved = "charter_BuySellRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_BuySellAdded"/></summary>
        public const string charter_BuySellAdded = "charter_BuySellAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_GannAngleOffsetChanged"/></summary>
        public const string charter_GannAngleOffsetChanged = "charter_GannAngleOffsetChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_Play"/></summary>
        public const string charter_Play = "charter_Play";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_SupportResistanceChanged"/></summary>
        public const string charter_SupportResistanceChanged = "charter_SupportResistanceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_CorridorStartPositionChanged"/></summary>
        public const string charter_CorridorStartPositionChanged = "charter_CorridorStartPositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetTradingMacro"/></summary>
        public const string GetTradingMacro = "GetTradingMacro";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_StateChanged"/></summary>
        public const string charter_StateChanged = "charter_StateChanged";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.CurrentLoss"/></summary>
        public const string CurrentLoss = "CurrentLoss";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.ticksByPair"/></summary>
        public const string ticksByPair = "ticksByPair";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.anglesByPair"/></summary>
        public const string anglesByPair = "anglesByPair";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._LoadTradingSettingsCommand"/></summary>
        public const string _LoadTradingSettingsCommand = "_LoadTradingSettingsCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.LoadTradingSettingsCommand"/></summary>
        public const string LoadTradingSettingsCommand = "LoadTradingSettingsCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.LoadTradingSettings"/></summary>
        public const string LoadTradingSettings = "LoadTradingSettings";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._SaveTradingSettingsCommand"/></summary>
        public const string _SaveTradingSettingsCommand = "_SaveTradingSettingsCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.SaveTradingSettingsCommand"/></summary>
        public const string SaveTradingSettingsCommand = "SaveTradingSettingsCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OnSaveTradingSettings"/></summary>
        public const string OnSaveTradingSettings = "OnSaveTradingSettings";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.SellOrderCommand"/></summary>
        public const string SellOrderCommand = "SellOrderCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.BuyOrderCommand"/></summary>
        public const string BuyOrderCommand = "BuyOrderCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OpenEntryOrderByTemplate"/></summary>
        public const string OpenEntryOrderByTemplate = "OpenEntryOrderByTemplate";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._CopyTradingMacroCommand"/></summary>
        public const string _CopyTradingMacroCommand = "_CopyTradingMacroCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.CopyTradingMacroCommand"/></summary>
        public const string CopyTradingMacroCommand = "CopyTradingMacroCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CopyTradingMacros"/></summary>
        public const string CopyTradingMacros = "CopyTradingMacros";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CopyTradingMacro"/></summary>
        public const string CopyTradingMacro = "CopyTradingMacro";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._ClearCurrentLossCommand"/></summary>
        public const string _ClearCurrentLossCommand = "_ClearCurrentLossCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClearCurrentLossCommand"/></summary>
        public const string ClearCurrentLossCommand = "ClearCurrentLossCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClearCurrentLoss"/></summary>
        public const string ClearCurrentLoss = "ClearCurrentLoss";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._DeleteTradingMacroCommand"/></summary>
        public const string _DeleteTradingMacroCommand = "_DeleteTradingMacroCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.DeleteTradingMacroCommand"/></summary>
        public const string DeleteTradingMacroCommand = "DeleteTradingMacroCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.DeleteTradingMacro"/></summary>
        public const string DeleteTradingMacro = "DeleteTradingMacro";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.loadHistoryTast"/></summary>
        public const string loadHistoryTast = "loadHistoryTast";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.isLoadHistoryTaskRunning"/></summary>
        public const string isLoadHistoryTaskRunning = "isLoadHistoryTaskRunning";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._PriceHistoryCommand"/></summary>
        public const string _PriceHistoryCommand = "_PriceHistoryCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.PriceHistoryCommand"/></summary>
        public const string PriceHistoryCommand = "PriceHistoryCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.PriceHistory"/></summary>
        public const string PriceHistory = "PriceHistory";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._TrimPairCommand"/></summary>
        public const string _TrimPairCommand = "_TrimPairCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.TrimPairCommand"/></summary>
        public const string TrimPairCommand = "TrimPairCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.TrimPair"/></summary>
        public const string TrimPair = "TrimPair";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._ClosePairCommand"/></summary>
        public const string _ClosePairCommand = "_ClosePairCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClosePairCommand"/></summary>
        public const string ClosePairCommand = "ClosePairCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClosePair"/></summary>
        public const string ClosePair = "ClosePair";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._BuyCommand"/></summary>
        public const string _BuyCommand = "_BuyCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.BuyCommand"/></summary>
        public const string BuyCommand = "BuyCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.Buy"/></summary>
        public const string Buy = "Buy";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._SellCommand"/></summary>
        public const string _SellCommand = "_SellCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.SellCommand"/></summary>
        public const string SellCommand = "SellCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.Sell"/></summary>
        public const string Sell = "Sell";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._ShowPropertiesDialogCommand"/></summary>
        public const string _ShowPropertiesDialogCommand = "_ShowPropertiesDialogCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowPropertiesDialogCommand"/></summary>
        public const string ShowPropertiesDialogCommand = "ShowPropertiesDialogCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowPropertiesDialog"/></summary>
        public const string ShowPropertiesDialog = "ShowPropertiesDialog";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._SetStrategiesCommand"/></summary>
        public const string _SetStrategiesCommand = "_SetStrategiesCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.SetStrategiesCommand"/></summary>
        public const string SetStrategiesCommand = "SetStrategiesCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.SetStrategies"/></summary>
        public const string SetStrategies = "SetStrategies";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._HidePropertiesDialogCommand"/></summary>
        public const string _HidePropertiesDialogCommand = "_HidePropertiesDialogCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.HidePropertiesDialogCommand"/></summary>
        public const string HidePropertiesDialogCommand = "HidePropertiesDialogCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.HidePropertiesDialog"/></summary>
        public const string HidePropertiesDialog = "HidePropertiesDialog";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._ToggleCloseAtZeroCommand"/></summary>
        public const string _ToggleCloseAtZeroCommand = "_ToggleCloseAtZeroCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ToggleCloseAtZeroCommand"/></summary>
        public const string ToggleCloseAtZeroCommand = "ToggleCloseAtZeroCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ToggleCloseAtZero"/></summary>
        public const string ToggleCloseAtZero = "ToggleCloseAtZero";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CleanEntryOrders"/></summary>
        public const string CleanEntryOrders = "CleanEntryOrders";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._threadCancelation"/></summary>
        public const string _threadCancelation = "_threadCancelation";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.MasterModel_TradingMacroNameChanged"/></summary>
        public const string MasterModel_TradingMacroNameChanged = "MasterModel_TradingMacroNameChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.MasterModel_NeedTradingStatistics"/></summary>
        public const string MasterModel_NeedTradingStatistics = "MasterModel_NeedTradingStatistics";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.MasterModel_MasterTradeAccountChanged"/></summary>
        public const string MasterModel_MasterTradeAccountChanged = "MasterModel_MasterTradeAccountChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.UpdateTradingStatistics"/></summary>
        public const string UpdateTradingStatistics = "UpdateTradingStatistics";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.InitializeModel"/></summary>
        public const string InitializeModel = "InitializeModel";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.LoadClosedTrades"/></summary>
        public const string LoadClosedTrades = "LoadClosedTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ObjectStateManager_ObjectStateManagerChanged"/></summary>
        public const string ObjectStateManager_ObjectStateManagerChanged = "ObjectStateManager_ObjectStateManagerChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.Context_ObjectMaterialized"/></summary>
        public const string Context_ObjectMaterialized = "Context_ObjectMaterialized";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.findDispatcherScheduler"/></summary>
        public const string findDispatcherScheduler = "findDispatcherScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.TradingMacro_ShowChart"/></summary>
        public const string TradingMacro_ShowChart = "TradingMacro_ShowChart";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.TradingMacro_PropertyChanged"/></summary>
        public const string TradingMacro_PropertyChanged = "TradingMacro_PropertyChanged";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._priceChangedSubscribsion"/></summary>
        public const string _priceChangedSubscribsion = "_priceChangedSubscribsion";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.PriceChangeSubscriptionDispose"/></summary>
        public const string PriceChangeSubscriptionDispose = "PriceChangeSubscriptionDispose";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CoreFX_LoggedInEvent"/></summary>
        public const string CoreFX_LoggedInEvent = "CoreFX_LoggedInEvent";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CoreFX_LoggedOffEvent"/></summary>
        public const string CoreFX_LoggedOffEvent = "CoreFX_LoggedOffEvent";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.fw_PriceChanged"/></summary>
        public const string fw_PriceChanged = "fw_PriceChanged";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._showChartQueueLocker"/></summary>
        public const string _showChartQueueLocker = "_showChartQueueLocker";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._showChartQueue"/></summary>
        public const string _showChartQueue = "_showChartQueue";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowChartQueue"/></summary>
        public const string ShowChartQueue = "ShowChartQueue";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.AddShowChart"/></summary>
        public const string AddShowChart = "AddShowChart";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._isMinimized"/></summary>
        public const string _isMinimized = "_isMinimized";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.IsMinimized"/></summary>
        public const string IsMinimized = "IsMinimized";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowChart"/></summary>
        public const string ShowChart = "ShowChart";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.fw_TradeAdded"/></summary>
        public const string fw_TradeAdded = "fw_TradeAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.fw_Error"/></summary>
        public const string fw_Error = "fw_Error";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.AdjustCurrentLosses_"/></summary>
        public const string AdjustCurrentLosses_ = "AdjustCurrentLosses_";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._ZeroPositiveLossSubjectLocker"/></summary>
        public const string _ZeroPositiveLossSubjectLocker = "_ZeroPositiveLossSubjectLocker";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._ZeroPositiveLossSubject"/></summary>
        public const string _ZeroPositiveLossSubject = "_ZeroPositiveLossSubject";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ZeroPositiveLossSubject"/></summary>
        public const string ZeroPositiveLossSubject = "ZeroPositiveLossSubject";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OnZeroPositiveLoss"/></summary>
        public const string OnZeroPositiveLoss = "OnZeroPositiveLoss";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.AdjustCurrentLosses_New"/></summary>
        public const string AdjustCurrentLosses_New = "AdjustCurrentLosses_New";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.AdjustCurrentLosses"/></summary>
        public const string AdjustCurrentLosses = "AdjustCurrentLosses";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.fw_TradeClosed"/></summary>
        public const string fw_TradeClosed = "fw_TradeClosed";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.SaveTrade"/></summary>
        public const string SaveTrade = "SaveTrade";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._saveTradeAction"/></summary>
        public const string _saveTradeAction = "_saveTradeAction";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.SaveTradeAction"/></summary>
        public const string SaveTradeAction = "SaveTradeAction";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.Correlations"/></summary>
        public const string Correlations = "Correlations";

        /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.RemoteControlModel.PairCorrelation"/></summary>
        public static class PairCorrelationMetadata
        {
                        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.PairCorrelation.Pair1"/></summary>
            public const string Pair1 = "Pair1";

            /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.PairCorrelation.Pair2"/></summary>
            public const string Pair2 = "Pair2";

            /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.PairCorrelation.Correlation"/></summary>
            public const string Correlation = "Correlation";


            /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.PairCorrelation.Pair1"/></summary>
            public static PropertyPath Pair1Path { get { return new PropertyPath("Pair1"); } }

            /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.PairCorrelation.Pair2"/></summary>
            public static PropertyPath Pair2Path { get { return new PropertyPath("Pair2"); } }

            /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.PairCorrelation.Correlation"/></summary>
            public static PropertyPath CorrelationPath { get { return new PropertyPath("Correlation"); } }

        }

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._RunCorrelationsSubjectLocker"/></summary>
        public const string _RunCorrelationsSubjectLocker = "_RunCorrelationsSubjectLocker";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._RunCorrelationsSubject"/></summary>
        public const string _RunCorrelationsSubject = "_RunCorrelationsSubject";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunCorrelationsSubject"/></summary>
        public const string RunCorrelationsSubject = "RunCorrelationsSubject";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._runCorrelationBlock"/></summary>
        public const string _runCorrelationBlock = "_runCorrelationBlock";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunCorrelationBlock"/></summary>
        public const string RunCorrelationBlock = "RunCorrelationBlock";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OnRunCorrelations"/></summary>
        public const string OnRunCorrelations = "OnRunCorrelations";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._CorrelationsByPair"/></summary>
        public const string _CorrelationsByPair = "_CorrelationsByPair";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.CorrelationsByPair"/></summary>
        public const string CorrelationsByPair = "CorrelationsByPair";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunCorrelations"/></summary>
        public const string RunCorrelations = "RunCorrelations";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunPairCorrelation"/></summary>
        public const string RunPairCorrelation = "RunPairCorrelation";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunCorrelation"/></summary>
        public const string RunCorrelation = "RunCorrelation";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CanTrade"/></summary>
        public const string CanTrade = "CanTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.TradeExists"/></summary>
        public const string TradeExists = "TradeExists";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OpenTrade"/></summary>
        public const string OpenTrade = "OpenTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetRatesForCorridor"/></summary>
        public const string GetRatesForCorridor = "GetRatesForCorridor";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetFibSlack"/></summary>
        public const string GetFibSlack = "GetFibSlack";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.InitInstruments"/></summary>
        public const string InitInstruments = "InitInstruments";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ScheduleInitTradingMacro"/></summary>
        public const string ScheduleInitTradingMacro = "ScheduleInitTradingMacro";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.InitTradingMacro"/></summary>
        public const string InitTradingMacro = "InitTradingMacro";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.StartReplayCommand"/></summary>
        public static PropertyPath StartReplayCommandPath { get { return new PropertyPath("StartReplayCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ReplayArguments"/></summary>
        public static PropertyPath ReplayArgumentsPath { get { return new PropertyPath("ReplayArguments"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.CurrentLoss"/></summary>
        public static PropertyPath CurrentLossPath { get { return new PropertyPath("CurrentLoss"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.LoadTradingSettingsCommand"/></summary>
        public static PropertyPath LoadTradingSettingsCommandPath { get { return new PropertyPath("LoadTradingSettingsCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.SaveTradingSettingsCommand"/></summary>
        public static PropertyPath SaveTradingSettingsCommandPath { get { return new PropertyPath("SaveTradingSettingsCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.CopyTradingMacroCommand"/></summary>
        public static PropertyPath CopyTradingMacroCommandPath { get { return new PropertyPath("CopyTradingMacroCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClearCurrentLossCommand"/></summary>
        public static PropertyPath ClearCurrentLossCommandPath { get { return new PropertyPath("ClearCurrentLossCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.DeleteTradingMacroCommand"/></summary>
        public static PropertyPath DeleteTradingMacroCommandPath { get { return new PropertyPath("DeleteTradingMacroCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.isLoadHistoryTaskRunning"/></summary>
        public static PropertyPath isLoadHistoryTaskRunningPath { get { return new PropertyPath("isLoadHistoryTaskRunning"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.PriceHistoryCommand"/></summary>
        public static PropertyPath PriceHistoryCommandPath { get { return new PropertyPath("PriceHistoryCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.TrimPairCommand"/></summary>
        public static PropertyPath TrimPairCommandPath { get { return new PropertyPath("TrimPairCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClosePairCommand"/></summary>
        public static PropertyPath ClosePairCommandPath { get { return new PropertyPath("ClosePairCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.BuyCommand"/></summary>
        public static PropertyPath BuyCommandPath { get { return new PropertyPath("BuyCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.SellCommand"/></summary>
        public static PropertyPath SellCommandPath { get { return new PropertyPath("SellCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowPropertiesDialogCommand"/></summary>
        public static PropertyPath ShowPropertiesDialogCommandPath { get { return new PropertyPath("ShowPropertiesDialogCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.SetStrategiesCommand"/></summary>
        public static PropertyPath SetStrategiesCommandPath { get { return new PropertyPath("SetStrategiesCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.HidePropertiesDialogCommand"/></summary>
        public static PropertyPath HidePropertiesDialogCommandPath { get { return new PropertyPath("HidePropertiesDialogCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ToggleCloseAtZeroCommand"/></summary>
        public static PropertyPath ToggleCloseAtZeroCommandPath { get { return new PropertyPath("ToggleCloseAtZeroCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowChartQueue"/></summary>
        public static PropertyPath ShowChartQueuePath { get { return new PropertyPath("ShowChartQueue"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ZeroPositiveLossSubject"/></summary>
        public static PropertyPath ZeroPositiveLossSubjectPath { get { return new PropertyPath("ZeroPositiveLossSubject"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.SaveTradeAction"/></summary>
        public static PropertyPath SaveTradeActionPath { get { return new PropertyPath("SaveTradeAction"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunCorrelationsSubject"/></summary>
        public static PropertyPath RunCorrelationsSubjectPath { get { return new PropertyPath("RunCorrelationsSubject"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunCorrelationBlock"/></summary>
        public static PropertyPath RunCorrelationBlockPath { get { return new PropertyPath("RunCorrelationBlock"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.CorrelationsByPair"/></summary>
        public static PropertyPath CorrelationsByPairPath { get { return new PropertyPath("CorrelationsByPair"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.RemoteControlView"/></summary>
    public static class RemoteControlViewMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlView.DataGrid_KeyDown"/></summary>
        public const string DataGrid_KeyDown = "DataGrid_KeyDown";


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.bin.Debug_01.Store.Metadata
{
    /// <summary>Metadata for File Alice.sdf</summary>
    public static class AliceSdf    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/bin/Debug_01/Store/Alice.sdf", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_01/Store/Alice.sdf"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_01/Store/Alice.sdf")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.bin.Debug_02.Store.Metadata
{
    /// <summary>Metadata for File Alice.sdf</summary>
    public static class AliceSdf    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/bin/Debug_02/Store/Alice.sdf", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_02/Store/Alice.sdf"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_02/Store/Alice.sdf")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.bin.Debug_03.Metadata
{
    /// <summary>Metadata for File RadGridView.txt</summary>
    public static class RadGridViewTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/bin/Debug_03/RadGridView.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_03/RadGridView.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_03/RadGridView.txt")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.bin.DTurbo.Store.Metadata
{
    /// <summary>Metadata for File Alice.sdf</summary>
    public static class AliceSdf    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/bin/DTurbo/Store/Alice.sdf", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/DTurbo/Store/Alice.sdf"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/DTurbo/Store/Alice.sdf")); } }


    }

}

namespace HedgeHog.Alice.Client.Classes.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Classes.ReportModel"/></summary>
    public static class ReportModelMetadata
    {
        
    }

}

namespace HedgeHog.Alice.Client.Commands.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Commands.CommandReference"/></summary>
    public static class CommandReferenceMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Commands.CommandReference.CommandProperty"/></summary>
        public const string CommandProperty = "CommandProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Commands.CommandReference.Command"/></summary>
        public const string Command = "Command";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandReference.CanExecute"/></summary>
        public const string CanExecute = "CanExecute";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandReference.Execute"/></summary>
        public const string Execute = "Execute";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandReference.OnCommandChanged"/></summary>
        public const string OnCommandChanged = "OnCommandChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandReference.CreateInstanceCore"/></summary>
        public const string CreateInstanceCore = "CreateInstanceCore";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Commands.CommandReference.Command"/></summary>
        public static PropertyPath CommandPath { get { return new PropertyPath("Command"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand"/></summary>
    public static class DelegateCommandMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.CanExecute"/></summary>
        public const string CanExecute = "CanExecute";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.Execute"/></summary>
        public const string Execute = "Execute";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.IsAutomaticRequeryDisabled"/></summary>
        public const string IsAutomaticRequeryDisabled = "IsAutomaticRequeryDisabled";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.RaiseCanExecuteChanged"/></summary>
        public const string RaiseCanExecuteChanged = "RaiseCanExecuteChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.OnCanExecuteChanged"/></summary>
        public const string OnCanExecuteChanged = "OnCanExecuteChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.CanExecute"/></summary>
        public const string ICommand_CanExecute = "ICommand.CanExecute";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.Execute"/></summary>
        public const string ICommand_Execute = "ICommand.Execute";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand._executeMethod"/></summary>
        public const string _executeMethod = "_executeMethod";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand._canExecuteMethod"/></summary>
        public const string _canExecuteMethod = "_canExecuteMethod";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand._isAutomaticRequeryDisabled"/></summary>
        public const string _isAutomaticRequeryDisabled = "_isAutomaticRequeryDisabled";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand._canExecuteChangedHandlers"/></summary>
        public const string _canExecuteChangedHandlers = "_canExecuteChangedHandlers";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.IsAutomaticRequeryDisabled"/></summary>
        public static PropertyPath IsAutomaticRequeryDisabledPath { get { return new PropertyPath("IsAutomaticRequeryDisabled"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper"/></summary>
    public static class CommandManagerHelperMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper.CallWeakReferenceHandlers"/></summary>
        public const string CallWeakReferenceHandlers = "CallWeakReferenceHandlers";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper.AddHandlersToRequerySuggested"/></summary>
        public const string AddHandlersToRequerySuggested = "AddHandlersToRequerySuggested";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper.RemoveHandlersFromRequerySuggested"/></summary>
        public const string RemoveHandlersFromRequerySuggested = "RemoveHandlersFromRequerySuggested";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper.AddWeakReferenceHandler"/></summary>
        public const string AddWeakReferenceHandler = "AddWeakReferenceHandler";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper.RemoveWeakReferenceHandler"/></summary>
        public const string RemoveWeakReferenceHandler = "RemoveWeakReferenceHandler";


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Images.Metadata
{
    /// <summary>Metadata for File down-arrow-3675-16.png</summary>
    public static class DownArrow367516Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Images/down-arrow-3675-16.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/down-arrow-3675-16.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/down-arrow-3675-16.png")); } }


    }

    /// <summary>Metadata for File DownArrow-32.png</summary>
    public static class DownArrow32Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Images/DownArrow-32.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/DownArrow-32.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/DownArrow-32.png")); } }


    }

    /// <summary>Metadata for File UpArrow-32.png</summary>
    public static class UpArrow32Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Images/UpArrow-32.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/UpArrow-32.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/UpArrow-32.png")); } }


    }

}

namespace HedgeHog.Alice.Client.Models.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Models.AccountModelBase"/></summary>
    public static class AccountModelBaseMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Models.AccountModelBase._coreFX"/></summary>
        public const string _coreFX = "_coreFX";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.CoreFX"/></summary>
        public const string CoreFX = "CoreFX";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.fwLocal"/></summary>
        public const string fwLocal = "fwLocal";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.IsLoggedIn"/></summary>
        public const string IsLoggedIn = "IsLoggedIn";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Models.AccountModelBase._tradingAccount"/></summary>
        public const string _tradingAccount = "_tradingAccount";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingAccount"/></summary>
        public const string TradingAccount = "TradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Models.AccountModelBase._tradingPassword"/></summary>
        public const string _tradingPassword = "_tradingPassword";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingPassword"/></summary>
        public const string TradingPassword = "TradingPassword";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingDemo"/></summary>
        public const string TradingDemo = "TradingDemo";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.CoreFX"/></summary>
        public static PropertyPath CoreFXPath { get { return new PropertyPath("CoreFX"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.IsLoggedIn"/></summary>
        public static PropertyPath IsLoggedInPath { get { return new PropertyPath("IsLoggedIn"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingAccount"/></summary>
        public static PropertyPath TradingAccountPath { get { return new PropertyPath("TradingAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingPassword"/></summary>
        public static PropertyPath TradingPasswordPath { get { return new PropertyPath("TradingPassword"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingDemo"/></summary>
        public static PropertyPath TradingDemoPath { get { return new PropertyPath("TradingDemo"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Models.AccountLocal"/></summary>
    public static class AccountLocalMetadata
    {
        
    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Properties.DataSources.Metadata
{
    /// <summary>Metadata for File HedgeHog.Alice.Client.Models.AliceEntities.datasource</summary>
    public static class HedgeHogAliceClientModelsAliceEntitiesDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Alice.Client.Models.AliceEntities.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Alice.Client.Models.AliceEntities.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Alice.Client.Models.AliceEntities.datasource")); } }


    }

    /// <summary>Metadata for File HedgeHog.Bars.Rate.datasource</summary>
    public static class HedgeHogBarsRateDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Bars.Rate.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Bars.Rate.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Bars.Rate.datasource")); } }


    }

    /// <summary>Metadata for File HedgeHog.Shared.Account.datasource</summary>
    public static class HedgeHogSharedAccountDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Account.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Account.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Account.datasource")); } }


    }

    /// <summary>Metadata for File HedgeHog.Shared.AccountInfo.datasource</summary>
    public static class HedgeHogSharedAccountInfoDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.AccountInfo.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.AccountInfo.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.AccountInfo.datasource")); } }


    }

    /// <summary>Metadata for File HedgeHog.Shared.Trade.datasource</summary>
    public static class HedgeHogSharedTradeDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Trade.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Trade.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Trade.datasource")); } }


    }

    /// <summary>Metadata for File Order2GoAddIn.Trade.datasource</summary>
    public static class Order2GoAddInTradeDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/Order2GoAddIn.Trade.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/Order2GoAddIn.Trade.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/Order2GoAddIn.Trade.datasource")); } }


    }

    /// <summary>Metadata for File TradingAccountModel.datasource</summary>
    public static class TradingAccountModelDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/TradingAccountModel.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/TradingAccountModel.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/TradingAccountModel.datasource")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Properties.Metadata
{
    /// <summary>Metadata for File Resources.resx</summary>
    public static class ResourcesResx    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/Resources.resx", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/Resources.resx"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/Resources.resx")); } }


    }

    /// <summary>Metadata for File Settings.settings</summary>
    public static class SettingsSettings    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/Settings.settings", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/Settings.settings"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/Settings.settings")); } }


    }

}

namespace HedgeHog.Alice.Client.Properties.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Properties.Resources"/></summary>
    public static class ResourcesMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Properties.Resources.resourceMan"/></summary>
        public const string resourceMan = "resourceMan";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Properties.Resources.resourceCulture"/></summary>
        public const string resourceCulture = "resourceCulture";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Resources.ResourceManager"/></summary>
        public const string ResourceManager = "ResourceManager";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Resources.Culture"/></summary>
        public const string Culture = "Culture";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Resources.ResourceManager"/></summary>
        public static PropertyPath ResourceManagerPath { get { return new PropertyPath("ResourceManager"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Resources.Culture"/></summary>
        public static PropertyPath CulturePath { get { return new PropertyPath("Culture"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Properties.Settings"/></summary>
    public static class SettingsMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Properties.Settings.defaultInstance"/></summary>
        public const string defaultInstance = "defaultInstance";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Settings.Default"/></summary>
        public const string Default = "Default";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Settings.ForexConnectionString"/></summary>
        public const string ForexConnectionString = "ForexConnectionString";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Settings.Default"/></summary>
        public static PropertyPath DefaultPath { get { return new PropertyPath("Default"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Settings.ForexConnectionString"/></summary>
        public static PropertyPath ForexConnectionStringPath { get { return new PropertyPath("ForexConnectionString"); } }

    }

}

namespace HedgeHog.Alice.Client.FileMetadata.RemoteControl.Metadata
{
    /// <summary>Metadata for XAML ButtonImage.xaml</summary>
    public static class ButtonImageXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/RemoteControl/ButtonImage.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/ButtonImage.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/ButtonImage.xaml")); } }


    }

    /// <summary>Metadata for XAML OrderTemplates.xaml</summary>
    public static class OrderTemplatesXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/RemoteControl/OrderTemplates.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/OrderTemplates.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/OrderTemplates.xaml")); } }


    }

    /// <summary>Metadata for XAML RemoteControl.xaml</summary>
    public static class RemoteControlXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/RemoteControl/RemoteControl.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/RemoteControl.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/RemoteControl.xaml")); } }

            /// <summary>Represents x:Key="BooleanToVisibilityConverter"/></summary>
            public static string BooleanToVisibilityConverterKey { get { return "BooleanToVisibilityConverter"; } }

            /// <summary>Represents x:Key="SmallButtonTemplate"/></summary>
            public static string SmallButtonTemplateKey { get { return "SmallButtonTemplate"; } }

            /// <summary>Represents x:Key="DeleteAccountCellTemplate"/></summary>
            public static string DeleteAccountCellTemplateKey { get { return "DeleteAccountCellTemplate"; } }

            /// <summary>Represents x:Key="InstrumentTemplate"/></summary>
            public static string InstrumentTemplateKey { get { return "InstrumentTemplate"; } }

            /// <summary>Represents x:Key="InstrumentEditTemplate"/></summary>
            public static string InstrumentEditTemplateKey { get { return "InstrumentEditTemplate"; } }

            /// <summary>Represents x:Key="BuyCellTemplate"/></summary>
            public static string BuyCellTemplateKey { get { return "BuyCellTemplate"; } }

            /// <summary>Represents x:Key="SellCellTemplate"/></summary>
            public static string SellCellTemplateKey { get { return "SellCellTemplate"; } }

            /// <summary>Represents x:Key="StopCellTemplate"/></summary>
            public static string StopCellTemplateKey { get { return "StopCellTemplate"; } }

            /// <summary>Represents x:Key="StopCellEditTemplate"/></summary>
            public static string StopCellEditTemplateKey { get { return "StopCellEditTemplate"; } }

            /// <summary>Represents x:Key="LimitBarCellTemplate"/></summary>
            public static string LimitBarCellTemplateKey { get { return "LimitBarCellTemplate"; } }

            /// <summary>Represents x:Key="NetCellTemplate"/></summary>
            public static string NetCellTemplateKey { get { return "NetCellTemplate"; } }

            /// <summary>Represents x:Key="LossCellTemplate"/></summary>
            public static string LossCellTemplateKey { get { return "LossCellTemplate"; } }

            /// <summary>Represents x:Key="LossEditCellTemplate"/></summary>
            public static string LossEditCellTemplateKey { get { return "LossEditCellTemplate"; } }

            /// <summary>Represents x:Key="CloseCellTemplate"/></summary>
            public static string CloseCellTemplateKey { get { return "CloseCellTemplate"; } }

            /// <summary>Represents x:Key="ReverseCellTemplate"/></summary>
            public static string ReverseCellTemplateKey { get { return "ReverseCellTemplate"; } }

            /// <summary>Represents x:Key="FreezeValues"/></summary>
            public static string FreezeValuesKey { get { return "FreezeValues"; } }

            /// <summary>Represents x:Key="TradeDirectionValues"/></summary>
            public static string TradeDirectionValuesKey { get { return "TradeDirectionValues"; } }

            /// <summary>Represents x:Key="StrategyValues"/></summary>
            public static string StrategyValuesKey { get { return "StrategyValues"; } }

            /// <summary>Represents x:Key="CorridorCalculationValues"/></summary>
            public static string CorridorCalculationValuesKey { get { return "CorridorCalculationValues"; } }

            /// <summary>Represents x:Key="BarsPeriodValues"/></summary>
            public static string BarsPeriodValuesKey { get { return "BarsPeriodValues"; } }

            /// <summary>Represents x:Key="PapayaWhipBackgroundStyle"/></summary>
            public static string PapayaWhipBackgroundStyleKey { get { return "PapayaWhipBackgroundStyle"; } }


    }

}

namespace HedgeHog.Alice.Client.RemoteControl.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.RemoteControl.ButtonImage"/></summary>
    public static class ButtonImageMetadata
    {
        
    }

}

namespace HedgeHog.Alice.Client.FileMetadata.ServiceReferences.PriceService.Metadata
{
    /// <summary>Metadata for File Arrays.xsd</summary>
    public static class ArraysXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/PriceService/Arrays.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/Arrays.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/Arrays.xsd")); } }


    }

    /// <summary>Metadata for File configuration.svcinfo</summary>
    public static class ConfigurationSvcinfo    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/PriceService/configuration.svcinfo", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/configuration.svcinfo"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/configuration.svcinfo")); } }


    }

    /// <summary>Metadata for File configuration91.svcinfo</summary>
    public static class Configuration91Svcinfo    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/PriceService/configuration91.svcinfo", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/configuration91.svcinfo"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/configuration91.svcinfo")); } }


    }

    /// <summary>Metadata for File HedgeHog.Alice.Server.xsd</summary>
    public static class HedgeHogAliceServerXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/PriceService/HedgeHog.Alice.Server.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/HedgeHog.Alice.Server.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/HedgeHog.Alice.Server.xsd")); } }


    }

    /// <summary>Metadata for File HedgeHog.Bars.xsd</summary>
    public static class HedgeHogBarsXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/PriceService/HedgeHog.Bars.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/HedgeHog.Bars.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/HedgeHog.Bars.xsd")); } }


    }

    /// <summary>Metadata for File Reference.svcmap</summary>
    public static class ReferenceSvcmap    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/PriceService/Reference.svcmap", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/Reference.svcmap"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/Reference.svcmap")); } }


    }

    /// <summary>Metadata for File service.wsdl</summary>
    public static class ServiceWsdl    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/PriceService/service.wsdl", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/service.wsdl"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/service.wsdl")); } }


    }

    /// <summary>Metadata for File service.xsd</summary>
    public static class ServiceXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/PriceService/service.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/service.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/service.xsd")); } }


    }

    /// <summary>Metadata for File service1.xsd</summary>
    public static class Service1Xsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/PriceService/service1.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/service1.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/PriceService/service1.xsd")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.ServiceReferences.TraderService.Metadata
{
    /// <summary>Metadata for File Arrays.xsd</summary>
    public static class ArraysXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/Arrays.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/Arrays.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/Arrays.xsd")); } }


    }

    /// <summary>Metadata for File configuration.svcinfo</summary>
    public static class ConfigurationSvcinfo    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/configuration.svcinfo", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/configuration.svcinfo"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/configuration.svcinfo")); } }


    }

    /// <summary>Metadata for File configuration91.svcinfo</summary>
    public static class Configuration91Svcinfo    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/configuration91.svcinfo", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/configuration91.svcinfo"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/configuration91.svcinfo")); } }


    }

    /// <summary>Metadata for File HedgeHog.Alice.WCF.xsd</summary>
    public static class HedgeHogAliceWCFXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Alice.WCF.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Alice.WCF.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Alice.WCF.xsd")); } }


    }

    /// <summary>Metadata for File HedgeHog.Shared.xsd</summary>
    public static class HedgeHogSharedXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Shared.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Shared.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Shared.xsd")); } }


    }

    /// <summary>Metadata for File Reference.svcmap</summary>
    public static class ReferenceSvcmap    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/Reference.svcmap", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/Reference.svcmap"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/Reference.svcmap")); } }


    }

    /// <summary>Metadata for File service.wsdl</summary>
    public static class ServiceWsdl    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/service.wsdl", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service.wsdl"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service.wsdl")); } }


    }

    /// <summary>Metadata for File service.xsd</summary>
    public static class ServiceXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/service.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service.xsd")); } }


    }

    /// <summary>Metadata for File service1.xsd</summary>
    public static class Service1Xsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/service1.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service1.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service1.xsd")); } }


    }

    /// <summary>Metadata for File System.xsd</summary>
    public static class SystemXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/System.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/System.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/System.xsd")); } }


    }

}

namespace HedgeHog.Alice.Client.TraderService.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TraderService.CompositeType"/></summary>
    public static class CompositeTypeMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.extensionDataField"/></summary>
        public const string extensionDataField = "extensionDataField";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.BoolValueField"/></summary>
        public const string BoolValueField = "BoolValueField";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.StringValueField"/></summary>
        public const string StringValueField = "StringValueField";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.ExtensionData"/></summary>
        public const string ExtensionData = "ExtensionData";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.BoolValue"/></summary>
        public const string BoolValue = "BoolValue";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.StringValue"/></summary>
        public const string StringValue = "StringValue";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.RaisePropertyChanged"/></summary>
        public const string RaisePropertyChanged = "RaisePropertyChanged";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.ExtensionData"/></summary>
        public static PropertyPath ExtensionDataPath { get { return new PropertyPath("ExtensionData"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.BoolValue"/></summary>
        public static PropertyPath BoolValuePath { get { return new PropertyPath("BoolValue"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.StringValue"/></summary>
        public static PropertyPath StringValuePath { get { return new PropertyPath("StringValue"); } }

    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Store.Metadata
{
    /// <summary>Metadata for File Alice.sdf</summary>
    public static class AliceSdf    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Store/Alice.sdf", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Store/Alice.sdf"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Store/Alice.sdf")); } }


    }

    /// <summary>Metadata for File Alice.xls</summary>
    public static class AliceXls    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Store/Alice.xls", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Store/Alice.xls"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Store/Alice.xls")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Tests.Metadata
{
    /// <summary>Metadata for File EURJPY.txt</summary>
    public static class EURJPYTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/EURJPY.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/EURJPY.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/EURJPY.txt")); } }


    }

    /// <summary>Metadata for File Params_EURJPY_ReversedVoid.txt</summary>
    public static class Params_EURJPY_ReversedVoidTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_ReversedVoid.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_ReversedVoid.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_ReversedVoid.txt")); } }


    }

    /// <summary>Metadata for File Params_EURJPY_RustyBottoms.txt</summary>
    public static class Params_EURJPY_RustyBottomsTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_RustyBottoms.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_RustyBottoms.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_RustyBottoms.txt")); } }


    }

    /// <summary>Metadata for File Params_EURJPY_StDev.txt</summary>
    public static class Params_EURJPY_StDevTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_StDev.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_StDev.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_StDev.txt")); } }


    }

    /// <summary>Metadata for File Params_EURJPY_StDev_CorrByBal.txt</summary>
    public static class Params_EURJPY_StDev_CorrByBalTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_StDev_CorrByBal.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_StDev_CorrByBal.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_StDev_CorrByBal.txt")); } }


    }

    /// <summary>Metadata for File Params_EURJPY_StDev2.txt</summary>
    public static class Params_EURJPY_StDev2Txt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_StDev2.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_StDev2.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_EURJPY_StDev2.txt")); } }


    }

    /// <summary>Metadata for File Params_TimeFrame_Original.txt</summary>
    public static class Params_TimeFrame_OriginalTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/Params_TimeFrame_Original.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_TimeFrame_Original.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Params_TimeFrame_Original.txt")); } }


    }

    /// <summary>Metadata for File Test_EURJPY_StDev3.txt</summary>
    public static class Test_EURJPY_StDev3Txt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/Test_EURJPY_StDev3.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Test_EURJPY_StDev3.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Test_EURJPY_StDev3.txt")); } }


    }

    /// <summary>Metadata for File Test_EURJPY_StDev3_Original.txt</summary>
    public static class Test_EURJPY_StDev3_OriginalTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/Test_EURJPY_StDev3_Original.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Test_EURJPY_StDev3_Original.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Test_EURJPY_StDev3_Original.txt")); } }


    }

    /// <summary>Metadata for File Test_EURJPY_StDev31_03.txt</summary>
    public static class Test_EURJPY_StDev31_03Txt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/Test_EURJPY_StDev31_03.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Test_EURJPY_StDev31_03.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Test_EURJPY_StDev31_03.txt")); } }


    }

    /// <summary>Metadata for File Test_Manual.txt</summary>
    public static class Test_ManualTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/Test_Manual.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Test_Manual.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/Test_Manual.txt")); } }


    }

    /// <summary>Metadata for File TestParams.txt</summary>
    public static class TestParamsTxt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Tests/TestParams.txt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/TestParams.txt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Tests/TestParams.txt")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Themes.Metadata
{
    /// <summary>Metadata for File DownArrow-32.png</summary>
    public static class DownArrow32Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Themes/DownArrow-32.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/DownArrow-32.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/DownArrow-32.png")); } }


    }

    /// <summary>Metadata for XAML Generic.xaml</summary>
    public static class GenericXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Themes/Generic.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/Generic.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/Generic.xaml")); } }

            /// <summary>Represents x:Key="BoolToColorConverter"/></summary>
            public static string BoolToColorConverterKey { get { return "BoolToColorConverter"; } }

            /// <summary>Represents x:Key="ProfitToColorConverter"/></summary>
            public static string ProfitToColorConverterKey { get { return "ProfitToColorConverter"; } }

            /// <summary>Represents x:Key="CombinedBalanceCellTemplate"/></summary>
            public static string CombinedBalanceCellTemplateKey { get { return "CombinedBalanceCellTemplate"; } }

            /// <summary>Represents x:Key="CombinedProfitCellTemplate"/></summary>
            public static string CombinedProfitCellTemplateKey { get { return "CombinedProfitCellTemplate"; } }


    }

    /// <summary>Metadata for File UpArrow-32.png</summary>
    public static class UpArrow32Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Themes/UpArrow-32.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/UpArrow-32.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/UpArrow-32.png")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.UI.Metadata
{
    /// <summary>Metadata for XAML Alice.xaml</summary>
    public static class AliceXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Alice.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Alice.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Alice.xaml")); } }


    }

    /// <summary>Metadata for XAML TradesOnServer.xaml</summary>
    public static class TradesOnServerXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/TradesOnServer.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/TradesOnServer.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/TradesOnServer.xaml")); } }

            /// <summary>Represents x:Key="CloseLocalTradeTemplate"/></summary>
            public static string CloseLocalTradeTemplateKey { get { return "CloseLocalTradeTemplate"; } }

            /// <summary>Represents x:Key="CloseServerTradeTemplate"/></summary>
            public static string CloseServerTradeTemplateKey { get { return "CloseServerTradeTemplate"; } }

            /// <summary>Represents x:Key="SyncTradeTemplate"/></summary>
            public static string SyncTradeTemplateKey { get { return "SyncTradeTemplate"; } }

            /// <summary>Represents x:Key="TradesOnLocal"/></summary>
            public static string TradesOnLocalKey { get { return "TradesOnLocal"; } }

            /// <summary>Represents x:Key="TradesDifference"/></summary>
            public static string TradesDifferenceKey { get { return "TradesDifference"; } }


    }

}

namespace HedgeHog.Alice.Client.UI.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Alice"/></summary>
    public static class AliceMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.DataGrid_D"/></summary>
    public static class DataGrid_DMetadata
    {
        
    }

}

namespace HedgeHog.Alice.Client.FileMetadata.UI.Controls.Account.Metadata
{
    /// <summary>Metadata for XAML AccountLogin.xaml</summary>
    public static class AccountLoginXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Controls/Account/AccountLogin.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Controls/Account/AccountLogin.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Controls/Account/AccountLogin.xaml")); } }


    }

}

namespace HedgeHog.Alice.Client.UI.Controls.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView"/></summary>
    public static class AccountLoginViewMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.masterModel"/></summary>
        public const string masterModel = "masterModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.AccountLoginCommand"/></summary>
        public const string AccountLoginCommand = "AccountLoginCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.AccountLoginCommandProperty"/></summary>
        public const string AccountLoginCommandProperty = "AccountLoginCommandProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.OpenNewAccountCommand"/></summary>
        public const string OpenNewAccountCommand = "OpenNewAccountCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.OpenNewAccountCommandProperty"/></summary>
        public const string OpenNewAccountCommandProperty = "OpenNewAccountCommandProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingAccount"/></summary>
        public const string TradingAccount = "TradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingAccountProperty"/></summary>
        public const string TradingAccountProperty = "TradingAccountProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingPassword"/></summary>
        public const string TradingPassword = "TradingPassword";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingPasswordProperty"/></summary>
        public const string TradingPasswordProperty = "TradingPasswordProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingDemo"/></summary>
        public const string TradingDemo = "TradingDemo";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingDemoProperty"/></summary>
        public const string TradingDemoProperty = "TradingDemoProperty";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.Ligin_Click"/></summary>
        public const string Ligin_Click = "Ligin_Click";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.NewAccount_Click"/></summary>
        public const string NewAccount_Click = "NewAccount_Click";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.masterModel"/></summary>
        public static PropertyPath masterModelPath { get { return new PropertyPath("masterModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.AccountLoginCommand"/></summary>
        public static PropertyPath AccountLoginCommandPath { get { return new PropertyPath("AccountLoginCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.OpenNewAccountCommand"/></summary>
        public static PropertyPath OpenNewAccountCommandPath { get { return new PropertyPath("OpenNewAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingAccount"/></summary>
        public static PropertyPath TradingAccountPath { get { return new PropertyPath("TradingAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingPassword"/></summary>
        public static PropertyPath TradingPasswordPath { get { return new PropertyPath("TradingPassword"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingDemo"/></summary>
        public static PropertyPath TradingDemoPath { get { return new PropertyPath("TradingDemo"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.OpenNewAccountRelayCommand"/></summary>
    public static class OpenNewAccountRelayCommandMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginRelayCommand"/></summary>
    public static class AccountLoginRelayCommandMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo"/></summary>
    public static class LoginInfoMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Account"/></summary>
        public const string Account = "Account";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Password"/></summary>
        public const string Password = "Password";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.IsDemo"/></summary>
        public const string IsDemo = "IsDemo";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Canceled"/></summary>
        public const string Canceled = "Canceled";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Account"/></summary>
        public static PropertyPath AccountPath { get { return new PropertyPath("Account"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Password"/></summary>
        public static PropertyPath PasswordPath { get { return new PropertyPath("Password"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.IsDemo"/></summary>
        public static PropertyPath IsDemoPath { get { return new PropertyPath("IsDemo"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Canceled"/></summary>
        public static PropertyPath CanceledPath { get { return new PropertyPath("Canceled"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount"/></summary>
    public static class SlaveAccountMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.MasterModel"/></summary>
        public const string MasterModel = "MasterModel";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.MasterModelProperty"/></summary>
        public const string MasterModelProperty = "MasterModelProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.SlaveModel"/></summary>
        public const string SlaveModel = "SlaveModel";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.SlaveModelProperty"/></summary>
        public const string SlaveModelProperty = "SlaveModelProperty";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.SetModelDP{T}"/></summary>
        public const string SetModelDP = "SetModelDP";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradeRatio"/></summary>
        public const string TradeRatio = "TradeRatio";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradeRatioProperty"/></summary>
        public const string TradeRatioProperty = "TradeRatioProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingAccount"/></summary>
        public const string TradingAccount = "TradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingAccountProperty"/></summary>
        public const string TradingAccountProperty = "TradingAccountProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingPassword"/></summary>
        public const string TradingPassword = "TradingPassword";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingPasswordProperty"/></summary>
        public const string TradingPasswordProperty = "TradingPasswordProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingDemo"/></summary>
        public const string TradingDemo = "TradingDemo";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingDemoProperty"/></summary>
        public const string TradingDemoProperty = "TradingDemoProperty";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.Login"/></summary>
        public const string Login = "Login";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.MasterModel"/></summary>
        public static PropertyPath MasterModelPath { get { return new PropertyPath("MasterModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.SlaveModel"/></summary>
        public static PropertyPath SlaveModelPath { get { return new PropertyPath("SlaveModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradeRatio"/></summary>
        public static PropertyPath TradeRatioPath { get { return new PropertyPath("TradeRatio"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingAccount"/></summary>
        public static PropertyPath TradingAccountPath { get { return new PropertyPath("TradingAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingPassword"/></summary>
        public static PropertyPath TradingPasswordPath { get { return new PropertyPath("TradingPassword"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingDemo"/></summary>
        public static PropertyPath TradingDemoPath { get { return new PropertyPath("TradingDemo"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel"/></summary>
    public static class SlaveAccountModelMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.secondsToWaitForTrade"/></summary>
        public const string secondsToWaitForTrade = "secondsToWaitForTrade";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.isInDesign"/></summary>
        public const string isInDesign = "isInDesign";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TargetInPips"/></summary>
        public const string TargetInPips = "TargetInPips";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.syncronizeScheduler"/></summary>
        public const string syncronizeScheduler = "syncronizeScheduler";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._accountModel"/></summary>
        public const string _accountModel = "_accountModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AccountModel"/></summary>
        public const string AccountModel = "AccountModel";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._masterModel"/></summary>
        public const string _masterModel = "_masterModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.MasterModel"/></summary>
        public const string MasterModel = "MasterModel";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.value_MasterTradeRemoved"/></summary>
        public const string value_MasterTradeRemoved = "value_MasterTradeRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.value_MasterTradeAdded"/></summary>
        public const string value_MasterTradeAdded = "value_MasterTradeAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.value_SlaveLoginRequestEvent"/></summary>
        public const string value_SlaveLoginRequestEvent = "value_SlaveLoginRequestEvent";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.value_MasterListChangedEvent"/></summary>
        public const string value_MasterListChangedEvent = "value_MasterListChangedEvent";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerToLocalRatioValue"/></summary>
        public const string ServerToLocalRatioValue = "ServerToLocalRatioValue";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerToLocalRatio"/></summary>
        public const string ServerToLocalRatio = "ServerToLocalRatio";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._serverTime"/></summary>
        public const string _serverTime = "_serverTime";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerTime"/></summary>
        public const string ServerTime = "ServerTime";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AliceMode"/></summary>
        public const string AliceMode = "AliceMode";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsAliceActive"/></summary>
        public const string IsAliceActive = "IsAliceActive";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LocalTrades"/></summary>
        public const string LocalTrades = "LocalTrades";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LocalTradesList"/></summary>
        public const string LocalTradesList = "LocalTradesList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AbsentTrades"/></summary>
        public const string AbsentTrades = "AbsentTrades";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AbsentTradesList"/></summary>
        public const string AbsentTradesList = "AbsentTradesList";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.masterTradesPending"/></summary>
        public const string masterTradesPending = "masterTradesPending";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.masterTradesSynced"/></summary>
        public const string masterTradesSynced = "masterTradesSynced";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._masterList"/></summary>
        public const string _masterList = "_masterList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.MasterList"/></summary>
        public const string MasterList = "MasterList";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.InvokeSyncronize"/></summary>
        public const string InvokeSyncronize = "InvokeSyncronize";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.Syncronize"/></summary>
        public const string Syncronize = "Syncronize";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsStopOk"/></summary>
        public const string IsStopOk = "IsStopOk";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsLimitOk"/></summary>
        public const string IsLimitOk = "IsLimitOk";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncTrade"/></summary>
        public const string SyncTrade = "SyncTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.GetLocalBuyFromMaster"/></summary>
        public const string GetLocalBuyFromMaster = "GetLocalBuyFromMaster";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.GetMasterStop"/></summary>
        public const string GetMasterStop = "GetMasterStop";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.GetMasterLimit"/></summary>
        public const string GetMasterLimit = "GetMasterLimit";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.OpenTradeSchedulers"/></summary>
        public const string OpenTradeSchedulers = "OpenTradeSchedulers";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.OpenTrade"/></summary>
        public const string OpenTrade = "OpenTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.fwLocal_Error"/></summary>
        public const string fwLocal_Error = "fwLocal_Error";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ShowTrades"/></summary>
        public const string ShowTrades = "ShowTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.tradeRequestManager"/></summary>
        public const string tradeRequestManager = "tradeRequestManager";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.DoOrderRemoved"/></summary>
        public const string DoOrderRemoved = "DoOrderRemoved";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingAccountModel"/></summary>
        public const string TradingAccountModel = "TradingAccountModel";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._coreFX"/></summary>
        public const string _coreFX = "_coreFX";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CoreFX"/></summary>
        public const string CoreFX = "CoreFX";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.fwLocal"/></summary>
        public const string fwLocal = "fwLocal";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsLoggedIn"/></summary>
        public const string IsLoggedIn = "IsLoggedIn";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.fwLocal_PriceChanged"/></summary>
        public const string fwLocal_PriceChanged = "fwLocal_PriceChanged";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.resubmitMasterPendingTrade"/></summary>
        public const string resubmitMasterPendingTrade = "resubmitMasterPendingTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.fw_TradeAded"/></summary>
        public const string fw_TradeAded = "fw_TradeAded";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._AccountLoginCommand"/></summary>
        public const string _AccountLoginCommand = "_AccountLoginCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AccountLoginCommand"/></summary>
        public const string AccountLoginCommand = "AccountLoginCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AccountLogin"/></summary>
        public const string AccountLogin = "AccountLogin";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.Login"/></summary>
        public const string Login = "Login";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._SyncTradeCommand"/></summary>
        public const string _SyncTradeCommand = "_SyncTradeCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncTradeCommand"/></summary>
        public const string SyncTradeCommand = "SyncTradeCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.syncTradeCount"/></summary>
        public const string syncTradeCount = "syncTradeCount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.syncAll"/></summary>
        public const string syncAll = "syncAll";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._SyncAllTradeCommand"/></summary>
        public const string _SyncAllTradeCommand = "_SyncAllTradeCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncAllTradeCommand"/></summary>
        public const string SyncAllTradeCommand = "SyncAllTradeCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncAllTrades"/></summary>
        public const string SyncAllTrades = "SyncAllTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._OpenNewLocalAccountCommand"/></summary>
        public const string _OpenNewLocalAccountCommand = "_OpenNewLocalAccountCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.OpenNewLocalAccountCommand"/></summary>
        public const string OpenNewLocalAccountCommand = "OpenNewLocalAccountCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.OpenNewLocalAccount"/></summary>
        public const string OpenNewLocalAccount = "OpenNewLocalAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._CloseLocalTradeCommand"/></summary>
        public const string _CloseLocalTradeCommand = "_CloseLocalTradeCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseLocalTradeCommand"/></summary>
        public const string CloseLocalTradeCommand = "CloseLocalTradeCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseLocalTrade"/></summary>
        public const string CloseLocalTrade = "CloseLocalTrade";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._CloseAllLocalTradesCommand"/></summary>
        public const string _CloseAllLocalTradesCommand = "_CloseAllLocalTradesCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseAllLocalTradesCommand"/></summary>
        public const string CloseAllLocalTradesCommand = "CloseAllLocalTradesCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseAllLocalTrades"/></summary>
        public const string CloseAllLocalTrades = "CloseAllLocalTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._TradingAccount"/></summary>
        public const string _TradingAccount = "_TradingAccount";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingAccount"/></summary>
        public const string TradingAccount = "TradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._TradingPassword"/></summary>
        public const string _TradingPassword = "_TradingPassword";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingPassword"/></summary>
        public const string TradingPassword = "TradingPassword";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._TradingDemo"/></summary>
        public const string _TradingDemo = "_TradingDemo";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingDemo"/></summary>
        public const string TradingDemo = "TradingDemo";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.lastLogTime"/></summary>
        public const string lastLogTime = "lastLogTime";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LogText"/></summary>
        public const string LogText = "LogText";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._logQueue"/></summary>
        public const string _logQueue = "_logQueue";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._log"/></summary>
        public const string _log = "_log";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.Log"/></summary>
        public const string Log = "Log";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.GetExceptionShort"/></summary>
        public const string GetExceptionShort = "GetExceptionShort";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsLogExpanded"/></summary>
        public const string IsLogExpanded = "IsLogExpanded";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.isInDesign"/></summary>
        public static PropertyPath isInDesignPath { get { return new PropertyPath("isInDesign"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TargetInPips"/></summary>
        public static PropertyPath TargetInPipsPath { get { return new PropertyPath("TargetInPips"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AccountModel"/></summary>
        public static PropertyPath AccountModelPath { get { return new PropertyPath("AccountModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.MasterModel"/></summary>
        public static PropertyPath MasterModelPath { get { return new PropertyPath("MasterModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerToLocalRatioValue"/></summary>
        public static PropertyPath ServerToLocalRatioValuePath { get { return new PropertyPath("ServerToLocalRatioValue"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerToLocalRatio"/></summary>
        public static PropertyPath ServerToLocalRatioPath { get { return new PropertyPath("ServerToLocalRatio"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerTime"/></summary>
        public static PropertyPath ServerTimePath { get { return new PropertyPath("ServerTime"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AliceMode"/></summary>
        public static PropertyPath AliceModePath { get { return new PropertyPath("AliceMode"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsAliceActive"/></summary>
        public static PropertyPath IsAliceActivePath { get { return new PropertyPath("IsAliceActive"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LocalTrades"/></summary>
        public static PropertyPath LocalTradesPath { get { return new PropertyPath("LocalTrades"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LocalTradesList"/></summary>
        public static PropertyPath LocalTradesListPath { get { return new PropertyPath("LocalTradesList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AbsentTrades"/></summary>
        public static PropertyPath AbsentTradesPath { get { return new PropertyPath("AbsentTrades"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AbsentTradesList"/></summary>
        public static PropertyPath AbsentTradesListPath { get { return new PropertyPath("AbsentTradesList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.MasterList"/></summary>
        public static PropertyPath MasterListPath { get { return new PropertyPath("MasterList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingAccountModel"/></summary>
        public static PropertyPath TradingAccountModelPath { get { return new PropertyPath("TradingAccountModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CoreFX"/></summary>
        public static PropertyPath CoreFXPath { get { return new PropertyPath("CoreFX"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsLoggedIn"/></summary>
        public static PropertyPath IsLoggedInPath { get { return new PropertyPath("IsLoggedIn"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AccountLoginCommand"/></summary>
        public static PropertyPath AccountLoginCommandPath { get { return new PropertyPath("AccountLoginCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncTradeCommand"/></summary>
        public static PropertyPath SyncTradeCommandPath { get { return new PropertyPath("SyncTradeCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncAllTradeCommand"/></summary>
        public static PropertyPath SyncAllTradeCommandPath { get { return new PropertyPath("SyncAllTradeCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.OpenNewLocalAccountCommand"/></summary>
        public static PropertyPath OpenNewLocalAccountCommandPath { get { return new PropertyPath("OpenNewLocalAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseLocalTradeCommand"/></summary>
        public static PropertyPath CloseLocalTradeCommandPath { get { return new PropertyPath("CloseLocalTradeCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseAllLocalTradesCommand"/></summary>
        public static PropertyPath CloseAllLocalTradesCommandPath { get { return new PropertyPath("CloseAllLocalTradesCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingAccount"/></summary>
        public static PropertyPath TradingAccountPath { get { return new PropertyPath("TradingAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingPassword"/></summary>
        public static PropertyPath TradingPasswordPath { get { return new PropertyPath("TradingPassword"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingDemo"/></summary>
        public static PropertyPath TradingDemoPath { get { return new PropertyPath("TradingDemo"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LogText"/></summary>
        public static PropertyPath LogTextPath { get { return new PropertyPath("LogText"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.Log"/></summary>
        public static PropertyPath LogPath { get { return new PropertyPath("Log"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsLogExpanded"/></summary>
        public static PropertyPath IsLogExpandedPath { get { return new PropertyPath("IsLogExpanded"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.AccountInfo"/></summary>
    public static class AccountInfoMetadata
    {
        
    }

}

namespace HedgeHog.Alice.Client.FileMetadata.UI.Controls.Account.View.Metadata
{
    /// <summary>Metadata for XAML SlaveAccount.xaml</summary>
    public static class SlaveAccountXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Controls/Account/View/SlaveAccount.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Controls/Account/View/SlaveAccount.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Controls/Account/View/SlaveAccount.xaml")); } }

            /// <summary>Represents x:Key="CloseLocalTradeTemplate"/></summary>
            public static string CloseLocalTradeTemplateKey { get { return "CloseLocalTradeTemplate"; } }

            /// <summary>Represents x:Key="SyncTradeTemplate"/></summary>
            public static string SyncTradeTemplateKey { get { return "SyncTradeTemplate"; } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.UI.Style.Metadata
{
    /// <summary>Metadata for XAML Aero.NormalColor.xaml</summary>
    public static class AeroNormalColorXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/Aero.NormalColor.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Aero.NormalColor.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Aero.NormalColor.xaml")); } }


    }

    /// <summary>Metadata for XAML BureauBlack.xaml</summary>
    public static class BureauBlackXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/BureauBlack.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/BureauBlack.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/BureauBlack.xaml")); } }

            /// <summary>Represents x:Key="OutsideFontColor"/></summary>
            public static string OutsideFontColorKey { get { return "OutsideFontColor"; } }

            /// <summary>Represents x:Key="NormalBrush"/></summary>
            public static string NormalBrushKey { get { return "NormalBrush"; } }

            /// <summary>Represents x:Key="NormalBorderBrush"/></summary>
            public static string NormalBorderBrushKey { get { return "NormalBorderBrush"; } }

            /// <summary>Represents x:Key="NormalHighlightBrush"/></summary>
            public static string NormalHighlightBrushKey { get { return "NormalHighlightBrush"; } }

            /// <summary>Represents x:Key="MouseOverBrush"/></summary>
            public static string MouseOverBrushKey { get { return "MouseOverBrush"; } }

            /// <summary>Represents x:Key="MouseOverBorderBrush"/></summary>
            public static string MouseOverBorderBrushKey { get { return "MouseOverBorderBrush"; } }

            /// <summary>Represents x:Key="MouseOverHighlightBrush"/></summary>
            public static string MouseOverHighlightBrushKey { get { return "MouseOverHighlightBrush"; } }

            /// <summary>Represents x:Key="PressedBrush"/></summary>
            public static string PressedBrushKey { get { return "PressedBrush"; } }

            /// <summary>Represents x:Key="PressedBorderBrush"/></summary>
            public static string PressedBorderBrushKey { get { return "PressedBorderBrush"; } }

            /// <summary>Represents x:Key="PressedHighlightBrush"/></summary>
            public static string PressedHighlightBrushKey { get { return "PressedHighlightBrush"; } }

            /// <summary>Represents x:Key="DisabledBackgroundBrush"/></summary>
            public static string DisabledBackgroundBrushKey { get { return "DisabledBackgroundBrush"; } }

            /// <summary>Represents x:Key="DisabledBorderBrush"/></summary>
            public static string DisabledBorderBrushKey { get { return "DisabledBorderBrush"; } }

            /// <summary>Represents x:Key="FocusBrush"/></summary>
            public static string FocusBrushKey { get { return "FocusBrush"; } }

            /// <summary>Represents x:Key="ControlBackgroundBrush"/></summary>
            public static string ControlBackgroundBrushKey { get { return "ControlBackgroundBrush"; } }

            /// <summary>Represents x:Key="ControlBorderBrush"/></summary>
            public static string ControlBorderBrushKey { get { return "ControlBorderBrush"; } }

            /// <summary>Represents x:Key="GlyphBrush"/></summary>
            public static string GlyphBrushKey { get { return "GlyphBrush"; } }

            /// <summary>Represents x:Key="CheckBoxBackgroundBrush"/></summary>
            public static string CheckBoxBackgroundBrushKey { get { return "CheckBoxBackgroundBrush"; } }

            /// <summary>Represents x:Key="CheckBoxBorderBrush"/></summary>
            public static string CheckBoxBorderBrushKey { get { return "CheckBoxBorderBrush"; } }

            /// <summary>Represents x:Key="CheckBoxInnerBoxBackgroundBrush"/></summary>
            public static string CheckBoxInnerBoxBackgroundBrushKey { get { return "CheckBoxInnerBoxBackgroundBrush"; } }

            /// <summary>Represents x:Key="CheckBoxInnerBoxBorderBrush"/></summary>
            public static string CheckBoxInnerBoxBorderBrushKey { get { return "CheckBoxInnerBoxBorderBrush"; } }

            /// <summary>Represents x:Key="CheckBoxBackgroundFillBrush"/></summary>
            public static string CheckBoxBackgroundFillBrushKey { get { return "CheckBoxBackgroundFillBrush"; } }

            /// <summary>Represents x:Key="CheckBoxMouseOverBrush"/></summary>
            public static string CheckBoxMouseOverBrushKey { get { return "CheckBoxMouseOverBrush"; } }

            /// <summary>Represents x:Key="CheckBoxPressBorderBrush"/></summary>
            public static string CheckBoxPressBorderBrushKey { get { return "CheckBoxPressBorderBrush"; } }

            /// <summary>Represents x:Key="CheckBoxInnerBoxGradientBrush"/></summary>
            public static string CheckBoxInnerBoxGradientBrushKey { get { return "CheckBoxInnerBoxGradientBrush"; } }

            /// <summary>Represents x:Key="RadioButtonBackgroundBrush"/></summary>
            public static string RadioButtonBackgroundBrushKey { get { return "RadioButtonBackgroundBrush"; } }

            /// <summary>Represents x:Key="RadioButtonBorderBrush"/></summary>
            public static string RadioButtonBorderBrushKey { get { return "RadioButtonBorderBrush"; } }

            /// <summary>Represents x:Key="RadioButtonInnerCircleBrush"/></summary>
            public static string RadioButtonInnerCircleBrushKey { get { return "RadioButtonInnerCircleBrush"; } }

            /// <summary>Represents x:Key="RadioButtonInnerCircleBorderBrush"/></summary>
            public static string RadioButtonInnerCircleBorderBrushKey { get { return "RadioButtonInnerCircleBorderBrush"; } }

            /// <summary>Represents x:Key="RadioButtonMouseOverBrush"/></summary>
            public static string RadioButtonMouseOverBrushKey { get { return "RadioButtonMouseOverBrush"; } }

            /// <summary>Represents x:Key="RadioButtonMouseOverBorderBrush"/></summary>
            public static string RadioButtonMouseOverBorderBrushKey { get { return "RadioButtonMouseOverBorderBrush"; } }

            /// <summary>Represents x:Key="RadioButtonPressBrush"/></summary>
            public static string RadioButtonPressBrushKey { get { return "RadioButtonPressBrush"; } }

            /// <summary>Represents x:Key="RadioButtonPressBorderBrush"/></summary>
            public static string RadioButtonPressBorderBrushKey { get { return "RadioButtonPressBorderBrush"; } }

            /// <summary>Represents x:Key="RadioButtonCheckIconBrush"/></summary>
            public static string RadioButtonCheckIconBrushKey { get { return "RadioButtonCheckIconBrush"; } }

            /// <summary>Represents x:Key="RadioButtonCheckIconBorderBrush"/></summary>
            public static string RadioButtonCheckIconBorderBrushKey { get { return "RadioButtonCheckIconBorderBrush"; } }

            /// <summary>Represents x:Key="ScrollBarRepeatButtonBrush"/></summary>
            public static string ScrollBarRepeatButtonBrushKey { get { return "ScrollBarRepeatButtonBrush"; } }

            /// <summary>Represents x:Key="ScrollBarRepeatButtonBorderBrush"/></summary>
            public static string ScrollBarRepeatButtonBorderBrushKey { get { return "ScrollBarRepeatButtonBorderBrush"; } }

            /// <summary>Represents x:Key="ScrollBarRepeatButtonPressedBrush"/></summary>
            public static string ScrollBarRepeatButtonPressedBrushKey { get { return "ScrollBarRepeatButtonPressedBrush"; } }

            /// <summary>Represents x:Key="ScrollBarRepeatButtonPressedBorderBrush"/></summary>
            public static string ScrollBarRepeatButtonPressedBorderBrushKey { get { return "ScrollBarRepeatButtonPressedBorderBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbBrush"/></summary>
            public static string ScrollBarThumbBrushKey { get { return "ScrollBarThumbBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbBorderBrush"/></summary>
            public static string ScrollBarThumbBorderBrushKey { get { return "ScrollBarThumbBorderBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbMouseOverBrush"/></summary>
            public static string ScrollBarThumbMouseOverBrushKey { get { return "ScrollBarThumbMouseOverBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbMouseOverBorderBrush"/></summary>
            public static string ScrollBarThumbMouseOverBorderBrushKey { get { return "ScrollBarThumbMouseOverBorderBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbPressedBrush"/></summary>
            public static string ScrollBarThumbPressedBrushKey { get { return "ScrollBarThumbPressedBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbPressedBorderBrush"/></summary>
            public static string ScrollBarThumbPressedBorderBrushKey { get { return "ScrollBarThumbPressedBorderBrush"; } }

            /// <summary>Represents x:Key="ListItemSelectedBrush"/></summary>
            public static string ListItemSelectedBrushKey { get { return "ListItemSelectedBrush"; } }

            /// <summary>Represents x:Key="ListItemSelectedBorderBrush"/></summary>
            public static string ListItemSelectedBorderBrushKey { get { return "ListItemSelectedBorderBrush"; } }

            /// <summary>Represents x:Key="ExpanderToggleButtonBrush"/></summary>
            public static string ExpanderToggleButtonBrushKey { get { return "ExpanderToggleButtonBrush"; } }

            /// <summary>Represents x:Key="ExpanderToggleButtonBottomBrush"/></summary>
            public static string ExpanderToggleButtonBottomBrushKey { get { return "ExpanderToggleButtonBottomBrush"; } }

            /// <summary>Represents x:Key="ExpanderToggleButtonHoverBrush"/></summary>
            public static string ExpanderToggleButtonHoverBrushKey { get { return "ExpanderToggleButtonHoverBrush"; } }

            /// <summary>Represents x:Key="ExpanderToggleArrow2Stroke"/></summary>
            public static string ExpanderToggleArrow2StrokeKey { get { return "ExpanderToggleArrow2Stroke"; } }

            /// <summary>Represents x:Key="ExpanderToggleArrowStroke"/></summary>
            public static string ExpanderToggleArrowStrokeKey { get { return "ExpanderToggleArrowStroke"; } }

            /// <summary>Represents x:Key="ProgressBarIndicatorBrush"/></summary>
            public static string ProgressBarIndicatorBrushKey { get { return "ProgressBarIndicatorBrush"; } }

            /// <summary>Represents x:Key="TabControlHeaderBrush"/></summary>
            public static string TabControlHeaderBrushKey { get { return "TabControlHeaderBrush"; } }

            /// <summary>Represents x:Key="TabControlContentBrush"/></summary>
            public static string TabControlContentBrushKey { get { return "TabControlContentBrush"; } }

            /// <summary>Represents x:Key="TabControlContentBorderBrush"/></summary>
            public static string TabControlContentBorderBrushKey { get { return "TabControlContentBorderBrush"; } }

            /// <summary>Represents x:Key="TabItemHoverBrush"/></summary>
            public static string TabItemHoverBrushKey { get { return "TabItemHoverBrush"; } }

            /// <summary>Represents x:Key="TabItemHoverBorderBrush"/></summary>
            public static string TabItemHoverBorderBrushKey { get { return "TabItemHoverBorderBrush"; } }

            /// <summary>Represents x:Key="TabItemHoverHighlightBrush"/></summary>
            public static string TabItemHoverHighlightBrushKey { get { return "TabItemHoverHighlightBrush"; } }

            /// <summary>Represents x:Key="TabItemSelectedBrush"/></summary>
            public static string TabItemSelectedBrushKey { get { return "TabItemSelectedBrush"; } }

            /// <summary>Represents x:Key="TabItemSelectedBorderBrush"/></summary>
            public static string TabItemSelectedBorderBrushKey { get { return "TabItemSelectedBorderBrush"; } }

            /// <summary>Represents x:Key="TabItemBorderTopBrush"/></summary>
            public static string TabItemBorderTopBrushKey { get { return "TabItemBorderTopBrush"; } }

            /// <summary>Represents x:Key="TabItemHighlightTopBrush"/></summary>
            public static string TabItemHighlightTopBrushKey { get { return "TabItemHighlightTopBrush"; } }

            /// <summary>Represents x:Key="TabItemBorderTop2Brush"/></summary>
            public static string TabItemBorderTop2BrushKey { get { return "TabItemBorderTop2Brush"; } }

            /// <summary>Represents x:Key="TabItemFocusBrush"/></summary>
            public static string TabItemFocusBrushKey { get { return "TabItemFocusBrush"; } }

            /// <summary>Represents x:Key="SliderThumbBorderBrush"/></summary>
            public static string SliderThumbBorderBrushKey { get { return "SliderThumbBorderBrush"; } }

            /// <summary>Represents x:Key="SliderThumbBrush"/></summary>
            public static string SliderThumbBrushKey { get { return "SliderThumbBrush"; } }

            /// <summary>Represents x:Key="SliderBackgroundBrush"/></summary>
            public static string SliderBackgroundBrushKey { get { return "SliderBackgroundBrush"; } }

            /// <summary>Represents x:Key="BlackColor"/></summary>
            public static string BlackColorKey { get { return "BlackColor"; } }

            /// <summary>Represents x:Key="WhiteColor"/></summary>
            public static string WhiteColorKey { get { return "WhiteColor"; } }

            /// <summary>Represents x:Key="DisabledForegroundBrush"/></summary>
            public static string DisabledForegroundBrushKey { get { return "DisabledForegroundBrush"; } }

            /// <summary>Represents x:Key="TextControlBorderBrush"/></summary>
            public static string TextControlBorderBrushKey { get { return "TextControlBorderBrush"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrush"/></summary>
            public static string WindowBackgroundBrushKey { get { return "WindowBackgroundBrush"; } }

            /// <summary>Represents x:Key="NuclearButtonFocusVisual"/></summary>
            public static string NuclearButtonFocusVisualKey { get { return "NuclearButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonTemplate"/></summary>
            public static string ButtonTemplateKey { get { return "ButtonTemplate"; } }

            /// <summary>Represents x:Key="HoverOn"/></summary>
            public static string HoverOnKey { get { return "HoverOn"; } }

            /// <summary>Represents x:Key="HoverOff"/></summary>
            public static string HoverOffKey { get { return "HoverOff"; } }

            /// <summary>Represents x:Key="PressedOn"/></summary>
            public static string PressedOnKey { get { return "PressedOn"; } }

            /// <summary>Represents x:Key="PressedOff"/></summary>
            public static string PressedOffKey { get { return "PressedOff"; } }

            /// <summary>Represents x:Key="DisabledOn"/></summary>
            public static string DisabledOnKey { get { return "DisabledOn"; } }

            /// <summary>Represents x:Key="FocusedOn"/></summary>
            public static string FocusedOnKey { get { return "FocusedOn"; } }

            /// <summary>Represents x:Key="FocusedOff"/></summary>
            public static string FocusedOffKey { get { return "FocusedOff"; } }

            /// <summary>Represents x:Key="RadioButtonFocusVisual"/></summary>
            public static string RadioButtonFocusVisualKey { get { return "RadioButtonFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxFocusVisual"/></summary>
            public static string CheckBoxFocusVisualKey { get { return "CheckBoxFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxTemplate"/></summary>
            public static string CheckBoxTemplateKey { get { return "CheckBoxTemplate"; } }

            /// <summary>Represents x:Key="CheckedOn"/></summary>
            public static string CheckedOnKey { get { return "CheckedOn"; } }

            /// <summary>Represents x:Key="CheckedOff"/></summary>
            public static string CheckedOffKey { get { return "CheckedOff"; } }

            /// <summary>Represents x:Key="IndeterminateOn"/></summary>
            public static string IndeterminateOnKey { get { return "IndeterminateOn"; } }

            /// <summary>Represents x:Key="IndeterminateOff"/></summary>
            public static string IndeterminateOffKey { get { return "IndeterminateOff"; } }

            /// <summary>Represents x:Key="RadioButtonTemplate"/></summary>
            public static string RadioButtonTemplateKey { get { return "RadioButtonTemplate"; } }

            /// <summary>Represents x:Key="NuclearRepeatButton"/></summary>
            public static string NuclearRepeatButtonKey { get { return "NuclearRepeatButton"; } }

            /// <summary>Represents x:Key="NuclearThumbStyle"/></summary>
            public static string NuclearThumbStyleKey { get { return "NuclearThumbStyle"; } }

            /// <summary>Represents x:Key="NuclearScrollRepeatButtonStyle"/></summary>
            public static string NuclearScrollRepeatButtonStyleKey { get { return "NuclearScrollRepeatButtonStyle"; } }

            /// <summary>Represents x:Key="SelectedOn"/></summary>
            public static string SelectedOnKey { get { return "SelectedOn"; } }

            /// <summary>Represents x:Key="SelectedOff"/></summary>
            public static string SelectedOffKey { get { return "SelectedOff"; } }

            /// <summary>Represents x:Key="ExpanderHeaderFocusVisual"/></summary>
            public static string ExpanderHeaderFocusVisualKey { get { return "ExpanderHeaderFocusVisual"; } }

            /// <summary>Represents x:Key="ExpanderDownHeaderStyle"/></summary>
            public static string ExpanderDownHeaderStyleKey { get { return "ExpanderDownHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderRightHeaderStyle"/></summary>
            public static string ExpanderRightHeaderStyleKey { get { return "ExpanderRightHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderUpHeaderStyle"/></summary>
            public static string ExpanderUpHeaderStyleKey { get { return "ExpanderUpHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderLeftHeaderStyle"/></summary>
            public static string ExpanderLeftHeaderStyleKey { get { return "ExpanderLeftHeaderStyle"; } }

            /// <summary>Represents x:Key="ComboBoxToggleButton"/></summary>
            public static string ComboBoxToggleButtonKey { get { return "ComboBoxToggleButton"; } }

            /// <summary>Represents x:Key="ComboBoxTextBox"/></summary>
            public static string ComboBoxTextBoxKey { get { return "ComboBoxTextBox"; } }

            /// <summary>Represents x:Key="ComboBoxTemplate"/></summary>
            public static string ComboBoxTemplateKey { get { return "ComboBoxTemplate"; } }

            /// <summary>Represents x:Key="HighlightOn"/></summary>
            public static string HighlightOnKey { get { return "HighlightOn"; } }

            /// <summary>Represents x:Key="HighlightOff"/></summary>
            public static string HighlightOffKey { get { return "HighlightOff"; } }

            /// <summary>Represents x:Key="TextBoxTemplate"/></summary>
            public static string TextBoxTemplateKey { get { return "TextBoxTemplate"; } }

            /// <summary>Represents x:Key="DisabledOff"/></summary>
            public static string DisabledOffKey { get { return "DisabledOff"; } }

            /// <summary>Represents x:Key="PopupDropShadow"/></summary>
            public static string PopupDropShadowKey { get { return "PopupDropShadow"; } }

            /// <summary>Represents x:Key="NuclearSliderThumb"/></summary>
            public static string NuclearSliderThumbKey { get { return "NuclearSliderThumb"; } }

            /// <summary>Represents x:Key="NuclearTreeViewItemToggleButton"/></summary>
            public static string NuclearTreeViewItemToggleButtonKey { get { return "NuclearTreeViewItemToggleButton"; } }

            /// <summary>Represents x:Key="InactiveOn"/></summary>
            public static string InactiveOnKey { get { return "InactiveOn"; } }

            /// <summary>Represents x:Key="InactiveOff"/></summary>
            public static string InactiveOffKey { get { return "InactiveOff"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalBackground"/></summary>
            public static string ToolBarHorizontalBackgroundKey { get { return "ToolBarHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonHorizontalBackground"/></summary>
            public static string ToolBarToggleButtonHorizontalBackgroundKey { get { return "ToolBarToggleButtonHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarButtonHover"/></summary>
            public static string ToolBarButtonHoverKey { get { return "ToolBarButtonHover"; } }

            /// <summary>Represents x:Key="ToolBarGripper"/></summary>
            public static string ToolBarGripperKey { get { return "ToolBarGripper"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalOverflowButtonStyle"/></summary>
            public static string ToolBarHorizontalOverflowButtonStyleKey { get { return "ToolBarHorizontalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarSubMenuBackground"/></summary>
            public static string ToolBarSubMenuBackgroundKey { get { return "ToolBarSubMenuBackground"; } }

            /// <summary>Represents x:Key="ToolBarMenuBorder"/></summary>
            public static string ToolBarMenuBorderKey { get { return "ToolBarMenuBorder"; } }

            /// <summary>Represents x:Key="ToolBarThumbStyle"/></summary>
            public static string ToolBarThumbStyleKey { get { return "ToolBarThumbStyle"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonVerticalBackground"/></summary>
            public static string ToolBarToggleButtonVerticalBackgroundKey { get { return "ToolBarToggleButtonVerticalBackground"; } }

            /// <summary>Represents x:Key="ToolBarVerticalOverflowButtonStyle"/></summary>
            public static string ToolBarVerticalOverflowButtonStyleKey { get { return "ToolBarVerticalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarVerticalBackground"/></summary>
            public static string ToolBarVerticalBackgroundKey { get { return "ToolBarVerticalBackground"; } }

            /// <summary>Represents x:Key="BorderGapMaskConverter"/></summary>
            public static string BorderGapMaskConverterKey { get { return "BorderGapMaskConverter"; } }

            /// <summary>Represents x:Key="ListViewItemFocusVisual"/></summary>
            public static string ListViewItemFocusVisualKey { get { return "ListViewItemFocusVisual"; } }

            /// <summary>Represents x:Key="GridViewColumnHeaderGripper"/></summary>
            public static string GridViewColumnHeaderGripperKey { get { return "GridViewColumnHeaderGripper"; } }


    }

    /// <summary>Metadata for XAML BureauBlue.xaml</summary>
    public static class BureauBlueXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/BureauBlue.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/BureauBlue.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/BureauBlue.xaml")); } }

            /// <summary>Represents x:Key="OutsideFontColor"/></summary>
            public static string OutsideFontColorKey { get { return "OutsideFontColor"; } }

            /// <summary>Represents x:Key="NormalBrush"/></summary>
            public static string NormalBrushKey { get { return "NormalBrush"; } }

            /// <summary>Represents x:Key="NormalBorderBrush"/></summary>
            public static string NormalBorderBrushKey { get { return "NormalBorderBrush"; } }

            /// <summary>Represents x:Key="NormalHighlightBrush"/></summary>
            public static string NormalHighlightBrushKey { get { return "NormalHighlightBrush"; } }

            /// <summary>Represents x:Key="MouseOverBrush"/></summary>
            public static string MouseOverBrushKey { get { return "MouseOverBrush"; } }

            /// <summary>Represents x:Key="MouseOverBorderBrush"/></summary>
            public static string MouseOverBorderBrushKey { get { return "MouseOverBorderBrush"; } }

            /// <summary>Represents x:Key="MouseOverHighlightBrush"/></summary>
            public static string MouseOverHighlightBrushKey { get { return "MouseOverHighlightBrush"; } }

            /// <summary>Represents x:Key="PressedBrush"/></summary>
            public static string PressedBrushKey { get { return "PressedBrush"; } }

            /// <summary>Represents x:Key="PressedBorderBrush"/></summary>
            public static string PressedBorderBrushKey { get { return "PressedBorderBrush"; } }

            /// <summary>Represents x:Key="PressedHighlightBrush"/></summary>
            public static string PressedHighlightBrushKey { get { return "PressedHighlightBrush"; } }

            /// <summary>Represents x:Key="DisabledBackgroundBrush"/></summary>
            public static string DisabledBackgroundBrushKey { get { return "DisabledBackgroundBrush"; } }

            /// <summary>Represents x:Key="DisabledBorderBrush"/></summary>
            public static string DisabledBorderBrushKey { get { return "DisabledBorderBrush"; } }

            /// <summary>Represents x:Key="FocusBrush"/></summary>
            public static string FocusBrushKey { get { return "FocusBrush"; } }

            /// <summary>Represents x:Key="ControlBackgroundBrush"/></summary>
            public static string ControlBackgroundBrushKey { get { return "ControlBackgroundBrush"; } }

            /// <summary>Represents x:Key="ControlBorderBrush"/></summary>
            public static string ControlBorderBrushKey { get { return "ControlBorderBrush"; } }

            /// <summary>Represents x:Key="GlyphBrush"/></summary>
            public static string GlyphBrushKey { get { return "GlyphBrush"; } }

            /// <summary>Represents x:Key="CheckBoxBackgroundBrush"/></summary>
            public static string CheckBoxBackgroundBrushKey { get { return "CheckBoxBackgroundBrush"; } }

            /// <summary>Represents x:Key="CheckBoxBorderBrush"/></summary>
            public static string CheckBoxBorderBrushKey { get { return "CheckBoxBorderBrush"; } }

            /// <summary>Represents x:Key="CheckBoxInnerBoxBackgroundBrush"/></summary>
            public static string CheckBoxInnerBoxBackgroundBrushKey { get { return "CheckBoxInnerBoxBackgroundBrush"; } }

            /// <summary>Represents x:Key="CheckBoxInnerBoxBorderBrush"/></summary>
            public static string CheckBoxInnerBoxBorderBrushKey { get { return "CheckBoxInnerBoxBorderBrush"; } }

            /// <summary>Represents x:Key="CheckBoxBackgroundFillBrush"/></summary>
            public static string CheckBoxBackgroundFillBrushKey { get { return "CheckBoxBackgroundFillBrush"; } }

            /// <summary>Represents x:Key="CheckBoxMouseOverBrush"/></summary>
            public static string CheckBoxMouseOverBrushKey { get { return "CheckBoxMouseOverBrush"; } }

            /// <summary>Represents x:Key="CheckBoxPressBorderBrush"/></summary>
            public static string CheckBoxPressBorderBrushKey { get { return "CheckBoxPressBorderBrush"; } }

            /// <summary>Represents x:Key="CheckBoxInnerBoxGradientBrush"/></summary>
            public static string CheckBoxInnerBoxGradientBrushKey { get { return "CheckBoxInnerBoxGradientBrush"; } }

            /// <summary>Represents x:Key="RadioButtonBackgroundBrush"/></summary>
            public static string RadioButtonBackgroundBrushKey { get { return "RadioButtonBackgroundBrush"; } }

            /// <summary>Represents x:Key="RadioButtonBorderBrush"/></summary>
            public static string RadioButtonBorderBrushKey { get { return "RadioButtonBorderBrush"; } }

            /// <summary>Represents x:Key="RadioButtonInnerCircleBrush"/></summary>
            public static string RadioButtonInnerCircleBrushKey { get { return "RadioButtonInnerCircleBrush"; } }

            /// <summary>Represents x:Key="RadioButtonInnerCircleBorderBrush"/></summary>
            public static string RadioButtonInnerCircleBorderBrushKey { get { return "RadioButtonInnerCircleBorderBrush"; } }

            /// <summary>Represents x:Key="RadioButtonMouseOverBrush"/></summary>
            public static string RadioButtonMouseOverBrushKey { get { return "RadioButtonMouseOverBrush"; } }

            /// <summary>Represents x:Key="RadioButtonMouseOverBorderBrush"/></summary>
            public static string RadioButtonMouseOverBorderBrushKey { get { return "RadioButtonMouseOverBorderBrush"; } }

            /// <summary>Represents x:Key="RadioButtonPressBrush"/></summary>
            public static string RadioButtonPressBrushKey { get { return "RadioButtonPressBrush"; } }

            /// <summary>Represents x:Key="RadioButtonPressBorderBrush"/></summary>
            public static string RadioButtonPressBorderBrushKey { get { return "RadioButtonPressBorderBrush"; } }

            /// <summary>Represents x:Key="RadioButtonCheckIconBrush"/></summary>
            public static string RadioButtonCheckIconBrushKey { get { return "RadioButtonCheckIconBrush"; } }

            /// <summary>Represents x:Key="RadioButtonCheckIconBorderBrush"/></summary>
            public static string RadioButtonCheckIconBorderBrushKey { get { return "RadioButtonCheckIconBorderBrush"; } }

            /// <summary>Represents x:Key="ScrollBarRepeatButtonBrush"/></summary>
            public static string ScrollBarRepeatButtonBrushKey { get { return "ScrollBarRepeatButtonBrush"; } }

            /// <summary>Represents x:Key="ScrollBarRepeatButtonBorderBrush"/></summary>
            public static string ScrollBarRepeatButtonBorderBrushKey { get { return "ScrollBarRepeatButtonBorderBrush"; } }

            /// <summary>Represents x:Key="ScrollBarRepeatButtonPressedBrush"/></summary>
            public static string ScrollBarRepeatButtonPressedBrushKey { get { return "ScrollBarRepeatButtonPressedBrush"; } }

            /// <summary>Represents x:Key="ScrollBarRepeatButtonPressedBorderBrush"/></summary>
            public static string ScrollBarRepeatButtonPressedBorderBrushKey { get { return "ScrollBarRepeatButtonPressedBorderBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbBrush"/></summary>
            public static string ScrollBarThumbBrushKey { get { return "ScrollBarThumbBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbBorderBrush"/></summary>
            public static string ScrollBarThumbBorderBrushKey { get { return "ScrollBarThumbBorderBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbMouseOverBrush"/></summary>
            public static string ScrollBarThumbMouseOverBrushKey { get { return "ScrollBarThumbMouseOverBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbMouseOverBorderBrush"/></summary>
            public static string ScrollBarThumbMouseOverBorderBrushKey { get { return "ScrollBarThumbMouseOverBorderBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbPressedBrush"/></summary>
            public static string ScrollBarThumbPressedBrushKey { get { return "ScrollBarThumbPressedBrush"; } }

            /// <summary>Represents x:Key="ScrollBarThumbPressedBorderBrush"/></summary>
            public static string ScrollBarThumbPressedBorderBrushKey { get { return "ScrollBarThumbPressedBorderBrush"; } }

            /// <summary>Represents x:Key="ListItemSelectedBrush"/></summary>
            public static string ListItemSelectedBrushKey { get { return "ListItemSelectedBrush"; } }

            /// <summary>Represents x:Key="ListItemSelectedBorderBrush"/></summary>
            public static string ListItemSelectedBorderBrushKey { get { return "ListItemSelectedBorderBrush"; } }

            /// <summary>Represents x:Key="ExpanderToggleButtonBrush"/></summary>
            public static string ExpanderToggleButtonBrushKey { get { return "ExpanderToggleButtonBrush"; } }

            /// <summary>Represents x:Key="ExpanderToggleButtonBottomBrush"/></summary>
            public static string ExpanderToggleButtonBottomBrushKey { get { return "ExpanderToggleButtonBottomBrush"; } }

            /// <summary>Represents x:Key="ExpanderToggleButtonHoverBrush"/></summary>
            public static string ExpanderToggleButtonHoverBrushKey { get { return "ExpanderToggleButtonHoverBrush"; } }

            /// <summary>Represents x:Key="ExpanderToggleArrow2Stroke"/></summary>
            public static string ExpanderToggleArrow2StrokeKey { get { return "ExpanderToggleArrow2Stroke"; } }

            /// <summary>Represents x:Key="ExpanderToggleArrowStroke"/></summary>
            public static string ExpanderToggleArrowStrokeKey { get { return "ExpanderToggleArrowStroke"; } }

            /// <summary>Represents x:Key="ProgressBarIndicatorBrush"/></summary>
            public static string ProgressBarIndicatorBrushKey { get { return "ProgressBarIndicatorBrush"; } }

            /// <summary>Represents x:Key="TabControlHeaderBrush"/></summary>
            public static string TabControlHeaderBrushKey { get { return "TabControlHeaderBrush"; } }

            /// <summary>Represents x:Key="TabControlContentBrush"/></summary>
            public static string TabControlContentBrushKey { get { return "TabControlContentBrush"; } }

            /// <summary>Represents x:Key="TabControlContentBorderBrush"/></summary>
            public static string TabControlContentBorderBrushKey { get { return "TabControlContentBorderBrush"; } }

            /// <summary>Represents x:Key="TabItemHoverBrush"/></summary>
            public static string TabItemHoverBrushKey { get { return "TabItemHoverBrush"; } }

            /// <summary>Represents x:Key="TabItemHoverBorderBrush"/></summary>
            public static string TabItemHoverBorderBrushKey { get { return "TabItemHoverBorderBrush"; } }

            /// <summary>Represents x:Key="TabItemHoverHighlightBrush"/></summary>
            public static string TabItemHoverHighlightBrushKey { get { return "TabItemHoverHighlightBrush"; } }

            /// <summary>Represents x:Key="TabItemSelectedBrush"/></summary>
            public static string TabItemSelectedBrushKey { get { return "TabItemSelectedBrush"; } }

            /// <summary>Represents x:Key="TabItemSelectedBorderBrush"/></summary>
            public static string TabItemSelectedBorderBrushKey { get { return "TabItemSelectedBorderBrush"; } }

            /// <summary>Represents x:Key="TabItemBorderTopBrush"/></summary>
            public static string TabItemBorderTopBrushKey { get { return "TabItemBorderTopBrush"; } }

            /// <summary>Represents x:Key="TabItemHighlightTopBrush"/></summary>
            public static string TabItemHighlightTopBrushKey { get { return "TabItemHighlightTopBrush"; } }

            /// <summary>Represents x:Key="TabItemBorderTop2Brush"/></summary>
            public static string TabItemBorderTop2BrushKey { get { return "TabItemBorderTop2Brush"; } }

            /// <summary>Represents x:Key="TabItemFocusBrush"/></summary>
            public static string TabItemFocusBrushKey { get { return "TabItemFocusBrush"; } }

            /// <summary>Represents x:Key="SliderThumbBorderBrush"/></summary>
            public static string SliderThumbBorderBrushKey { get { return "SliderThumbBorderBrush"; } }

            /// <summary>Represents x:Key="SliderThumbBrush"/></summary>
            public static string SliderThumbBrushKey { get { return "SliderThumbBrush"; } }

            /// <summary>Represents x:Key="SliderBackgroundBrush"/></summary>
            public static string SliderBackgroundBrushKey { get { return "SliderBackgroundBrush"; } }

            /// <summary>Represents x:Key="BlackColor"/></summary>
            public static string BlackColorKey { get { return "BlackColor"; } }

            /// <summary>Represents x:Key="WhiteColor"/></summary>
            public static string WhiteColorKey { get { return "WhiteColor"; } }

            /// <summary>Represents x:Key="DisabledForegroundBrush"/></summary>
            public static string DisabledForegroundBrushKey { get { return "DisabledForegroundBrush"; } }

            /// <summary>Represents x:Key="TextControlBorderBrush"/></summary>
            public static string TextControlBorderBrushKey { get { return "TextControlBorderBrush"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrush"/></summary>
            public static string WindowBackgroundBrushKey { get { return "WindowBackgroundBrush"; } }

            /// <summary>Represents x:Key="NuclearButtonFocusVisual"/></summary>
            public static string NuclearButtonFocusVisualKey { get { return "NuclearButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonTemplate"/></summary>
            public static string ButtonTemplateKey { get { return "ButtonTemplate"; } }

            /// <summary>Represents x:Key="HoverOn"/></summary>
            public static string HoverOnKey { get { return "HoverOn"; } }

            /// <summary>Represents x:Key="HoverOff"/></summary>
            public static string HoverOffKey { get { return "HoverOff"; } }

            /// <summary>Represents x:Key="PressedOn"/></summary>
            public static string PressedOnKey { get { return "PressedOn"; } }

            /// <summary>Represents x:Key="PressedOff"/></summary>
            public static string PressedOffKey { get { return "PressedOff"; } }

            /// <summary>Represents x:Key="DisabledOn"/></summary>
            public static string DisabledOnKey { get { return "DisabledOn"; } }

            /// <summary>Represents x:Key="FocusedOn"/></summary>
            public static string FocusedOnKey { get { return "FocusedOn"; } }

            /// <summary>Represents x:Key="FocusedOff"/></summary>
            public static string FocusedOffKey { get { return "FocusedOff"; } }

            /// <summary>Represents x:Key="RadioButtonFocusVisual"/></summary>
            public static string RadioButtonFocusVisualKey { get { return "RadioButtonFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxFocusVisual"/></summary>
            public static string CheckBoxFocusVisualKey { get { return "CheckBoxFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxTemplate"/></summary>
            public static string CheckBoxTemplateKey { get { return "CheckBoxTemplate"; } }

            /// <summary>Represents x:Key="CheckedOn"/></summary>
            public static string CheckedOnKey { get { return "CheckedOn"; } }

            /// <summary>Represents x:Key="CheckedOff"/></summary>
            public static string CheckedOffKey { get { return "CheckedOff"; } }

            /// <summary>Represents x:Key="IndeterminateOn"/></summary>
            public static string IndeterminateOnKey { get { return "IndeterminateOn"; } }

            /// <summary>Represents x:Key="IndeterminateOff"/></summary>
            public static string IndeterminateOffKey { get { return "IndeterminateOff"; } }

            /// <summary>Represents x:Key="RadioButtonTemplate"/></summary>
            public static string RadioButtonTemplateKey { get { return "RadioButtonTemplate"; } }

            /// <summary>Represents x:Key="NuclearRepeatButton"/></summary>
            public static string NuclearRepeatButtonKey { get { return "NuclearRepeatButton"; } }

            /// <summary>Represents x:Key="NuclearThumbStyle"/></summary>
            public static string NuclearThumbStyleKey { get { return "NuclearThumbStyle"; } }

            /// <summary>Represents x:Key="NuclearScrollRepeatButtonStyle"/></summary>
            public static string NuclearScrollRepeatButtonStyleKey { get { return "NuclearScrollRepeatButtonStyle"; } }

            /// <summary>Represents x:Key="SelectedOn"/></summary>
            public static string SelectedOnKey { get { return "SelectedOn"; } }

            /// <summary>Represents x:Key="SelectedOff"/></summary>
            public static string SelectedOffKey { get { return "SelectedOff"; } }

            /// <summary>Represents x:Key="ExpanderHeaderFocusVisual"/></summary>
            public static string ExpanderHeaderFocusVisualKey { get { return "ExpanderHeaderFocusVisual"; } }

            /// <summary>Represents x:Key="ExpanderDownHeaderStyle"/></summary>
            public static string ExpanderDownHeaderStyleKey { get { return "ExpanderDownHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderRightHeaderStyle"/></summary>
            public static string ExpanderRightHeaderStyleKey { get { return "ExpanderRightHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderUpHeaderStyle"/></summary>
            public static string ExpanderUpHeaderStyleKey { get { return "ExpanderUpHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderLeftHeaderStyle"/></summary>
            public static string ExpanderLeftHeaderStyleKey { get { return "ExpanderLeftHeaderStyle"; } }

            /// <summary>Represents x:Key="ComboBoxToggleButton"/></summary>
            public static string ComboBoxToggleButtonKey { get { return "ComboBoxToggleButton"; } }

            /// <summary>Represents x:Key="ComboBoxTextBox"/></summary>
            public static string ComboBoxTextBoxKey { get { return "ComboBoxTextBox"; } }

            /// <summary>Represents x:Key="ComboBoxTemplate"/></summary>
            public static string ComboBoxTemplateKey { get { return "ComboBoxTemplate"; } }

            /// <summary>Represents x:Key="HighlightOn"/></summary>
            public static string HighlightOnKey { get { return "HighlightOn"; } }

            /// <summary>Represents x:Key="HighlightOff"/></summary>
            public static string HighlightOffKey { get { return "HighlightOff"; } }

            /// <summary>Represents x:Key="TextBoxTemplate"/></summary>
            public static string TextBoxTemplateKey { get { return "TextBoxTemplate"; } }

            /// <summary>Represents x:Key="DisabledOff"/></summary>
            public static string DisabledOffKey { get { return "DisabledOff"; } }

            /// <summary>Represents x:Key="PopupDropShadow"/></summary>
            public static string PopupDropShadowKey { get { return "PopupDropShadow"; } }

            /// <summary>Represents x:Key="NuclearSliderThumb"/></summary>
            public static string NuclearSliderThumbKey { get { return "NuclearSliderThumb"; } }

            /// <summary>Represents x:Key="NuclearTreeViewItemToggleButton"/></summary>
            public static string NuclearTreeViewItemToggleButtonKey { get { return "NuclearTreeViewItemToggleButton"; } }

            /// <summary>Represents x:Key="InactiveOn"/></summary>
            public static string InactiveOnKey { get { return "InactiveOn"; } }

            /// <summary>Represents x:Key="InactiveOff"/></summary>
            public static string InactiveOffKey { get { return "InactiveOff"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalBackground"/></summary>
            public static string ToolBarHorizontalBackgroundKey { get { return "ToolBarHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonHorizontalBackground"/></summary>
            public static string ToolBarToggleButtonHorizontalBackgroundKey { get { return "ToolBarToggleButtonHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarButtonHover"/></summary>
            public static string ToolBarButtonHoverKey { get { return "ToolBarButtonHover"; } }

            /// <summary>Represents x:Key="ToolBarGripper"/></summary>
            public static string ToolBarGripperKey { get { return "ToolBarGripper"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalOverflowButtonStyle"/></summary>
            public static string ToolBarHorizontalOverflowButtonStyleKey { get { return "ToolBarHorizontalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarSubMenuBackground"/></summary>
            public static string ToolBarSubMenuBackgroundKey { get { return "ToolBarSubMenuBackground"; } }

            /// <summary>Represents x:Key="ToolBarMenuBorder"/></summary>
            public static string ToolBarMenuBorderKey { get { return "ToolBarMenuBorder"; } }

            /// <summary>Represents x:Key="ToolBarThumbStyle"/></summary>
            public static string ToolBarThumbStyleKey { get { return "ToolBarThumbStyle"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonVerticalBackground"/></summary>
            public static string ToolBarToggleButtonVerticalBackgroundKey { get { return "ToolBarToggleButtonVerticalBackground"; } }

            /// <summary>Represents x:Key="ToolBarVerticalOverflowButtonStyle"/></summary>
            public static string ToolBarVerticalOverflowButtonStyleKey { get { return "ToolBarVerticalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarVerticalBackground"/></summary>
            public static string ToolBarVerticalBackgroundKey { get { return "ToolBarVerticalBackground"; } }

            /// <summary>Represents x:Key="BorderGapMaskConverter"/></summary>
            public static string BorderGapMaskConverterKey { get { return "BorderGapMaskConverter"; } }

            /// <summary>Represents x:Key="ListViewItemFocusVisual"/></summary>
            public static string ListViewItemFocusVisualKey { get { return "ListViewItemFocusVisual"; } }

            /// <summary>Represents x:Key="GridViewColumnHeaderGripper"/></summary>
            public static string GridViewColumnHeaderGripperKey { get { return "GridViewColumnHeaderGripper"; } }


    }

    /// <summary>Metadata for XAML Classic.xaml</summary>
    public static class ClassicXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/Classic.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Classic.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Classic.xaml")); } }


    }

    /// <summary>Metadata for XAML ExpressionDark.xaml</summary>
    public static class ExpressionDarkXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/ExpressionDark.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/ExpressionDark.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/ExpressionDark.xaml")); } }

            /// <summary>Represents x:Key="MainColor"/></summary>
            public static string MainColorKey { get { return "MainColor"; } }

            /// <summary>Represents x:Key="HoverColor"/></summary>
            public static string HoverColorKey { get { return "HoverColor"; } }

            /// <summary>Represents x:Key="DefaultColor"/></summary>
            public static string DefaultColorKey { get { return "DefaultColor"; } }

            /// <summary>Represents x:Key="LightBrush"/></summary>
            public static string LightBrushKey { get { return "LightBrush"; } }

            /// <summary>Represents x:Key="ShadeBrush"/></summary>
            public static string ShadeBrushKey { get { return "ShadeBrush"; } }

            /// <summary>Represents x:Key="TopGradientSelectColor"/></summary>
            public static string TopGradientSelectColorKey { get { return "TopGradientSelectColor"; } }

            /// <summary>Represents x:Key="BottomGradientSelectColor"/></summary>
            public static string BottomGradientSelectColorKey { get { return "BottomGradientSelectColor"; } }

            /// <summary>Represents x:Key="BlackColor"/></summary>
            public static string BlackColorKey { get { return "BlackColor"; } }

            /// <summary>Represents x:Key="WhiteColor"/></summary>
            public static string WhiteColorKey { get { return "WhiteColor"; } }

            /// <summary>Represents x:Key="TextBrush"/></summary>
            public static string TextBrushKey { get { return "TextBrush"; } }

            /// <summary>Represents x:Key="NormalBrush"/></summary>
            public static string NormalBrushKey { get { return "NormalBrush"; } }

            /// <summary>Represents x:Key="NormalBorderBrush"/></summary>
            public static string NormalBorderBrushKey { get { return "NormalBorderBrush"; } }

            /// <summary>Represents x:Key="HoverBrush"/></summary>
            public static string HoverBrushKey { get { return "HoverBrush"; } }

            /// <summary>Represents x:Key="GlyphBrush"/></summary>
            public static string GlyphBrushKey { get { return "GlyphBrush"; } }

            /// <summary>Represents x:Key="PressedBrush"/></summary>
            public static string PressedBrushKey { get { return "PressedBrush"; } }

            /// <summary>Represents x:Key="ControlBackgroundBrush"/></summary>
            public static string ControlBackgroundBrushKey { get { return "ControlBackgroundBrush"; } }

            /// <summary>Represents x:Key="SelectedBackgroundBrush"/></summary>
            public static string SelectedBackgroundBrushKey { get { return "SelectedBackgroundBrush"; } }

            /// <summary>Represents x:Key="DisabledForegroundBrush"/></summary>
            public static string DisabledForegroundBrushKey { get { return "DisabledForegroundBrush"; } }

            /// <summary>Represents x:Key="DisabledBackgroundBrush"/></summary>
            public static string DisabledBackgroundBrushKey { get { return "DisabledBackgroundBrush"; } }

            /// <summary>Represents x:Key="DisabledBorderBrush"/></summary>
            public static string DisabledBorderBrushKey { get { return "DisabledBorderBrush"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrush"/></summary>
            public static string WindowBackgroundBrushKey { get { return "WindowBackgroundBrush"; } }

            /// <summary>Represents x:Key="ShineBrush"/></summary>
            public static string ShineBrushKey { get { return "ShineBrush"; } }

            /// <summary>Represents x:Key="HoverShineBrush"/></summary>
            public static string HoverShineBrushKey { get { return "HoverShineBrush"; } }

            /// <summary>Represents x:Key="PressedBorderBrush"/></summary>
            public static string PressedBorderBrushKey { get { return "PressedBorderBrush"; } }

            /// <summary>Represents x:Key="DefaultedBorderBrush"/></summary>
            public static string DefaultedBorderBrushKey { get { return "DefaultedBorderBrush"; } }

            /// <summary>Represents x:Key="SolidBorderBrush"/></summary>
            public static string SolidBorderBrushKey { get { return "SolidBorderBrush"; } }

            /// <summary>Represents x:Key="NuclearButtonFocusVisual"/></summary>
            public static string NuclearButtonFocusVisualKey { get { return "NuclearButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonTemplate"/></summary>
            public static string ButtonTemplateKey { get { return "ButtonTemplate"; } }

            /// <summary>Represents x:Key="HoverOn"/></summary>
            public static string HoverOnKey { get { return "HoverOn"; } }

            /// <summary>Represents x:Key="HoverOff"/></summary>
            public static string HoverOffKey { get { return "HoverOff"; } }

            /// <summary>Represents x:Key="PressedOn"/></summary>
            public static string PressedOnKey { get { return "PressedOn"; } }

            /// <summary>Represents x:Key="PressedOff"/></summary>
            public static string PressedOffKey { get { return "PressedOff"; } }

            /// <summary>Represents x:Key="FocusedOn"/></summary>
            public static string FocusedOnKey { get { return "FocusedOn"; } }

            /// <summary>Represents x:Key="FocussedOff"/></summary>
            public static string FocussedOffKey { get { return "FocussedOff"; } }

            /// <summary>Represents x:Key="RadioButtonFocusVisual"/></summary>
            public static string RadioButtonFocusVisualKey { get { return "RadioButtonFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxFocusVisual"/></summary>
            public static string CheckBoxFocusVisualKey { get { return "CheckBoxFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxTemplate"/></summary>
            public static string CheckBoxTemplateKey { get { return "CheckBoxTemplate"; } }

            /// <summary>Represents x:Key="CheckedTrue"/></summary>
            public static string CheckedTrueKey { get { return "CheckedTrue"; } }

            /// <summary>Represents x:Key="CheckedFalse"/></summary>
            public static string CheckedFalseKey { get { return "CheckedFalse"; } }

            /// <summary>Represents x:Key="IndeterminateOn"/></summary>
            public static string IndeterminateOnKey { get { return "IndeterminateOn"; } }

            /// <summary>Represents x:Key="IndeterminateOff"/></summary>
            public static string IndeterminateOffKey { get { return "IndeterminateOff"; } }

            /// <summary>Represents x:Key="FocussedOn"/></summary>
            public static string FocussedOnKey { get { return "FocussedOn"; } }

            /// <summary>Represents x:Key="RadioButtonTemplate"/></summary>
            public static string RadioButtonTemplateKey { get { return "RadioButtonTemplate"; } }

            /// <summary>Represents x:Key="CheckedOn"/></summary>
            public static string CheckedOnKey { get { return "CheckedOn"; } }

            /// <summary>Represents x:Key="CheckedOff"/></summary>
            public static string CheckedOffKey { get { return "CheckedOff"; } }

            /// <summary>Represents x:Key="NuclearThumbStyle"/></summary>
            public static string NuclearThumbStyleKey { get { return "NuclearThumbStyle"; } }

            /// <summary>Represents x:Key="NuclearScrollRepeatButtonStyle"/></summary>
            public static string NuclearScrollRepeatButtonStyleKey { get { return "NuclearScrollRepeatButtonStyle"; } }

            /// <summary>Represents x:Key="NuclearScrollViewer"/></summary>
            public static string NuclearScrollViewerKey { get { return "NuclearScrollViewer"; } }

            /// <summary>Represents x:Key="SelectedOn"/></summary>
            public static string SelectedOnKey { get { return "SelectedOn"; } }

            /// <summary>Represents x:Key="SelectedOff"/></summary>
            public static string SelectedOffKey { get { return "SelectedOff"; } }

            /// <summary>Represents x:Key="ExpanderHeaderFocusVisual"/></summary>
            public static string ExpanderHeaderFocusVisualKey { get { return "ExpanderHeaderFocusVisual"; } }

            /// <summary>Represents x:Key="ExpanderDownHeaderStyle"/></summary>
            public static string ExpanderDownHeaderStyleKey { get { return "ExpanderDownHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderRightHeaderStyle"/></summary>
            public static string ExpanderRightHeaderStyleKey { get { return "ExpanderRightHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderUpHeaderStyle"/></summary>
            public static string ExpanderUpHeaderStyleKey { get { return "ExpanderUpHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderLeftHeaderStyle"/></summary>
            public static string ExpanderLeftHeaderStyleKey { get { return "ExpanderLeftHeaderStyle"; } }

            /// <summary>Represents x:Key="ComboBoxToggleButton"/></summary>
            public static string ComboBoxToggleButtonKey { get { return "ComboBoxToggleButton"; } }

            /// <summary>Represents x:Key="ComboBoxTextBox"/></summary>
            public static string ComboBoxTextBoxKey { get { return "ComboBoxTextBox"; } }

            /// <summary>Represents x:Key="ComboBoxTemplate"/></summary>
            public static string ComboBoxTemplateKey { get { return "ComboBoxTemplate"; } }

            /// <summary>Represents x:Key="ValueChangedOn"/></summary>
            public static string ValueChangedOnKey { get { return "ValueChangedOn"; } }

            /// <summary>Represents x:Key="TextBoxTemplate"/></summary>
            public static string TextBoxTemplateKey { get { return "TextBoxTemplate"; } }

            /// <summary>Represents x:Key="FocusedOff"/></summary>
            public static string FocusedOffKey { get { return "FocusedOff"; } }

            /// <summary>Represents x:Key="PopupDropShadow"/></summary>
            public static string PopupDropShadowKey { get { return "PopupDropShadow"; } }

            /// <summary>Represents x:Key="HighlightedOn"/></summary>
            public static string HighlightedOnKey { get { return "HighlightedOn"; } }

            /// <summary>Represents x:Key="HightlightedOff"/></summary>
            public static string HightlightedOffKey { get { return "HightlightedOff"; } }

            /// <summary>Represents x:Key="NuclearSliderThumb"/></summary>
            public static string NuclearSliderThumbKey { get { return "NuclearSliderThumb"; } }

            /// <summary>Represents x:Key="NuclearTreeViewItemToggleButton"/></summary>
            public static string NuclearTreeViewItemToggleButtonKey { get { return "NuclearTreeViewItemToggleButton"; } }

            /// <summary>Represents x:Key="ButtonFocusVisual"/></summary>
            public static string ButtonFocusVisualKey { get { return "ButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonNormalBackground"/></summary>
            public static string ButtonNormalBackgroundKey { get { return "ButtonNormalBackground"; } }

            /// <summary>Represents x:Key="ButtonNormalBorder"/></summary>
            public static string ButtonNormalBorderKey { get { return "ButtonNormalBorder"; } }

            /// <summary>Represents x:Key="BorderGapMaskConverter"/></summary>
            public static string BorderGapMaskConverterKey { get { return "BorderGapMaskConverter"; } }

            /// <summary>Represents x:Key="ListBorder"/></summary>
            public static string ListBorderKey { get { return "ListBorder"; } }

            /// <summary>Represents x:Key="ListViewItemFocusVisual"/></summary>
            public static string ListViewItemFocusVisualKey { get { return "ListViewItemFocusVisual"; } }

            /// <summary>Represents x:Key="GridViewColumnHeaderGripper"/></summary>
            public static string GridViewColumnHeaderGripperKey { get { return "GridViewColumnHeaderGripper"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalBackground"/></summary>
            public static string ToolBarHorizontalBackgroundKey { get { return "ToolBarHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonHorizontalBackground"/></summary>
            public static string ToolBarToggleButtonHorizontalBackgroundKey { get { return "ToolBarToggleButtonHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarButtonHover"/></summary>
            public static string ToolBarButtonHoverKey { get { return "ToolBarButtonHover"; } }

            /// <summary>Represents x:Key="ToolBarGripper"/></summary>
            public static string ToolBarGripperKey { get { return "ToolBarGripper"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalOverflowButtonStyle"/></summary>
            public static string ToolBarHorizontalOverflowButtonStyleKey { get { return "ToolBarHorizontalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarSubMenuBackground"/></summary>
            public static string ToolBarSubMenuBackgroundKey { get { return "ToolBarSubMenuBackground"; } }

            /// <summary>Represents x:Key="ToolBarMenuBorder"/></summary>
            public static string ToolBarMenuBorderKey { get { return "ToolBarMenuBorder"; } }

            /// <summary>Represents x:Key="ToolBarThumbStyle"/></summary>
            public static string ToolBarThumbStyleKey { get { return "ToolBarThumbStyle"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonVerticalBackground"/></summary>
            public static string ToolBarToggleButtonVerticalBackgroundKey { get { return "ToolBarToggleButtonVerticalBackground"; } }

            /// <summary>Represents x:Key="ToolBarVerticalOverflowButtonStyle"/></summary>
            public static string ToolBarVerticalOverflowButtonStyleKey { get { return "ToolBarVerticalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarVerticalBackground"/></summary>
            public static string ToolBarVerticalBackgroundKey { get { return "ToolBarVerticalBackground"; } }


    }

    /// <summary>Metadata for XAML ExpressionLight.xaml</summary>
    public static class ExpressionLightXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/ExpressionLight.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/ExpressionLight.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/ExpressionLight.xaml")); } }

            /// <summary>Represents x:Key="MainColor"/></summary>
            public static string MainColorKey { get { return "MainColor"; } }

            /// <summary>Represents x:Key="HoverColor"/></summary>
            public static string HoverColorKey { get { return "HoverColor"; } }

            /// <summary>Represents x:Key="DefaultColor"/></summary>
            public static string DefaultColorKey { get { return "DefaultColor"; } }

            /// <summary>Represents x:Key="LightBrush"/></summary>
            public static string LightBrushKey { get { return "LightBrush"; } }

            /// <summary>Represents x:Key="ShadeBrush"/></summary>
            public static string ShadeBrushKey { get { return "ShadeBrush"; } }

            /// <summary>Represents x:Key="TopGradientSelectColor"/></summary>
            public static string TopGradientSelectColorKey { get { return "TopGradientSelectColor"; } }

            /// <summary>Represents x:Key="BottomGradientSelectColor"/></summary>
            public static string BottomGradientSelectColorKey { get { return "BottomGradientSelectColor"; } }

            /// <summary>Represents x:Key="BlackColor"/></summary>
            public static string BlackColorKey { get { return "BlackColor"; } }

            /// <summary>Represents x:Key="WhiteColor"/></summary>
            public static string WhiteColorKey { get { return "WhiteColor"; } }

            /// <summary>Represents x:Key="TextBrush"/></summary>
            public static string TextBrushKey { get { return "TextBrush"; } }

            /// <summary>Represents x:Key="NormalBrush"/></summary>
            public static string NormalBrushKey { get { return "NormalBrush"; } }

            /// <summary>Represents x:Key="NormalBorderBrush"/></summary>
            public static string NormalBorderBrushKey { get { return "NormalBorderBrush"; } }

            /// <summary>Represents x:Key="HoverBrush"/></summary>
            public static string HoverBrushKey { get { return "HoverBrush"; } }

            /// <summary>Represents x:Key="GlyphBrush"/></summary>
            public static string GlyphBrushKey { get { return "GlyphBrush"; } }

            /// <summary>Represents x:Key="PressedBrush"/></summary>
            public static string PressedBrushKey { get { return "PressedBrush"; } }

            /// <summary>Represents x:Key="ControlBackgroundBrush"/></summary>
            public static string ControlBackgroundBrushKey { get { return "ControlBackgroundBrush"; } }

            /// <summary>Represents x:Key="SelectedBackgroundBrush"/></summary>
            public static string SelectedBackgroundBrushKey { get { return "SelectedBackgroundBrush"; } }

            /// <summary>Represents x:Key="DisabledForegroundBrush"/></summary>
            public static string DisabledForegroundBrushKey { get { return "DisabledForegroundBrush"; } }

            /// <summary>Represents x:Key="DisabledBackgroundBrush"/></summary>
            public static string DisabledBackgroundBrushKey { get { return "DisabledBackgroundBrush"; } }

            /// <summary>Represents x:Key="DisabledBorderBrush"/></summary>
            public static string DisabledBorderBrushKey { get { return "DisabledBorderBrush"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrush"/></summary>
            public static string WindowBackgroundBrushKey { get { return "WindowBackgroundBrush"; } }

            /// <summary>Represents x:Key="ShineBrush"/></summary>
            public static string ShineBrushKey { get { return "ShineBrush"; } }

            /// <summary>Represents x:Key="HoverShineBrush"/></summary>
            public static string HoverShineBrushKey { get { return "HoverShineBrush"; } }

            /// <summary>Represents x:Key="PressedBorderBrush"/></summary>
            public static string PressedBorderBrushKey { get { return "PressedBorderBrush"; } }

            /// <summary>Represents x:Key="DefaultedBorderBrush"/></summary>
            public static string DefaultedBorderBrushKey { get { return "DefaultedBorderBrush"; } }

            /// <summary>Represents x:Key="SolidBorderBrush"/></summary>
            public static string SolidBorderBrushKey { get { return "SolidBorderBrush"; } }

            /// <summary>Represents x:Key="NuclearButtonFocusVisual"/></summary>
            public static string NuclearButtonFocusVisualKey { get { return "NuclearButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonTemplate"/></summary>
            public static string ButtonTemplateKey { get { return "ButtonTemplate"; } }

            /// <summary>Represents x:Key="HoverOn"/></summary>
            public static string HoverOnKey { get { return "HoverOn"; } }

            /// <summary>Represents x:Key="HoverOff"/></summary>
            public static string HoverOffKey { get { return "HoverOff"; } }

            /// <summary>Represents x:Key="PressedOn"/></summary>
            public static string PressedOnKey { get { return "PressedOn"; } }

            /// <summary>Represents x:Key="PressedOff"/></summary>
            public static string PressedOffKey { get { return "PressedOff"; } }

            /// <summary>Represents x:Key="FocusedOn"/></summary>
            public static string FocusedOnKey { get { return "FocusedOn"; } }

            /// <summary>Represents x:Key="FocussedOff"/></summary>
            public static string FocussedOffKey { get { return "FocussedOff"; } }

            /// <summary>Represents x:Key="RadioButtonFocusVisual"/></summary>
            public static string RadioButtonFocusVisualKey { get { return "RadioButtonFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxFocusVisual"/></summary>
            public static string CheckBoxFocusVisualKey { get { return "CheckBoxFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxTemplate"/></summary>
            public static string CheckBoxTemplateKey { get { return "CheckBoxTemplate"; } }

            /// <summary>Represents x:Key="CheckedTrue"/></summary>
            public static string CheckedTrueKey { get { return "CheckedTrue"; } }

            /// <summary>Represents x:Key="CheckedFalse"/></summary>
            public static string CheckedFalseKey { get { return "CheckedFalse"; } }

            /// <summary>Represents x:Key="IndeterminateOn"/></summary>
            public static string IndeterminateOnKey { get { return "IndeterminateOn"; } }

            /// <summary>Represents x:Key="IndeterminateOff"/></summary>
            public static string IndeterminateOffKey { get { return "IndeterminateOff"; } }

            /// <summary>Represents x:Key="FocussedOn"/></summary>
            public static string FocussedOnKey { get { return "FocussedOn"; } }

            /// <summary>Represents x:Key="RadioButtonTemplate"/></summary>
            public static string RadioButtonTemplateKey { get { return "RadioButtonTemplate"; } }

            /// <summary>Represents x:Key="CheckedOn"/></summary>
            public static string CheckedOnKey { get { return "CheckedOn"; } }

            /// <summary>Represents x:Key="CheckedOff"/></summary>
            public static string CheckedOffKey { get { return "CheckedOff"; } }

            /// <summary>Represents x:Key="NuclearThumbStyle"/></summary>
            public static string NuclearThumbStyleKey { get { return "NuclearThumbStyle"; } }

            /// <summary>Represents x:Key="NuclearScrollRepeatButtonStyle"/></summary>
            public static string NuclearScrollRepeatButtonStyleKey { get { return "NuclearScrollRepeatButtonStyle"; } }

            /// <summary>Represents x:Key="NuclearScrollViewer"/></summary>
            public static string NuclearScrollViewerKey { get { return "NuclearScrollViewer"; } }

            /// <summary>Represents x:Key="SelectedOn"/></summary>
            public static string SelectedOnKey { get { return "SelectedOn"; } }

            /// <summary>Represents x:Key="SelectedOff"/></summary>
            public static string SelectedOffKey { get { return "SelectedOff"; } }

            /// <summary>Represents x:Key="ExpanderHeaderFocusVisual"/></summary>
            public static string ExpanderHeaderFocusVisualKey { get { return "ExpanderHeaderFocusVisual"; } }

            /// <summary>Represents x:Key="ExpanderDownHeaderStyle"/></summary>
            public static string ExpanderDownHeaderStyleKey { get { return "ExpanderDownHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderRightHeaderStyle"/></summary>
            public static string ExpanderRightHeaderStyleKey { get { return "ExpanderRightHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderUpHeaderStyle"/></summary>
            public static string ExpanderUpHeaderStyleKey { get { return "ExpanderUpHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderLeftHeaderStyle"/></summary>
            public static string ExpanderLeftHeaderStyleKey { get { return "ExpanderLeftHeaderStyle"; } }

            /// <summary>Represents x:Key="ComboBoxToggleButton"/></summary>
            public static string ComboBoxToggleButtonKey { get { return "ComboBoxToggleButton"; } }

            /// <summary>Represents x:Key="ComboBoxTextBox"/></summary>
            public static string ComboBoxTextBoxKey { get { return "ComboBoxTextBox"; } }

            /// <summary>Represents x:Key="ComboBoxTemplate"/></summary>
            public static string ComboBoxTemplateKey { get { return "ComboBoxTemplate"; } }

            /// <summary>Represents x:Key="ValueChangedOn"/></summary>
            public static string ValueChangedOnKey { get { return "ValueChangedOn"; } }

            /// <summary>Represents x:Key="TextBoxTemplate"/></summary>
            public static string TextBoxTemplateKey { get { return "TextBoxTemplate"; } }

            /// <summary>Represents x:Key="FocusedOff"/></summary>
            public static string FocusedOffKey { get { return "FocusedOff"; } }

            /// <summary>Represents x:Key="PopupDropShadow"/></summary>
            public static string PopupDropShadowKey { get { return "PopupDropShadow"; } }

            /// <summary>Represents x:Key="HighlightedOn"/></summary>
            public static string HighlightedOnKey { get { return "HighlightedOn"; } }

            /// <summary>Represents x:Key="HightlightedOff"/></summary>
            public static string HightlightedOffKey { get { return "HightlightedOff"; } }

            /// <summary>Represents x:Key="NuclearSliderThumb"/></summary>
            public static string NuclearSliderThumbKey { get { return "NuclearSliderThumb"; } }

            /// <summary>Represents x:Key="NuclearTreeViewItemToggleButton"/></summary>
            public static string NuclearTreeViewItemToggleButtonKey { get { return "NuclearTreeViewItemToggleButton"; } }

            /// <summary>Represents x:Key="ButtonFocusVisual"/></summary>
            public static string ButtonFocusVisualKey { get { return "ButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonNormalBackground"/></summary>
            public static string ButtonNormalBackgroundKey { get { return "ButtonNormalBackground"; } }

            /// <summary>Represents x:Key="ButtonNormalBorder"/></summary>
            public static string ButtonNormalBorderKey { get { return "ButtonNormalBorder"; } }

            /// <summary>Represents x:Key="BorderGapMaskConverter"/></summary>
            public static string BorderGapMaskConverterKey { get { return "BorderGapMaskConverter"; } }

            /// <summary>Represents x:Key="ListBorder"/></summary>
            public static string ListBorderKey { get { return "ListBorder"; } }

            /// <summary>Represents x:Key="ListViewItemFocusVisual"/></summary>
            public static string ListViewItemFocusVisualKey { get { return "ListViewItemFocusVisual"; } }

            /// <summary>Represents x:Key="GridViewColumnHeaderGripper"/></summary>
            public static string GridViewColumnHeaderGripperKey { get { return "GridViewColumnHeaderGripper"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalBackground"/></summary>
            public static string ToolBarHorizontalBackgroundKey { get { return "ToolBarHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonHorizontalBackground"/></summary>
            public static string ToolBarToggleButtonHorizontalBackgroundKey { get { return "ToolBarToggleButtonHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarButtonHover"/></summary>
            public static string ToolBarButtonHoverKey { get { return "ToolBarButtonHover"; } }

            /// <summary>Represents x:Key="ToolBarGripper"/></summary>
            public static string ToolBarGripperKey { get { return "ToolBarGripper"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalOverflowButtonStyle"/></summary>
            public static string ToolBarHorizontalOverflowButtonStyleKey { get { return "ToolBarHorizontalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarSubMenuBackground"/></summary>
            public static string ToolBarSubMenuBackgroundKey { get { return "ToolBarSubMenuBackground"; } }

            /// <summary>Represents x:Key="ToolBarMenuBorder"/></summary>
            public static string ToolBarMenuBorderKey { get { return "ToolBarMenuBorder"; } }

            /// <summary>Represents x:Key="ToolBarThumbStyle"/></summary>
            public static string ToolBarThumbStyleKey { get { return "ToolBarThumbStyle"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonVerticalBackground"/></summary>
            public static string ToolBarToggleButtonVerticalBackgroundKey { get { return "ToolBarToggleButtonVerticalBackground"; } }

            /// <summary>Represents x:Key="ToolBarVerticalOverflowButtonStyle"/></summary>
            public static string ToolBarVerticalOverflowButtonStyleKey { get { return "ToolBarVerticalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarVerticalBackground"/></summary>
            public static string ToolBarVerticalBackgroundKey { get { return "ToolBarVerticalBackground"; } }


    }

    /// <summary>Metadata for XAML Generic.xaml</summary>
    public static class GenericXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/Generic.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Generic.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Generic.xaml")); } }


    }

    /// <summary>Metadata for XAML Luna.HomeStead.xaml</summary>
    public static class LunaHomeSteadXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/Luna.HomeStead.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Luna.HomeStead.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Luna.HomeStead.xaml")); } }


    }

    /// <summary>Metadata for XAML Luna.Metallic.xaml</summary>
    public static class LunaMetallicXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/Luna.Metallic.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Luna.Metallic.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Luna.Metallic.xaml")); } }


    }

    /// <summary>Metadata for XAML Luna.NormalColor.xaml</summary>
    public static class LunaNormalColorXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/Luna.NormalColor.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Luna.NormalColor.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Luna.NormalColor.xaml")); } }


    }

    /// <summary>Metadata for XAML Royale.NormalColor.xaml</summary>
    public static class RoyaleNormalColorXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/Royale.NormalColor.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Royale.NormalColor.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/Royale.NormalColor.xaml")); } }


    }

    /// <summary>Metadata for XAML ShinyBlue.xaml</summary>
    public static class ShinyBlueXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/ShinyBlue.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/ShinyBlue.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/ShinyBlue.xaml")); } }

            /// <summary>Represents x:Key="BlackColor"/></summary>
            public static string BlackColorKey { get { return "BlackColor"; } }

            /// <summary>Represents x:Key="WhiteColor"/></summary>
            public static string WhiteColorKey { get { return "WhiteColor"; } }

            /// <summary>Represents x:Key="TextBrush"/></summary>
            public static string TextBrushKey { get { return "TextBrush"; } }

            /// <summary>Represents x:Key="NormalBrushGradient1"/></summary>
            public static string NormalBrushGradient1Key { get { return "NormalBrushGradient1"; } }

            /// <summary>Represents x:Key="NormalBrushGradient2"/></summary>
            public static string NormalBrushGradient2Key { get { return "NormalBrushGradient2"; } }

            /// <summary>Represents x:Key="NormalBrushGradient3"/></summary>
            public static string NormalBrushGradient3Key { get { return "NormalBrushGradient3"; } }

            /// <summary>Represents x:Key="NormalBrushGradient4"/></summary>
            public static string NormalBrushGradient4Key { get { return "NormalBrushGradient4"; } }

            /// <summary>Represents x:Key="NormalBorderBrushGradient1"/></summary>
            public static string NormalBorderBrushGradient1Key { get { return "NormalBorderBrushGradient1"; } }

            /// <summary>Represents x:Key="NormalBorderBrushGradient2"/></summary>
            public static string NormalBorderBrushGradient2Key { get { return "NormalBorderBrushGradient2"; } }

            /// <summary>Represents x:Key="NormalBorderBrushGradient3"/></summary>
            public static string NormalBorderBrushGradient3Key { get { return "NormalBorderBrushGradient3"; } }

            /// <summary>Represents x:Key="NormalBorderBrushGradient4"/></summary>
            public static string NormalBorderBrushGradient4Key { get { return "NormalBorderBrushGradient4"; } }

            /// <summary>Represents x:Key="SelectedBackgroundGradient1"/></summary>
            public static string SelectedBackgroundGradient1Key { get { return "SelectedBackgroundGradient1"; } }

            /// <summary>Represents x:Key="SelectedBackgroundGradient2"/></summary>
            public static string SelectedBackgroundGradient2Key { get { return "SelectedBackgroundGradient2"; } }

            /// <summary>Represents x:Key="SelectedBackgroundGradient3"/></summary>
            public static string SelectedBackgroundGradient3Key { get { return "SelectedBackgroundGradient3"; } }

            /// <summary>Represents x:Key="SelectedBackgroundGradient4"/></summary>
            public static string SelectedBackgroundGradient4Key { get { return "SelectedBackgroundGradient4"; } }

            /// <summary>Represents x:Key="SliderBorderGradient1"/></summary>
            public static string SliderBorderGradient1Key { get { return "SliderBorderGradient1"; } }

            /// <summary>Represents x:Key="SliderBorderGradient2"/></summary>
            public static string SliderBorderGradient2Key { get { return "SliderBorderGradient2"; } }

            /// <summary>Represents x:Key="ShadeBrushGradient1"/></summary>
            public static string ShadeBrushGradient1Key { get { return "ShadeBrushGradient1"; } }

            /// <summary>Represents x:Key="ShadeBrushGradient2"/></summary>
            public static string ShadeBrushGradient2Key { get { return "ShadeBrushGradient2"; } }

            /// <summary>Represents x:Key="ShadeBrushGradient3"/></summary>
            public static string ShadeBrushGradient3Key { get { return "ShadeBrushGradient3"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrushGradient1"/></summary>
            public static string WindowBackgroundBrushGradient1Key { get { return "WindowBackgroundBrushGradient1"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrushGradient2"/></summary>
            public static string WindowBackgroundBrushGradient2Key { get { return "WindowBackgroundBrushGradient2"; } }

            /// <summary>Represents x:Key="NormalBrush"/></summary>
            public static string NormalBrushKey { get { return "NormalBrush"; } }

            /// <summary>Represents x:Key="NormalBorderBrush"/></summary>
            public static string NormalBorderBrushKey { get { return "NormalBorderBrush"; } }

            /// <summary>Represents x:Key="HoverBrush"/></summary>
            public static string HoverBrushKey { get { return "HoverBrush"; } }

            /// <summary>Represents x:Key="CheckIconBrush"/></summary>
            public static string CheckIconBrushKey { get { return "CheckIconBrush"; } }

            /// <summary>Represents x:Key="ShadeBrush"/></summary>
            public static string ShadeBrushKey { get { return "ShadeBrush"; } }

            /// <summary>Represents x:Key="ShadeBrushTop"/></summary>
            public static string ShadeBrushTopKey { get { return "ShadeBrushTop"; } }

            /// <summary>Represents x:Key="ShadeBrushBottom"/></summary>
            public static string ShadeBrushBottomKey { get { return "ShadeBrushBottom"; } }

            /// <summary>Represents x:Key="ShadeBrushLeft"/></summary>
            public static string ShadeBrushLeftKey { get { return "ShadeBrushLeft"; } }

            /// <summary>Represents x:Key="ShadeBrushRight"/></summary>
            public static string ShadeBrushRightKey { get { return "ShadeBrushRight"; } }

            /// <summary>Represents x:Key="DisabledBackgroundBrush"/></summary>
            public static string DisabledBackgroundBrushKey { get { return "DisabledBackgroundBrush"; } }

            /// <summary>Represents x:Key="SelectedBackgroundBrush"/></summary>
            public static string SelectedBackgroundBrushKey { get { return "SelectedBackgroundBrush"; } }

            /// <summary>Represents x:Key="SelectedBackgroundBrushVertical"/></summary>
            public static string SelectedBackgroundBrushVerticalKey { get { return "SelectedBackgroundBrushVertical"; } }

            /// <summary>Represents x:Key="HorizontalSliderBorderBrush"/></summary>
            public static string HorizontalSliderBorderBrushKey { get { return "HorizontalSliderBorderBrush"; } }

            /// <summary>Represents x:Key="VerticalSliderBorderBrush"/></summary>
            public static string VerticalSliderBorderBrushKey { get { return "VerticalSliderBorderBrush"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrush"/></summary>
            public static string WindowBackgroundBrushKey { get { return "WindowBackgroundBrush"; } }

            /// <summary>Represents x:Key="MouseOverBrush"/></summary>
            public static string MouseOverBrushKey { get { return "MouseOverBrush"; } }

            /// <summary>Represents x:Key="PressedBrush"/></summary>
            public static string PressedBrushKey { get { return "PressedBrush"; } }

            /// <summary>Represents x:Key="PressedBorderBrush"/></summary>
            public static string PressedBorderBrushKey { get { return "PressedBorderBrush"; } }

            /// <summary>Represents x:Key="LightBrush"/></summary>
            public static string LightBrushKey { get { return "LightBrush"; } }

            /// <summary>Represents x:Key="DisabledForegroundBrush"/></summary>
            public static string DisabledForegroundBrushKey { get { return "DisabledForegroundBrush"; } }

            /// <summary>Represents x:Key="DisabledBorderBrush"/></summary>
            public static string DisabledBorderBrushKey { get { return "DisabledBorderBrush"; } }

            /// <summary>Represents x:Key="DefaultedBorderBrush"/></summary>
            public static string DefaultedBorderBrushKey { get { return "DefaultedBorderBrush"; } }

            /// <summary>Represents x:Key="SolidBorderBrush"/></summary>
            public static string SolidBorderBrushKey { get { return "SolidBorderBrush"; } }

            /// <summary>Represents x:Key="LightBorderBrush"/></summary>
            public static string LightBorderBrushKey { get { return "LightBorderBrush"; } }

            /// <summary>Represents x:Key="LightColorBrush"/></summary>
            public static string LightColorBrushKey { get { return "LightColorBrush"; } }

            /// <summary>Represents x:Key="GlyphBrush"/></summary>
            public static string GlyphBrushKey { get { return "GlyphBrush"; } }

            /// <summary>Represents x:Key="NuclearButtonFocusVisual"/></summary>
            public static string NuclearButtonFocusVisualKey { get { return "NuclearButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonTemplate"/></summary>
            public static string ButtonTemplateKey { get { return "ButtonTemplate"; } }

            /// <summary>Represents x:Key="HoverOn"/></summary>
            public static string HoverOnKey { get { return "HoverOn"; } }

            /// <summary>Represents x:Key="HoverOff"/></summary>
            public static string HoverOffKey { get { return "HoverOff"; } }

            /// <summary>Represents x:Key="PressedOn"/></summary>
            public static string PressedOnKey { get { return "PressedOn"; } }

            /// <summary>Represents x:Key="PressedOff"/></summary>
            public static string PressedOffKey { get { return "PressedOff"; } }

            /// <summary>Represents x:Key="FocusedOn"/></summary>
            public static string FocusedOnKey { get { return "FocusedOn"; } }

            /// <summary>Represents x:Key="FocusedOff"/></summary>
            public static string FocusedOffKey { get { return "FocusedOff"; } }

            /// <summary>Represents x:Key="RadioButtonFocusVisual"/></summary>
            public static string RadioButtonFocusVisualKey { get { return "RadioButtonFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxFocusVisual"/></summary>
            public static string CheckBoxFocusVisualKey { get { return "CheckBoxFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxTemplate"/></summary>
            public static string CheckBoxTemplateKey { get { return "CheckBoxTemplate"; } }

            /// <summary>Represents x:Key="CheckedFalse"/></summary>
            public static string CheckedFalseKey { get { return "CheckedFalse"; } }

            /// <summary>Represents x:Key="CheckedTrue"/></summary>
            public static string CheckedTrueKey { get { return "CheckedTrue"; } }

            /// <summary>Represents x:Key="ThreeStateOn"/></summary>
            public static string ThreeStateOnKey { get { return "ThreeStateOn"; } }

            /// <summary>Represents x:Key="ThreeStateOff"/></summary>
            public static string ThreeStateOffKey { get { return "ThreeStateOff"; } }

            /// <summary>Represents x:Key="RadioButtonTemplate"/></summary>
            public static string RadioButtonTemplateKey { get { return "RadioButtonTemplate"; } }

            /// <summary>Represents x:Key="NuclearRepeatButton"/></summary>
            public static string NuclearRepeatButtonKey { get { return "NuclearRepeatButton"; } }

            /// <summary>Represents x:Key="NuclearThumbStyle"/></summary>
            public static string NuclearThumbStyleKey { get { return "NuclearThumbStyle"; } }

            /// <summary>Represents x:Key="NuclearScrollRepeatButtonStyle"/></summary>
            public static string NuclearScrollRepeatButtonStyleKey { get { return "NuclearScrollRepeatButtonStyle"; } }

            /// <summary>Represents x:Key="SelectedOn"/></summary>
            public static string SelectedOnKey { get { return "SelectedOn"; } }

            /// <summary>Represents x:Key="SelectedOff"/></summary>
            public static string SelectedOffKey { get { return "SelectedOff"; } }

            /// <summary>Represents x:Key="ExpanderHeaderFocusVisual"/></summary>
            public static string ExpanderHeaderFocusVisualKey { get { return "ExpanderHeaderFocusVisual"; } }

            /// <summary>Represents x:Key="ExpanderDownHeaderStyle"/></summary>
            public static string ExpanderDownHeaderStyleKey { get { return "ExpanderDownHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderRightHeaderStyle"/></summary>
            public static string ExpanderRightHeaderStyleKey { get { return "ExpanderRightHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderUpHeaderStyle"/></summary>
            public static string ExpanderUpHeaderStyleKey { get { return "ExpanderUpHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderLeftHeaderStyle"/></summary>
            public static string ExpanderLeftHeaderStyleKey { get { return "ExpanderLeftHeaderStyle"; } }

            /// <summary>Represents x:Key="ComboBoxToggleButton"/></summary>
            public static string ComboBoxToggleButtonKey { get { return "ComboBoxToggleButton"; } }

            /// <summary>Represents x:Key="ComboBoxTextBox"/></summary>
            public static string ComboBoxTextBoxKey { get { return "ComboBoxTextBox"; } }

            /// <summary>Represents x:Key="ComboBoxTemplate"/></summary>
            public static string ComboBoxTemplateKey { get { return "ComboBoxTemplate"; } }

            /// <summary>Represents x:Key="IndeterminateOn"/></summary>
            public static string IndeterminateOnKey { get { return "IndeterminateOn"; } }

            /// <summary>Represents x:Key="TextBoxTemplate"/></summary>
            public static string TextBoxTemplateKey { get { return "TextBoxTemplate"; } }

            /// <summary>Represents x:Key="PopupDropShadow"/></summary>
            public static string PopupDropShadowKey { get { return "PopupDropShadow"; } }

            /// <summary>Represents x:Key="HighlightedOn"/></summary>
            public static string HighlightedOnKey { get { return "HighlightedOn"; } }

            /// <summary>Represents x:Key="HighlightedOff"/></summary>
            public static string HighlightedOffKey { get { return "HighlightedOff"; } }

            /// <summary>Represents x:Key="NuclearSliderThumb"/></summary>
            public static string NuclearSliderThumbKey { get { return "NuclearSliderThumb"; } }

            /// <summary>Represents x:Key="NuclearTreeViewItemToggleButton"/></summary>
            public static string NuclearTreeViewItemToggleButtonKey { get { return "NuclearTreeViewItemToggleButton"; } }

            /// <summary>Represents x:Key="SelectedHoverOn"/></summary>
            public static string SelectedHoverOnKey { get { return "SelectedHoverOn"; } }

            /// <summary>Represents x:Key="SelectedHoverOff"/></summary>
            public static string SelectedHoverOffKey { get { return "SelectedHoverOff"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalBackground"/></summary>
            public static string ToolBarHorizontalBackgroundKey { get { return "ToolBarHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonHorizontalBackground"/></summary>
            public static string ToolBarToggleButtonHorizontalBackgroundKey { get { return "ToolBarToggleButtonHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarButtonHover"/></summary>
            public static string ToolBarButtonHoverKey { get { return "ToolBarButtonHover"; } }

            /// <summary>Represents x:Key="ToolBarGripper"/></summary>
            public static string ToolBarGripperKey { get { return "ToolBarGripper"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalOverflowButtonStyle"/></summary>
            public static string ToolBarHorizontalOverflowButtonStyleKey { get { return "ToolBarHorizontalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarSubMenuBackground"/></summary>
            public static string ToolBarSubMenuBackgroundKey { get { return "ToolBarSubMenuBackground"; } }

            /// <summary>Represents x:Key="ToolBarMenuBorder"/></summary>
            public static string ToolBarMenuBorderKey { get { return "ToolBarMenuBorder"; } }

            /// <summary>Represents x:Key="ToolBarThumbStyle"/></summary>
            public static string ToolBarThumbStyleKey { get { return "ToolBarThumbStyle"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonVerticalBackground"/></summary>
            public static string ToolBarToggleButtonVerticalBackgroundKey { get { return "ToolBarToggleButtonVerticalBackground"; } }

            /// <summary>Represents x:Key="ToolBarVerticalOverflowButtonStyle"/></summary>
            public static string ToolBarVerticalOverflowButtonStyleKey { get { return "ToolBarVerticalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarVerticalBackground"/></summary>
            public static string ToolBarVerticalBackgroundKey { get { return "ToolBarVerticalBackground"; } }

            /// <summary>Represents x:Key="BorderGapMaskConverter"/></summary>
            public static string BorderGapMaskConverterKey { get { return "BorderGapMaskConverter"; } }

            /// <summary>Represents x:Key="ListBorder"/></summary>
            public static string ListBorderKey { get { return "ListBorder"; } }

            /// <summary>Represents x:Key="ListViewItemFocusVisual"/></summary>
            public static string ListViewItemFocusVisualKey { get { return "ListViewItemFocusVisual"; } }

            /// <summary>Represents x:Key="GridViewColumnHeaderGripper"/></summary>
            public static string GridViewColumnHeaderGripperKey { get { return "GridViewColumnHeaderGripper"; } }

            /// <summary>Represents x:Key="ButtonFocusVisual"/></summary>
            public static string ButtonFocusVisualKey { get { return "ButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonNormalBackground"/></summary>
            public static string ButtonNormalBackgroundKey { get { return "ButtonNormalBackground"; } }

            /// <summary>Represents x:Key="ButtonNormalBorder"/></summary>
            public static string ButtonNormalBorderKey { get { return "ButtonNormalBorder"; } }

            /// <summary>Represents x:Key="CheckedOn"/></summary>
            public static string CheckedOnKey { get { return "CheckedOn"; } }

            /// <summary>Represents x:Key="CheckedOff"/></summary>
            public static string CheckedOffKey { get { return "CheckedOff"; } }


    }

    /// <summary>Metadata for XAML ShinyRed.xaml</summary>
    public static class ShinyRedXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/ShinyRed.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/ShinyRed.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/ShinyRed.xaml")); } }

            /// <summary>Represents x:Key="BlackColor"/></summary>
            public static string BlackColorKey { get { return "BlackColor"; } }

            /// <summary>Represents x:Key="WhiteColor"/></summary>
            public static string WhiteColorKey { get { return "WhiteColor"; } }

            /// <summary>Represents x:Key="TextBrush"/></summary>
            public static string TextBrushKey { get { return "TextBrush"; } }

            /// <summary>Represents x:Key="NormalBrushGradient1"/></summary>
            public static string NormalBrushGradient1Key { get { return "NormalBrushGradient1"; } }

            /// <summary>Represents x:Key="NormalBrushGradient2"/></summary>
            public static string NormalBrushGradient2Key { get { return "NormalBrushGradient2"; } }

            /// <summary>Represents x:Key="NormalBrushGradient3"/></summary>
            public static string NormalBrushGradient3Key { get { return "NormalBrushGradient3"; } }

            /// <summary>Represents x:Key="NormalBrushGradient4"/></summary>
            public static string NormalBrushGradient4Key { get { return "NormalBrushGradient4"; } }

            /// <summary>Represents x:Key="NormalBorderBrushGradient1"/></summary>
            public static string NormalBorderBrushGradient1Key { get { return "NormalBorderBrushGradient1"; } }

            /// <summary>Represents x:Key="NormalBorderBrushGradient2"/></summary>
            public static string NormalBorderBrushGradient2Key { get { return "NormalBorderBrushGradient2"; } }

            /// <summary>Represents x:Key="NormalBorderBrushGradient3"/></summary>
            public static string NormalBorderBrushGradient3Key { get { return "NormalBorderBrushGradient3"; } }

            /// <summary>Represents x:Key="NormalBorderBrushGradient4"/></summary>
            public static string NormalBorderBrushGradient4Key { get { return "NormalBorderBrushGradient4"; } }

            /// <summary>Represents x:Key="SelectedBackgroundGradient1"/></summary>
            public static string SelectedBackgroundGradient1Key { get { return "SelectedBackgroundGradient1"; } }

            /// <summary>Represents x:Key="SelectedBackgroundGradient2"/></summary>
            public static string SelectedBackgroundGradient2Key { get { return "SelectedBackgroundGradient2"; } }

            /// <summary>Represents x:Key="SelectedBackgroundGradient3"/></summary>
            public static string SelectedBackgroundGradient3Key { get { return "SelectedBackgroundGradient3"; } }

            /// <summary>Represents x:Key="SelectedBackgroundGradient4"/></summary>
            public static string SelectedBackgroundGradient4Key { get { return "SelectedBackgroundGradient4"; } }

            /// <summary>Represents x:Key="SliderBorderGradient1"/></summary>
            public static string SliderBorderGradient1Key { get { return "SliderBorderGradient1"; } }

            /// <summary>Represents x:Key="SliderBorderGradient2"/></summary>
            public static string SliderBorderGradient2Key { get { return "SliderBorderGradient2"; } }

            /// <summary>Represents x:Key="ShadeBrushGradient1"/></summary>
            public static string ShadeBrushGradient1Key { get { return "ShadeBrushGradient1"; } }

            /// <summary>Represents x:Key="ShadeBrushGradient2"/></summary>
            public static string ShadeBrushGradient2Key { get { return "ShadeBrushGradient2"; } }

            /// <summary>Represents x:Key="ShadeBrushGradient3"/></summary>
            public static string ShadeBrushGradient3Key { get { return "ShadeBrushGradient3"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrushGradient1"/></summary>
            public static string WindowBackgroundBrushGradient1Key { get { return "WindowBackgroundBrushGradient1"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrushGradient2"/></summary>
            public static string WindowBackgroundBrushGradient2Key { get { return "WindowBackgroundBrushGradient2"; } }

            /// <summary>Represents x:Key="NormalBrush"/></summary>
            public static string NormalBrushKey { get { return "NormalBrush"; } }

            /// <summary>Represents x:Key="NormalBorderBrush"/></summary>
            public static string NormalBorderBrushKey { get { return "NormalBorderBrush"; } }

            /// <summary>Represents x:Key="HoverBrush"/></summary>
            public static string HoverBrushKey { get { return "HoverBrush"; } }

            /// <summary>Represents x:Key="CheckIconBrush"/></summary>
            public static string CheckIconBrushKey { get { return "CheckIconBrush"; } }

            /// <summary>Represents x:Key="ShadeBrush"/></summary>
            public static string ShadeBrushKey { get { return "ShadeBrush"; } }

            /// <summary>Represents x:Key="ShadeBrushTop"/></summary>
            public static string ShadeBrushTopKey { get { return "ShadeBrushTop"; } }

            /// <summary>Represents x:Key="ShadeBrushBottom"/></summary>
            public static string ShadeBrushBottomKey { get { return "ShadeBrushBottom"; } }

            /// <summary>Represents x:Key="ShadeBrushLeft"/></summary>
            public static string ShadeBrushLeftKey { get { return "ShadeBrushLeft"; } }

            /// <summary>Represents x:Key="ShadeBrushRight"/></summary>
            public static string ShadeBrushRightKey { get { return "ShadeBrushRight"; } }

            /// <summary>Represents x:Key="DisabledBackgroundBrush"/></summary>
            public static string DisabledBackgroundBrushKey { get { return "DisabledBackgroundBrush"; } }

            /// <summary>Represents x:Key="SelectedBackgroundBrush"/></summary>
            public static string SelectedBackgroundBrushKey { get { return "SelectedBackgroundBrush"; } }

            /// <summary>Represents x:Key="SelectedBackgroundBrushVertical"/></summary>
            public static string SelectedBackgroundBrushVerticalKey { get { return "SelectedBackgroundBrushVertical"; } }

            /// <summary>Represents x:Key="HorizontalSliderBorderBrush"/></summary>
            public static string HorizontalSliderBorderBrushKey { get { return "HorizontalSliderBorderBrush"; } }

            /// <summary>Represents x:Key="VerticalSliderBorderBrush"/></summary>
            public static string VerticalSliderBorderBrushKey { get { return "VerticalSliderBorderBrush"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrush"/></summary>
            public static string WindowBackgroundBrushKey { get { return "WindowBackgroundBrush"; } }

            /// <summary>Represents x:Key="MouseOverBrush"/></summary>
            public static string MouseOverBrushKey { get { return "MouseOverBrush"; } }

            /// <summary>Represents x:Key="PressedBrush"/></summary>
            public static string PressedBrushKey { get { return "PressedBrush"; } }

            /// <summary>Represents x:Key="PressedBorderBrush"/></summary>
            public static string PressedBorderBrushKey { get { return "PressedBorderBrush"; } }

            /// <summary>Represents x:Key="LightBrush"/></summary>
            public static string LightBrushKey { get { return "LightBrush"; } }

            /// <summary>Represents x:Key="DisabledForegroundBrush"/></summary>
            public static string DisabledForegroundBrushKey { get { return "DisabledForegroundBrush"; } }

            /// <summary>Represents x:Key="DisabledBorderBrush"/></summary>
            public static string DisabledBorderBrushKey { get { return "DisabledBorderBrush"; } }

            /// <summary>Represents x:Key="DefaultedBorderBrush"/></summary>
            public static string DefaultedBorderBrushKey { get { return "DefaultedBorderBrush"; } }

            /// <summary>Represents x:Key="SolidBorderBrush"/></summary>
            public static string SolidBorderBrushKey { get { return "SolidBorderBrush"; } }

            /// <summary>Represents x:Key="LightBorderBrush"/></summary>
            public static string LightBorderBrushKey { get { return "LightBorderBrush"; } }

            /// <summary>Represents x:Key="LightColorBrush"/></summary>
            public static string LightColorBrushKey { get { return "LightColorBrush"; } }

            /// <summary>Represents x:Key="GlyphBrush"/></summary>
            public static string GlyphBrushKey { get { return "GlyphBrush"; } }

            /// <summary>Represents x:Key="NuclearButtonFocusVisual"/></summary>
            public static string NuclearButtonFocusVisualKey { get { return "NuclearButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonTemplate"/></summary>
            public static string ButtonTemplateKey { get { return "ButtonTemplate"; } }

            /// <summary>Represents x:Key="HoverOn"/></summary>
            public static string HoverOnKey { get { return "HoverOn"; } }

            /// <summary>Represents x:Key="HoverOff"/></summary>
            public static string HoverOffKey { get { return "HoverOff"; } }

            /// <summary>Represents x:Key="PressedOn"/></summary>
            public static string PressedOnKey { get { return "PressedOn"; } }

            /// <summary>Represents x:Key="PressedOff"/></summary>
            public static string PressedOffKey { get { return "PressedOff"; } }

            /// <summary>Represents x:Key="FocusedOn"/></summary>
            public static string FocusedOnKey { get { return "FocusedOn"; } }

            /// <summary>Represents x:Key="FocusedOff"/></summary>
            public static string FocusedOffKey { get { return "FocusedOff"; } }

            /// <summary>Represents x:Key="RadioButtonFocusVisual"/></summary>
            public static string RadioButtonFocusVisualKey { get { return "RadioButtonFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxFocusVisual"/></summary>
            public static string CheckBoxFocusVisualKey { get { return "CheckBoxFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxTemplate"/></summary>
            public static string CheckBoxTemplateKey { get { return "CheckBoxTemplate"; } }

            /// <summary>Represents x:Key="CheckedFalse"/></summary>
            public static string CheckedFalseKey { get { return "CheckedFalse"; } }

            /// <summary>Represents x:Key="CheckedTrue"/></summary>
            public static string CheckedTrueKey { get { return "CheckedTrue"; } }

            /// <summary>Represents x:Key="ThreeStateOn"/></summary>
            public static string ThreeStateOnKey { get { return "ThreeStateOn"; } }

            /// <summary>Represents x:Key="ThreeStateOff"/></summary>
            public static string ThreeStateOffKey { get { return "ThreeStateOff"; } }

            /// <summary>Represents x:Key="NuclearRepeatButton"/></summary>
            public static string NuclearRepeatButtonKey { get { return "NuclearRepeatButton"; } }

            /// <summary>Represents x:Key="NuclearThumbStyle"/></summary>
            public static string NuclearThumbStyleKey { get { return "NuclearThumbStyle"; } }

            /// <summary>Represents x:Key="NuclearScrollRepeatButtonStyle"/></summary>
            public static string NuclearScrollRepeatButtonStyleKey { get { return "NuclearScrollRepeatButtonStyle"; } }

            /// <summary>Represents x:Key="SelectedOn"/></summary>
            public static string SelectedOnKey { get { return "SelectedOn"; } }

            /// <summary>Represents x:Key="SelectedOff"/></summary>
            public static string SelectedOffKey { get { return "SelectedOff"; } }

            /// <summary>Represents x:Key="ExpanderHeaderFocusVisual"/></summary>
            public static string ExpanderHeaderFocusVisualKey { get { return "ExpanderHeaderFocusVisual"; } }

            /// <summary>Represents x:Key="ExpanderDownHeaderStyle"/></summary>
            public static string ExpanderDownHeaderStyleKey { get { return "ExpanderDownHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderRightHeaderStyle"/></summary>
            public static string ExpanderRightHeaderStyleKey { get { return "ExpanderRightHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderUpHeaderStyle"/></summary>
            public static string ExpanderUpHeaderStyleKey { get { return "ExpanderUpHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderLeftHeaderStyle"/></summary>
            public static string ExpanderLeftHeaderStyleKey { get { return "ExpanderLeftHeaderStyle"; } }

            /// <summary>Represents x:Key="ComboBoxToggleButton"/></summary>
            public static string ComboBoxToggleButtonKey { get { return "ComboBoxToggleButton"; } }

            /// <summary>Represents x:Key="ComboBoxTextBox"/></summary>
            public static string ComboBoxTextBoxKey { get { return "ComboBoxTextBox"; } }

            /// <summary>Represents x:Key="ComboBoxTemplate"/></summary>
            public static string ComboBoxTemplateKey { get { return "ComboBoxTemplate"; } }

            /// <summary>Represents x:Key="IndeterminateOn"/></summary>
            public static string IndeterminateOnKey { get { return "IndeterminateOn"; } }

            /// <summary>Represents x:Key="TextBoxTemplate"/></summary>
            public static string TextBoxTemplateKey { get { return "TextBoxTemplate"; } }

            /// <summary>Represents x:Key="PopupDropShadow"/></summary>
            public static string PopupDropShadowKey { get { return "PopupDropShadow"; } }

            /// <summary>Represents x:Key="HighlightedOn"/></summary>
            public static string HighlightedOnKey { get { return "HighlightedOn"; } }

            /// <summary>Represents x:Key="HighlightedOff"/></summary>
            public static string HighlightedOffKey { get { return "HighlightedOff"; } }

            /// <summary>Represents x:Key="NuclearSliderThumb"/></summary>
            public static string NuclearSliderThumbKey { get { return "NuclearSliderThumb"; } }

            /// <summary>Represents x:Key="NuclearTreeViewItemToggleButton"/></summary>
            public static string NuclearTreeViewItemToggleButtonKey { get { return "NuclearTreeViewItemToggleButton"; } }

            /// <summary>Represents x:Key="SelectedHoverOn"/></summary>
            public static string SelectedHoverOnKey { get { return "SelectedHoverOn"; } }

            /// <summary>Represents x:Key="SelectedHoverOff"/></summary>
            public static string SelectedHoverOffKey { get { return "SelectedHoverOff"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalBackground"/></summary>
            public static string ToolBarHorizontalBackgroundKey { get { return "ToolBarHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonHorizontalBackground"/></summary>
            public static string ToolBarToggleButtonHorizontalBackgroundKey { get { return "ToolBarToggleButtonHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarButtonHover"/></summary>
            public static string ToolBarButtonHoverKey { get { return "ToolBarButtonHover"; } }

            /// <summary>Represents x:Key="ToolBarGripper"/></summary>
            public static string ToolBarGripperKey { get { return "ToolBarGripper"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalOverflowButtonStyle"/></summary>
            public static string ToolBarHorizontalOverflowButtonStyleKey { get { return "ToolBarHorizontalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarSubMenuBackground"/></summary>
            public static string ToolBarSubMenuBackgroundKey { get { return "ToolBarSubMenuBackground"; } }

            /// <summary>Represents x:Key="ToolBarMenuBorder"/></summary>
            public static string ToolBarMenuBorderKey { get { return "ToolBarMenuBorder"; } }

            /// <summary>Represents x:Key="ToolBarThumbStyle"/></summary>
            public static string ToolBarThumbStyleKey { get { return "ToolBarThumbStyle"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonVerticalBackground"/></summary>
            public static string ToolBarToggleButtonVerticalBackgroundKey { get { return "ToolBarToggleButtonVerticalBackground"; } }

            /// <summary>Represents x:Key="ToolBarVerticalOverflowButtonStyle"/></summary>
            public static string ToolBarVerticalOverflowButtonStyleKey { get { return "ToolBarVerticalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarVerticalBackground"/></summary>
            public static string ToolBarVerticalBackgroundKey { get { return "ToolBarVerticalBackground"; } }

            /// <summary>Represents x:Key="BorderGapMaskConverter"/></summary>
            public static string BorderGapMaskConverterKey { get { return "BorderGapMaskConverter"; } }

            /// <summary>Represents x:Key="ListBorder"/></summary>
            public static string ListBorderKey { get { return "ListBorder"; } }

            /// <summary>Represents x:Key="ListViewItemFocusVisual"/></summary>
            public static string ListViewItemFocusVisualKey { get { return "ListViewItemFocusVisual"; } }

            /// <summary>Represents x:Key="GridViewColumnHeaderGripper"/></summary>
            public static string GridViewColumnHeaderGripperKey { get { return "GridViewColumnHeaderGripper"; } }

            /// <summary>Represents x:Key="ButtonFocusVisual"/></summary>
            public static string ButtonFocusVisualKey { get { return "ButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonNormalBackground"/></summary>
            public static string ButtonNormalBackgroundKey { get { return "ButtonNormalBackground"; } }

            /// <summary>Represents x:Key="ButtonNormalBorder"/></summary>
            public static string ButtonNormalBorderKey { get { return "ButtonNormalBorder"; } }

            /// <summary>Represents x:Key="CheckedOn"/></summary>
            public static string CheckedOnKey { get { return "CheckedOn"; } }

            /// <summary>Represents x:Key="CheckedOff"/></summary>
            public static string CheckedOffKey { get { return "CheckedOff"; } }


    }

    /// <summary>Metadata for XAML WhistlerBlue.xaml</summary>
    public static class WhistlerBlueXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/WhistlerBlue.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/WhistlerBlue.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/WhistlerBlue.xaml")); } }

            /// <summary>Represents x:Key="OutsideFontColor"/></summary>
            public static string OutsideFontColorKey { get { return "OutsideFontColor"; } }

            /// <summary>Represents x:Key="ButtonFontColor"/></summary>
            public static string ButtonFontColorKey { get { return "ButtonFontColor"; } }

            /// <summary>Represents x:Key="Focus"/></summary>
            public static string FocusKey { get { return "Focus"; } }

            /// <summary>Represents x:Key="HyperlinkFocus"/></summary>
            public static string HyperlinkFocusKey { get { return "HyperlinkFocus"; } }

            /// <summary>Represents x:Key="Calendar"/></summary>
            public static string CalendarKey { get { return "Calendar"; } }

            /// <summary>Represents x:Key="PressStroke1"/></summary>
            public static string PressStroke1Key { get { return "PressStroke1"; } }

            /// <summary>Represents x:Key="PressStroke2"/></summary>
            public static string PressStroke2Key { get { return "PressStroke2"; } }

            /// <summary>Represents x:Key="TabStroke"/></summary>
            public static string TabStrokeKey { get { return "TabStroke"; } }

            /// <summary>Represents x:Key="DataSortArrow"/></summary>
            public static string DataSortArrowKey { get { return "DataSortArrow"; } }

            /// <summary>Represents x:Key="DropLocate"/></summary>
            public static string DropLocateKey { get { return "DropLocate"; } }

            /// <summary>Represents x:Key="TreeviewArrowNorm"/></summary>
            public static string TreeviewArrowNormKey { get { return "TreeviewArrowNorm"; } }

            /// <summary>Represents x:Key="TreeviewArrowOver"/></summary>
            public static string TreeviewArrowOverKey { get { return "TreeviewArrowOver"; } }

            /// <summary>Represents x:Key="TreeviewArrowCheck"/></summary>
            public static string TreeviewArrowCheckKey { get { return "TreeviewArrowCheck"; } }

            /// <summary>Represents x:Key="ExpandArrowStroke"/></summary>
            public static string ExpandArrowStrokeKey { get { return "ExpandArrowStroke"; } }

            /// <summary>Represents x:Key="Arrow"/></summary>
            public static string ArrowKey { get { return "Arrow"; } }

            /// <summary>Represents x:Key="Arrow2"/></summary>
            public static string Arrow2Key { get { return "Arrow2"; } }

            /// <summary>Represents x:Key="TextBkgSelection"/></summary>
            public static string TextBkgSelectionKey { get { return "TextBkgSelection"; } }

            /// <summary>Represents x:Key="TextboxOver1"/></summary>
            public static string TextboxOver1Key { get { return "TextboxOver1"; } }

            /// <summary>Represents x:Key="TextboxOver2"/></summary>
            public static string TextboxOver2Key { get { return "TextboxOver2"; } }

            /// <summary>Represents x:Key="TextboxPress1"/></summary>
            public static string TextboxPress1Key { get { return "TextboxPress1"; } }

            /// <summary>Represents x:Key="TextboxPress2"/></summary>
            public static string TextboxPress2Key { get { return "TextboxPress2"; } }

            /// <summary>Represents x:Key="ItemOver1"/></summary>
            public static string ItemOver1Key { get { return "ItemOver1"; } }

            /// <summary>Represents x:Key="ItemOver2"/></summary>
            public static string ItemOver2Key { get { return "ItemOver2"; } }

            /// <summary>Represents x:Key="ItemOverStroke"/></summary>
            public static string ItemOverStrokeKey { get { return "ItemOverStroke"; } }

            /// <summary>Represents x:Key="ItemSelectStroke"/></summary>
            public static string ItemSelectStrokeKey { get { return "ItemSelectStroke"; } }

            /// <summary>Represents x:Key="Over1"/></summary>
            public static string Over1Key { get { return "Over1"; } }

            /// <summary>Represents x:Key="Over2"/></summary>
            public static string Over2Key { get { return "Over2"; } }

            /// <summary>Represents x:Key="Over3"/></summary>
            public static string Over3Key { get { return "Over3"; } }

            /// <summary>Represents x:Key="Press1"/></summary>
            public static string Press1Key { get { return "Press1"; } }

            /// <summary>Represents x:Key="Press2"/></summary>
            public static string Press2Key { get { return "Press2"; } }

            /// <summary>Represents x:Key="Press3"/></summary>
            public static string Press3Key { get { return "Press3"; } }

            /// <summary>Represents x:Key="PressHighlight"/></summary>
            public static string PressHighlightKey { get { return "PressHighlight"; } }

            /// <summary>Represents x:Key="ButtonHighlightMid"/></summary>
            public static string ButtonHighlightMidKey { get { return "ButtonHighlightMid"; } }

            /// <summary>Represents x:Key="ButtonHighlightMid2"/></summary>
            public static string ButtonHighlightMid2Key { get { return "ButtonHighlightMid2"; } }

            /// <summary>Represents x:Key="ButtonHighlightMid3"/></summary>
            public static string ButtonHighlightMid3Key { get { return "ButtonHighlightMid3"; } }

            /// <summary>Represents x:Key="RadioIcon1"/></summary>
            public static string RadioIcon1Key { get { return "RadioIcon1"; } }

            /// <summary>Represents x:Key="RadioIcon2"/></summary>
            public static string RadioIcon2Key { get { return "RadioIcon2"; } }

            /// <summary>Represents x:Key="RadioIcon3"/></summary>
            public static string RadioIcon3Key { get { return "RadioIcon3"; } }

            /// <summary>Represents x:Key="RadioIcon4"/></summary>
            public static string RadioIcon4Key { get { return "RadioIcon4"; } }

            /// <summary>Represents x:Key="RadioIconOver1"/></summary>
            public static string RadioIconOver1Key { get { return "RadioIconOver1"; } }

            /// <summary>Represents x:Key="RadioIconOver2"/></summary>
            public static string RadioIconOver2Key { get { return "RadioIconOver2"; } }

            /// <summary>Represents x:Key="RadioIconPress1"/></summary>
            public static string RadioIconPress1Key { get { return "RadioIconPress1"; } }

            /// <summary>Represents x:Key="RadioIconPress2"/></summary>
            public static string RadioIconPress2Key { get { return "RadioIconPress2"; } }

            /// <summary>Represents x:Key="RadioStroke"/></summary>
            public static string RadioStrokeKey { get { return "RadioStroke"; } }

            /// <summary>Represents x:Key="CheckInnerOver"/></summary>
            public static string CheckInnerOverKey { get { return "CheckInnerOver"; } }

            /// <summary>Represents x:Key="CheckInnerOver2"/></summary>
            public static string CheckInnerOver2Key { get { return "CheckInnerOver2"; } }

            /// <summary>Represents x:Key="CheckInnerPress"/></summary>
            public static string CheckInnerPressKey { get { return "CheckInnerPress"; } }

            /// <summary>Represents x:Key="CheckInnerPress2"/></summary>
            public static string CheckInnerPress2Key { get { return "CheckInnerPress2"; } }

            /// <summary>Represents x:Key="CheckOutterOver"/></summary>
            public static string CheckOutterOverKey { get { return "CheckOutterOver"; } }

            /// <summary>Represents x:Key="CheckOutterOver2"/></summary>
            public static string CheckOutterOver2Key { get { return "CheckOutterOver2"; } }

            /// <summary>Represents x:Key="ThumbPress1"/></summary>
            public static string ThumbPress1Key { get { return "ThumbPress1"; } }

            /// <summary>Represents x:Key="ThumbPress2"/></summary>
            public static string ThumbPress2Key { get { return "ThumbPress2"; } }

            /// <summary>Represents x:Key="ExpanderOver1"/></summary>
            public static string ExpanderOver1Key { get { return "ExpanderOver1"; } }

            /// <summary>Represents x:Key="ExpanderOver2"/></summary>
            public static string ExpanderOver2Key { get { return "ExpanderOver2"; } }

            /// <summary>Represents x:Key="ExpanderOver3"/></summary>
            public static string ExpanderOver3Key { get { return "ExpanderOver3"; } }

            /// <summary>Represents x:Key="ExpanderMid"/></summary>
            public static string ExpanderMidKey { get { return "ExpanderMid"; } }

            /// <summary>Represents x:Key="ExpanderPress1"/></summary>
            public static string ExpanderPress1Key { get { return "ExpanderPress1"; } }

            /// <summary>Represents x:Key="ExpanderPress2"/></summary>
            public static string ExpanderPress2Key { get { return "ExpanderPress2"; } }

            /// <summary>Represents x:Key="ThumbDivetOver"/></summary>
            public static string ThumbDivetOverKey { get { return "ThumbDivetOver"; } }

            /// <summary>Represents x:Key="ThumbDivetFill1"/></summary>
            public static string ThumbDivetFill1Key { get { return "ThumbDivetFill1"; } }

            /// <summary>Represents x:Key="ThumbDivetFill2"/></summary>
            public static string ThumbDivetFill2Key { get { return "ThumbDivetFill2"; } }

            /// <summary>Represents x:Key="btnFocus"/></summary>
            public static string btnFocusKey { get { return "btnFocus"; } }

            /// <summary>Represents x:Key="btnPressStroke1"/></summary>
            public static string btnPressStroke1Key { get { return "btnPressStroke1"; } }

            /// <summary>Represents x:Key="btnPressStroke2"/></summary>
            public static string btnPressStroke2Key { get { return "btnPressStroke2"; } }

            /// <summary>Represents x:Key="btnPressBorder"/></summary>
            public static string btnPressBorderKey { get { return "btnPressBorder"; } }

            /// <summary>Represents x:Key="hyperlinkPress"/></summary>
            public static string hyperlinkPressKey { get { return "hyperlinkPress"; } }

            /// <summary>Represents x:Key="calendarBtnFill"/></summary>
            public static string calendarBtnFillKey { get { return "calendarBtnFill"; } }

            /// <summary>Represents x:Key="calendarTodayStroke"/></summary>
            public static string calendarTodayStrokeKey { get { return "calendarTodayStroke"; } }

            /// <summary>Represents x:Key="treeviewArrowUnchecked"/></summary>
            public static string treeviewArrowUncheckedKey { get { return "treeviewArrowUnchecked"; } }

            /// <summary>Represents x:Key="treeviewArrowHover"/></summary>
            public static string treeviewArrowHoverKey { get { return "treeviewArrowHover"; } }

            /// <summary>Represents x:Key="treeviewArrowChecked"/></summary>
            public static string treeviewArrowCheckedKey { get { return "treeviewArrowChecked"; } }

            /// <summary>Represents x:Key="TextBackgroundSelection"/></summary>
            public static string TextBackgroundSelectionKey { get { return "TextBackgroundSelection"; } }

            /// <summary>Represents x:Key="TextBoxOverBrush"/></summary>
            public static string TextBoxOverBrushKey { get { return "TextBoxOverBrush"; } }

            /// <summary>Represents x:Key="TextBoxPressBrush"/></summary>
            public static string TextBoxPressBrushKey { get { return "TextBoxPressBrush"; } }

            /// <summary>Represents x:Key="TextBoxOver"/></summary>
            public static string TextBoxOverKey { get { return "TextBoxOver"; } }

            /// <summary>Represents x:Key="TextBoxFocus"/></summary>
            public static string TextBoxFocusKey { get { return "TextBoxFocus"; } }

            /// <summary>Represents x:Key="TextBoxNorm"/></summary>
            public static string TextBoxNormKey { get { return "TextBoxNorm"; } }

            /// <summary>Represents x:Key="grayGradient"/></summary>
            public static string grayGradientKey { get { return "grayGradient"; } }

            /// <summary>Represents x:Key="hoverStroke"/></summary>
            public static string hoverStrokeKey { get { return "hoverStroke"; } }

            /// <summary>Represents x:Key="selectedStroke"/></summary>
            public static string selectedStrokeKey { get { return "selectedStroke"; } }

            /// <summary>Represents x:Key="hoverGradient"/></summary>
            public static string hoverGradientKey { get { return "hoverGradient"; } }

            /// <summary>Represents x:Key="hoverGradientVertical"/></summary>
            public static string hoverGradientVerticalKey { get { return "hoverGradientVertical"; } }

            /// <summary>Represents x:Key="BtnOverFill"/></summary>
            public static string BtnOverFillKey { get { return "BtnOverFill"; } }

            /// <summary>Represents x:Key="BtnPressFill"/></summary>
            public static string BtnPressFillKey { get { return "BtnPressFill"; } }

            /// <summary>Represents x:Key="btnOverFillHighlight"/></summary>
            public static string btnOverFillHighlightKey { get { return "btnOverFillHighlight"; } }

            /// <summary>Represents x:Key="btnPressFillHighlight"/></summary>
            public static string btnPressFillHighlightKey { get { return "btnPressFillHighlight"; } }

            /// <summary>Represents x:Key="checkOverStroke"/></summary>
            public static string checkOverStrokeKey { get { return "checkOverStroke"; } }

            /// <summary>Represents x:Key="checkOverFill"/></summary>
            public static string checkOverFillKey { get { return "checkOverFill"; } }

            /// <summary>Represents x:Key="checkPressFill"/></summary>
            public static string checkPressFillKey { get { return "checkPressFill"; } }

            /// <summary>Represents x:Key="checkInnerOverFill"/></summary>
            public static string checkInnerOverFillKey { get { return "checkInnerOverFill"; } }

            /// <summary>Represents x:Key="checkInnerPressFill"/></summary>
            public static string checkInnerPressFillKey { get { return "checkInnerPressFill"; } }

            /// <summary>Represents x:Key="checkIconStroke"/></summary>
            public static string checkIconStrokeKey { get { return "checkIconStroke"; } }

            /// <summary>Represents x:Key="radioIconStroke"/></summary>
            public static string radioIconStrokeKey { get { return "radioIconStroke"; } }

            /// <summary>Represents x:Key="radioIconFill"/></summary>
            public static string radioIconFillKey { get { return "radioIconFill"; } }

            /// <summary>Represents x:Key="radioIconFillOver"/></summary>
            public static string radioIconFillOverKey { get { return "radioIconFillOver"; } }

            /// <summary>Represents x:Key="radioIconFillPress"/></summary>
            public static string radioIconFillPressKey { get { return "radioIconFillPress"; } }

            /// <summary>Represents x:Key="checkInnerOverStroke"/></summary>
            public static string checkInnerOverStrokeKey { get { return "checkInnerOverStroke"; } }

            /// <summary>Represents x:Key="checkInnerPressStroke"/></summary>
            public static string checkInnerPressStrokeKey { get { return "checkInnerPressStroke"; } }

            /// <summary>Represents x:Key="ThumbOver"/></summary>
            public static string ThumbOverKey { get { return "ThumbOver"; } }

            /// <summary>Represents x:Key="ThumbPress"/></summary>
            public static string ThumbPressKey { get { return "ThumbPress"; } }

            /// <summary>Represents x:Key="HeaderSeparator"/></summary>
            public static string HeaderSeparatorKey { get { return "HeaderSeparator"; } }

            /// <summary>Represents x:Key="GridBorder"/></summary>
            public static string GridBorderKey { get { return "GridBorder"; } }

            /// <summary>Represents x:Key="dropLocator"/></summary>
            public static string dropLocatorKey { get { return "dropLocator"; } }

            /// <summary>Represents x:Key="sortArrow"/></summary>
            public static string sortArrowKey { get { return "sortArrow"; } }

            /// <summary>Represents x:Key="ComboTogglePressHighlight"/></summary>
            public static string ComboTogglePressHighlightKey { get { return "ComboTogglePressHighlight"; } }

            /// <summary>Represents x:Key="expanderArrowStroke"/></summary>
            public static string expanderArrowStrokeKey { get { return "expanderArrowStroke"; } }

            /// <summary>Represents x:Key="ExpanderArrowHoverFill1"/></summary>
            public static string ExpanderArrowHoverFill1Key { get { return "ExpanderArrowHoverFill1"; } }

            /// <summary>Represents x:Key="ExpanderArrowHoverFill2"/></summary>
            public static string ExpanderArrowHoverFill2Key { get { return "ExpanderArrowHoverFill2"; } }

            /// <summary>Represents x:Key="ExpanderArrowHoverFill3"/></summary>
            public static string ExpanderArrowHoverFill3Key { get { return "ExpanderArrowHoverFill3"; } }

            /// <summary>Represents x:Key="ExpanderArrowPressedFill1"/></summary>
            public static string ExpanderArrowPressedFill1Key { get { return "ExpanderArrowPressedFill1"; } }

            /// <summary>Represents x:Key="ExpanderArrowPressedFill2"/></summary>
            public static string ExpanderArrowPressedFill2Key { get { return "ExpanderArrowPressedFill2"; } }

            /// <summary>Represents x:Key="ExpanderArrowPressedFill3"/></summary>
            public static string ExpanderArrowPressedFill3Key { get { return "ExpanderArrowPressedFill3"; } }

            /// <summary>Represents x:Key="TabOverStroke"/></summary>
            public static string TabOverStrokeKey { get { return "TabOverStroke"; } }

            /// <summary>Represents x:Key="VTabOverGradient"/></summary>
            public static string VTabOverGradientKey { get { return "VTabOverGradient"; } }

            /// <summary>Represents x:Key="ScrollbarBkgNormStroke"/></summary>
            public static string ScrollbarBkgNormStrokeKey { get { return "ScrollbarBkgNormStroke"; } }

            /// <summary>Represents x:Key="HScrollbarBkgNormFill"/></summary>
            public static string HScrollbarBkgNormFillKey { get { return "HScrollbarBkgNormFill"; } }

            /// <summary>Represents x:Key="HScrollbarBkgOverFill"/></summary>
            public static string HScrollbarBkgOverFillKey { get { return "HScrollbarBkgOverFill"; } }

            /// <summary>Represents x:Key="HScrollbarBkgPressFill"/></summary>
            public static string HScrollbarBkgPressFillKey { get { return "HScrollbarBkgPressFill"; } }

            /// <summary>Represents x:Key="VScrollbarBkgNormFill"/></summary>
            public static string VScrollbarBkgNormFillKey { get { return "VScrollbarBkgNormFill"; } }

            /// <summary>Represents x:Key="VScrollbarBkgOverFill"/></summary>
            public static string VScrollbarBkgOverFillKey { get { return "VScrollbarBkgOverFill"; } }

            /// <summary>Represents x:Key="VScrollbarBkgPressFill"/></summary>
            public static string VScrollbarBkgPressFillKey { get { return "VScrollbarBkgPressFill"; } }

            /// <summary>Represents x:Key="HThumbDivetNormFill"/></summary>
            public static string HThumbDivetNormFillKey { get { return "HThumbDivetNormFill"; } }

            /// <summary>Represents x:Key="HThumbDivetNormStroke"/></summary>
            public static string HThumbDivetNormStrokeKey { get { return "HThumbDivetNormStroke"; } }

            /// <summary>Represents x:Key="HThumbDivetOverFill"/></summary>
            public static string HThumbDivetOverFillKey { get { return "HThumbDivetOverFill"; } }

            /// <summary>Represents x:Key="HThumbDivetOverStroke"/></summary>
            public static string HThumbDivetOverStrokeKey { get { return "HThumbDivetOverStroke"; } }

            /// <summary>Represents x:Key="HThumbDivetPressFill"/></summary>
            public static string HThumbDivetPressFillKey { get { return "HThumbDivetPressFill"; } }

            /// <summary>Represents x:Key="HThumbDivetPressStroke"/></summary>
            public static string HThumbDivetPressStrokeKey { get { return "HThumbDivetPressStroke"; } }

            /// <summary>Represents x:Key="VThumbDivetNormFill"/></summary>
            public static string VThumbDivetNormFillKey { get { return "VThumbDivetNormFill"; } }

            /// <summary>Represents x:Key="VThumbDivetNormStroke"/></summary>
            public static string VThumbDivetNormStrokeKey { get { return "VThumbDivetNormStroke"; } }

            /// <summary>Represents x:Key="VThumbDivetOverFill"/></summary>
            public static string VThumbDivetOverFillKey { get { return "VThumbDivetOverFill"; } }

            /// <summary>Represents x:Key="VThumbDivetOverStroke"/></summary>
            public static string VThumbDivetOverStrokeKey { get { return "VThumbDivetOverStroke"; } }

            /// <summary>Represents x:Key="VThumbDivetPressFill"/></summary>
            public static string VThumbDivetPressFillKey { get { return "VThumbDivetPressFill"; } }

            /// <summary>Represents x:Key="VThumbDivetPressStroke"/></summary>
            public static string VThumbDivetPressStrokeKey { get { return "VThumbDivetPressStroke"; } }

            /// <summary>Represents x:Key="BlackColor"/></summary>
            public static string BlackColorKey { get { return "BlackColor"; } }

            /// <summary>Represents x:Key="WhiteColor"/></summary>
            public static string WhiteColorKey { get { return "WhiteColor"; } }

            /// <summary>Represents x:Key="DisabledForegroundBrush"/></summary>
            public static string DisabledForegroundBrushKey { get { return "DisabledForegroundBrush"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrush"/></summary>
            public static string WindowBackgroundBrushKey { get { return "WindowBackgroundBrush"; } }

            /// <summary>Represents x:Key="NuclearButtonFocusVisual"/></summary>
            public static string NuclearButtonFocusVisualKey { get { return "NuclearButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonTemplate"/></summary>
            public static string ButtonTemplateKey { get { return "ButtonTemplate"; } }

            /// <summary>Represents x:Key="HoverOn"/></summary>
            public static string HoverOnKey { get { return "HoverOn"; } }

            /// <summary>Represents x:Key="HoverOff"/></summary>
            public static string HoverOffKey { get { return "HoverOff"; } }

            /// <summary>Represents x:Key="PressedOn"/></summary>
            public static string PressedOnKey { get { return "PressedOn"; } }

            /// <summary>Represents x:Key="PressedOff"/></summary>
            public static string PressedOffKey { get { return "PressedOff"; } }

            /// <summary>Represents x:Key="FocusedOn"/></summary>
            public static string FocusedOnKey { get { return "FocusedOn"; } }

            /// <summary>Represents x:Key="FocusedOff"/></summary>
            public static string FocusedOffKey { get { return "FocusedOff"; } }

            /// <summary>Represents x:Key="RadioButtonFocusVisual"/></summary>
            public static string RadioButtonFocusVisualKey { get { return "RadioButtonFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxFocusVisual"/></summary>
            public static string CheckBoxFocusVisualKey { get { return "CheckBoxFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxTemplate"/></summary>
            public static string CheckBoxTemplateKey { get { return "CheckBoxTemplate"; } }

            /// <summary>Represents x:Key="CheckedOn"/></summary>
            public static string CheckedOnKey { get { return "CheckedOn"; } }

            /// <summary>Represents x:Key="CheckedOff"/></summary>
            public static string CheckedOffKey { get { return "CheckedOff"; } }

            /// <summary>Represents x:Key="IndeterminateOn"/></summary>
            public static string IndeterminateOnKey { get { return "IndeterminateOn"; } }

            /// <summary>Represents x:Key="IndeterminateOff"/></summary>
            public static string IndeterminateOffKey { get { return "IndeterminateOff"; } }

            /// <summary>Represents x:Key="RadioButtonTemplate"/></summary>
            public static string RadioButtonTemplateKey { get { return "RadioButtonTemplate"; } }

            /// <summary>Represents x:Key="NuclearRepeatButton"/></summary>
            public static string NuclearRepeatButtonKey { get { return "NuclearRepeatButton"; } }

            /// <summary>Represents x:Key="NuclearThumbStyle"/></summary>
            public static string NuclearThumbStyleKey { get { return "NuclearThumbStyle"; } }

            /// <summary>Represents x:Key="NuclearScrollRepeatButtonStyle"/></summary>
            public static string NuclearScrollRepeatButtonStyleKey { get { return "NuclearScrollRepeatButtonStyle"; } }

            /// <summary>Represents x:Key="SelectedOn"/></summary>
            public static string SelectedOnKey { get { return "SelectedOn"; } }

            /// <summary>Represents x:Key="SelectedOff"/></summary>
            public static string SelectedOffKey { get { return "SelectedOff"; } }

            /// <summary>Represents x:Key="ExpanderHeaderFocusVisual"/></summary>
            public static string ExpanderHeaderFocusVisualKey { get { return "ExpanderHeaderFocusVisual"; } }

            /// <summary>Represents x:Key="ExpanderDownHeaderStyle"/></summary>
            public static string ExpanderDownHeaderStyleKey { get { return "ExpanderDownHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderRightHeaderStyle"/></summary>
            public static string ExpanderRightHeaderStyleKey { get { return "ExpanderRightHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderUpHeaderStyle"/></summary>
            public static string ExpanderUpHeaderStyleKey { get { return "ExpanderUpHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderLeftHeaderStyle"/></summary>
            public static string ExpanderLeftHeaderStyleKey { get { return "ExpanderLeftHeaderStyle"; } }

            /// <summary>Represents x:Key="ComboBoxToggleButton"/></summary>
            public static string ComboBoxToggleButtonKey { get { return "ComboBoxToggleButton"; } }

            /// <summary>Represents x:Key="ComboBoxTextBox"/></summary>
            public static string ComboBoxTextBoxKey { get { return "ComboBoxTextBox"; } }

            /// <summary>Represents x:Key="ComboBoxTemplate"/></summary>
            public static string ComboBoxTemplateKey { get { return "ComboBoxTemplate"; } }

            /// <summary>Represents x:Key="TextBoxTemplate"/></summary>
            public static string TextBoxTemplateKey { get { return "TextBoxTemplate"; } }

            /// <summary>Represents x:Key="PopupDropShadow"/></summary>
            public static string PopupDropShadowKey { get { return "PopupDropShadow"; } }

            /// <summary>Represents x:Key="HighlightOn"/></summary>
            public static string HighlightOnKey { get { return "HighlightOn"; } }

            /// <summary>Represents x:Key="HighlightOff"/></summary>
            public static string HighlightOffKey { get { return "HighlightOff"; } }

            /// <summary>Represents x:Key="NuclearSliderThumb"/></summary>
            public static string NuclearSliderThumbKey { get { return "NuclearSliderThumb"; } }

            /// <summary>Represents x:Key="NuclearTreeViewItemToggleButton"/></summary>
            public static string NuclearTreeViewItemToggleButtonKey { get { return "NuclearTreeViewItemToggleButton"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalBackground"/></summary>
            public static string ToolBarHorizontalBackgroundKey { get { return "ToolBarHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonHorizontalBackground"/></summary>
            public static string ToolBarToggleButtonHorizontalBackgroundKey { get { return "ToolBarToggleButtonHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarButtonHover"/></summary>
            public static string ToolBarButtonHoverKey { get { return "ToolBarButtonHover"; } }

            /// <summary>Represents x:Key="ToolBarGripper"/></summary>
            public static string ToolBarGripperKey { get { return "ToolBarGripper"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalOverflowButtonStyle"/></summary>
            public static string ToolBarHorizontalOverflowButtonStyleKey { get { return "ToolBarHorizontalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarSubMenuBackground"/></summary>
            public static string ToolBarSubMenuBackgroundKey { get { return "ToolBarSubMenuBackground"; } }

            /// <summary>Represents x:Key="ToolBarMenuBorder"/></summary>
            public static string ToolBarMenuBorderKey { get { return "ToolBarMenuBorder"; } }

            /// <summary>Represents x:Key="ToolBarThumbStyle"/></summary>
            public static string ToolBarThumbStyleKey { get { return "ToolBarThumbStyle"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonVerticalBackground"/></summary>
            public static string ToolBarToggleButtonVerticalBackgroundKey { get { return "ToolBarToggleButtonVerticalBackground"; } }

            /// <summary>Represents x:Key="ToolBarVerticalOverflowButtonStyle"/></summary>
            public static string ToolBarVerticalOverflowButtonStyleKey { get { return "ToolBarVerticalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarVerticalBackground"/></summary>
            public static string ToolBarVerticalBackgroundKey { get { return "ToolBarVerticalBackground"; } }

            /// <summary>Represents x:Key="BorderGapMaskConverter"/></summary>
            public static string BorderGapMaskConverterKey { get { return "BorderGapMaskConverter"; } }

            /// <summary>Represents x:Key="ListViewItemFocusVisual"/></summary>
            public static string ListViewItemFocusVisualKey { get { return "ListViewItemFocusVisual"; } }

            /// <summary>Represents x:Key="GridViewColumnHeaderGripper"/></summary>
            public static string GridViewColumnHeaderGripperKey { get { return "GridViewColumnHeaderGripper"; } }


    }

}

namespace HedgeHog.Alice.Client.ViewModel.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.ViewModel.MainViewModel"/></summary>
    public static class MainViewModelMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.ViewModel.ViewModelLocator"/></summary>
    public static class ViewModelLocatorMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.ViewModel.ViewModelLocator.Main"/></summary>
        public const string Main = "Main";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.ViewModel.ViewModelLocator.Cleanup"/></summary>
        public const string Cleanup = "Cleanup";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.ViewModel.ViewModelLocator.Main"/></summary>
        public static PropertyPath MainPath { get { return new PropertyPath("Main"); } }

    }

}

#pragma warning enable
// ReSharper restore PossibleNullReferenceException
