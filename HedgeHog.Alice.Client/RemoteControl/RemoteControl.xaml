<UserControl x:Class="HedgeHog.Alice.Client.RemoteControlView"
             xmlns:tlrkInput="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:localModels="clr-namespace:HedgeHog.Alice.Client.Models"             
             mc:Ignorable="d" 
>
  <UserControl.Resources>
    <DataTemplate x:Key="DeleteAccountCellTemplate">
      <Button Content="X" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.DeleteTradingMacroCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
    </DataTemplate>
    <DataTemplate x:Key="InstrumentTemplate">
      <ContentPresenter Content="{Binding Pair}"/>
    </DataTemplate>
    <DataTemplate x:Key="InstrumentEditTemplate">
      <ComboBox ItemsSource="{Binding DataContext.Instruments,Mode=OneWay,RelativeSource={RelativeSource AncestorType=DataGrid}}" SelectedValue="{Binding Pair,Mode=TwoWay}"></ComboBox>
    </DataTemplate>
    <DataTemplate x:Key="BuyCellTemplate">
      <Button Content="Buy" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.BuyCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
    </DataTemplate>
    <DataTemplate x:Key="SellCellTemplate">
      <Button Content="Sell" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.SellCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
    </DataTemplate>

    <DataTemplate x:Key="StopCellTemplate">
      <ContentPresenter HorizontalAlignment="Center" Content="{Binding Stop}"/>
    </DataTemplate>
    <DataTemplate x:Key="StopCellEditTemplate">
      <tlrkInput:RadNumericUpDown Value="{Binding Stop,Mode=TwoWay}" />
    </DataTemplate>
    <DataTemplate x:Key="LimitBarCellTemplate">
      <ContentPresenter HorizontalAlignment="Center" Content="{Binding LimitBar}"/>
    </DataTemplate>
    <DataTemplate x:Key="NetCellTemplate">
      <Label HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Background="{Binding Net,Converter={StaticResource ProfitToColorConverter}}">
        <WrapPanel>
          <TextBlock Text="{Binding Net,StringFormat=c1}"/>
          <TextBlock Text="{Binding CurrentLot,StringFormat=/{0:n0}}"/>
        </WrapPanel>
      </Label>
    </DataTemplate>
    <DataTemplate x:Key="LossCellTemplate">
      <Label Content="{Binding CurrentLoss}" ContentStringFormat="c0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Background="{Binding CurrentLoss,Converter={StaticResource ProfitToColorConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="LossEditCellTemplate">
      <TextBox Text="{Binding CurrentLoss}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right"  />
    </DataTemplate>
    <DataTemplate x:Key="CloseCellTemplate">
      <Button Content="Close" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.ClosePairCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
    </DataTemplate>
    <DataTemplate x:Key="ReverseCellTemplate">
      <Button Content="Reverse" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.ReversePairCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
    </DataTemplate>
    <DataTemplate x:Key="OverlapCellTemplate">
      <Label HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Background="{Binding AngleInRadians,Converter={StaticResource DoubleToColorConverter},ConverterParameter=Transparent|LightSalmon|LightGreen}" />
    </DataTemplate>
    <ObjectDataProvider MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}"
                        x:Key="FreezeValues">
      <ObjectDataProvider.MethodParameters>
        <x:Type TypeName="localModels:Freezing" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
  </UserControl.Resources>
    <Grid>
    <DataGrid ItemsSource="{Binding TradingMacros}" AutoGenerateColumns="False" EnableRowVirtualization="False" KeyDown="DataGrid_KeyDown">
      <DataGrid.Columns>
        <DataGridTemplateColumn CellTemplate="{StaticResource DeleteAccountCellTemplate}"/>
        <DataGridTemplateColumn Header="Pair" CellTemplate="{StaticResource InstrumentTemplate}" CellEditingTemplate="{StaticResource InstrumentEditTemplate}"/>
        <DataGridTextColumn Header="Ratio" Binding="{Binding TradingRatio,Mode=TwoWay}" />
        <DataGridTemplateColumn CellTemplate="{StaticResource BuyCellTemplate}"></DataGridTemplateColumn>
        <DataGridTemplateColumn CellTemplate="{StaticResource LossCellTemplate}" CellEditingTemplate="{StaticResource LossEditCellTemplate}">
          <DataGridTemplateColumn.Header>
            <WrapPanel>
              <TextBlock>Loss</TextBlock>
              <Button Content="x" Command="{Binding DataContext.ClearCurrentLossCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" Margin="2,-4,0,-4"/>
            </WrapPanel>
          </DataGridTemplateColumn.Header>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Net" CellTemplate="{StaticResource NetCellTemplate}" />
        <DataGridTextColumn Header="L ∑" Binding="{Binding LimitAmount,StringFormat=c1}" IsReadOnly="True"/>
        <DataGridTemplateColumn CellTemplate="{StaticResource SellCellTemplate}"></DataGridTemplateColumn>
        <DataGridTemplateColumn CellTemplate="{StaticResource CloseCellTemplate}"></DataGridTemplateColumn>
        <DataGridTemplateColumn CellTemplate="{StaticResource ReverseCellTemplate}"></DataGridTemplateColumn>

        <!--<DataGridTextColumn Header="LB" Binding="{Binding BalanceOnLimit,StringFormat=c0}" IsReadOnly="True"/>
        <DataGridTextColumn Header="S ∑" Binding="{Binding StopAmount,StringFormat=c1}" IsReadOnly="True"/>
        <DataGridTextColumn Header="SB" Binding="{Binding BalanceOnStop,StringFormat=c0}" IsReadOnly="True"/>-->

        <DataGridTemplateColumn Header="Ŧ" IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <WrapPanel>
                <TextBlock Text="{Binding Corridornes,StringFormat=p0}" />
                <TextBlock Text="{Binding CorridorMinutes,StringFormat=/{0:n0}}" />
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTextColumn Header="C*R" Binding="{Binding CorridorRatio}" />
        <DataGridTextColumn Header="L=" Binding="{Binding Limit,StringFormat=n1}" IsReadOnly="True"/>
        <DataGridTextColumn Header="BSŦ" Binding="{Binding BuyStopByCorridor,StringFormat=n1}" IsReadOnly="True"/>
        <DataGridTextColumn Header="SSŦ" Binding="{Binding SellStopByCorridor,StringFormat=n1}" IsReadOnly="True"/>
        <DataGridTextColumn Header="Fib" Binding="{Binding CorridorFib,StringFormat=n2}" IsReadOnly="True"/>
        <!--<DataGridTextColumn Header="OL#" Binding="{Binding OverlapToStop}" />
        <DataGridTemplateColumn Header="&lt;&gt;" IsReadOnly="True" CellTemplate="{StaticResource OverlapCellTemplate}"/>-->
        <DataGridTemplateColumn Header="OL"  IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <WrapPanel>
                <TextBlock Text="{Binding Overlap}"/>
                <TextBlock Text="{Binding Overlap5,StringFormat=/{0:n0}}"/>
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTextColumn Header="$/Lot" Binding="{Binding LotSize,Mode=OneWay}" IsReadOnly="True" />
        <DataGridComboBoxColumn Header="FZ" SelectedValueBinding="{Binding FreezeType}" ItemsSource="{Binding Source={StaticResource FreezeValues}}" />
        <DataGridCheckBoxColumn Header="FS" Binding="{Binding FreezStop}" />
        <DataGridCheckBoxColumn Header="ROP" Binding="{Binding ReverseOnProfit}" ToolTipService.ToolTip="Reverse on profit" />
        <DataGridTextColumn Header="RateTime" Binding="{Binding LastRateTime,StringFormat=HH:mm}" IsReadOnly="True"/>
      </DataGrid.Columns>
    </DataGrid>

  </Grid>
</UserControl>
