<UserControl x:Class="HedgeHog.Alice.Client.RemoteControlView"
             xmlns:tlrkInput="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:localModels="clr-namespace:HedgeHog.Alice.Client.Models"             
             mc:Ignorable="d" 
>
  <UserControl.Resources>
    <DataTemplate x:Key="DeleteAccountCellTemplate">
      <Button Content="X" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.DeleteTradingMacroCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
    </DataTemplate>
    <DataTemplate x:Key="InstrumentTemplate">
      <WrapPanel>
        <WrapPanel.ToolTip>
          <ToolTip>
            <TextBlock>
                <TextBlock FontWeight="Black">Maximum Positions:</TextBlock>
                <TextBlock Text="{Binding MaximumPositions}"></TextBlock>
              </TextBlock>
          </ToolTip>
        </WrapPanel.ToolTip>
        <TextBlock Text="{Binding Currency1}"/>
        <TextBlock Text="{Binding Correlation1,StringFormat=',{0:n1}'}" ToolTip="Correlation 1"/>
        <TextBlock>/</TextBlock>
        <TextBlock Text="{Binding Currency2}"/>
        <TextBlock Text="{Binding Correlation2,StringFormat=',{0:n1}'}" ToolTip="Correlation 2"/>
      </WrapPanel>
    </DataTemplate>
    <DataTemplate x:Key="InstrumentEditTemplate">
      <WrapPanel>
        <TextBox Text="{Binding PairIndex}" ToolTip="Pair Index"/>
        <ComboBox ItemsSource="{Binding DataContext.Instruments,Mode=OneWay,RelativeSource={RelativeSource AncestorType=DataGrid}}" SelectedValue="{Binding Pair,Mode=TwoWay}"></ComboBox>
        <TextBox Text="{Binding MaximumPositions}" ToolTip="Maximum Positions"/>
      </WrapPanel>
    </DataTemplate>
    <DataTemplate x:Key="BuyCellTemplate">
      <Button Content="{Binding LotSizeByLoss}" CommandParameter="{Binding BindsDirectlyToSource=True}"
            Command="{Binding DataContext.BuyCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
        <Button.ContentTemplate>
          <DataTemplate>
            <TextBlock Text="{Binding StringFormat=c0}"/>
          </DataTemplate>
        </Button.ContentTemplate>
      </Button>
    </DataTemplate>
    <DataTemplate x:Key="SellCellTemplate">
      <Button Content="{Binding LotSizeByLoss}" CommandParameter="{Binding BindsDirectlyToSource=True}"
            Command="{Binding DataContext.SellCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
        <Button.ContentTemplate>
          <DataTemplate>
            <TextBlock Text="{Binding StringFormat=c0}"/>
          </DataTemplate>
        </Button.ContentTemplate>
      </Button>
    </DataTemplate>

    <DataTemplate x:Key="StopCellTemplate">
      <ContentPresenter HorizontalAlignment="Center" Content="{Binding Stop}"/>
    </DataTemplate>
    <DataTemplate x:Key="StopCellEditTemplate">
      <tlrkInput:RadNumericUpDown Value="{Binding Stop,Mode=TwoWay}" />
    </DataTemplate>
    <DataTemplate x:Key="LimitBarCellTemplate">
      <ContentPresenter HorizontalAlignment="Center" Content="{Binding LimitBar}"/>
    </DataTemplate>
    <DataTemplate x:Key="NetCellTemplate">
      <Label HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Background="{Binding Net,Converter={StaticResource ProfitToColorConverter}}">
        <WrapPanel>
          <TextBlock Text="{Binding Net,StringFormat=c1}"/>
          <TextBlock Text="{Binding Positions,StringFormat=/{0}}"/>
          <TextBlock Text="{Binding CurrentLot,StringFormat=/{0:n0}}"/>
        </WrapPanel>
      </Label>
    </DataTemplate>
    <DataTemplate x:Key="LossCellTemplate">
      <Label HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" VerticalContentAlignment="Stretch" Background="{Binding CurrentLoss,Converter={StaticResource ProfitToColorConverter}}" >
        <WrapPanel>
          <TextBlock Text="{Binding CurrentLoss,StringFormat=c1}"  />
          <TextBlock Text="{Binding CurrentLossPercent,StringFormat=/{0:p2}}"  />
        </WrapPanel>
      </Label>
    </DataTemplate>
    <DataTemplate x:Key="LossEditCellTemplate">
      <TextBox Text="{Binding CurrentLoss}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right"  />
    </DataTemplate>
    <DataTemplate x:Key="CloseCellTemplate">
      <Button Content="Close" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.ClosePairCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
    </DataTemplate>
    <DataTemplate x:Key="ReverseCellTemplate">
      <Button Content="Reverse" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.ReversePairCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
    </DataTemplate>
    <DataTemplate x:Key="OverlapCellTemplate">
      <Label HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Background="{Binding AngleInRadians,Converter={StaticResource DoubleToColorConverter},ConverterParameter=Transparent|LightSalmon|LightGreen}" />
    </DataTemplate>
    <DataTemplate x:Key="TakeProfitPipsCellTemplate">
        <WrapPanel>
          <TextBlock Text="{Binding CorridorRatio}"/>
          <TextBlock Text="{Binding TakeProfitPips,StringFormat=/{0:n1}}"/>
        </WrapPanel>
    </DataTemplate>
    <DataTemplate x:Key="TakeProfitPipsEditCellTemplate">
      <TextBox Text="{Binding CorridorRatio}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right"  />
    </DataTemplate>
    <ObjectDataProvider MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}"
                        x:Key="FreezeValues">
      <ObjectDataProvider.MethodParameters>
        <x:Type TypeName="localModels:Freezing" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}"
                        x:Key="CorridorCalculationValues">
      <ObjectDataProvider.MethodParameters>
        <x:Type TypeName="localModels:CorridorCalculationMethod" />
      </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <Style TargetType="{x:Type DataGridCell}" x:Key="PapayaWhipBackgroundStyle">
      <Setter Property="Background" Value="PapayaWhip"></Setter>
      <Setter Property="Foreground" Value="Black"></Setter>
    </Style>
  </UserControl.Resources>
    <Grid>
    <DataGrid ItemsSource="{Binding TradingMacros}" AutoGenerateColumns="False" EnableRowVirtualization="False" KeyDown="DataGrid_KeyDown">
      <DataGrid.Columns>
        <DataGridTemplateColumn CellTemplate="{StaticResource DeleteAccountCellTemplate}"/>
        <DataGridTextColumn Header="G" Binding="{Binding TradingGroup}"/>
        <DataGridTemplateColumn Header="Pair" CellTemplate="{StaticResource InstrumentTemplate}" CellEditingTemplate="{StaticResource InstrumentEditTemplate}"/>
        <DataGridTextColumn Header="R" Binding="{Binding TradingRatio,Mode=TwoWay}" />
        <DataGridTemplateColumn CellTemplate="{StaticResource LossCellTemplate}" CellEditingTemplate="{StaticResource LossEditCellTemplate}">
          <DataGridTemplateColumn.Header>
            <WrapPanel>
              <TextBlock>Loss</TextBlock>
              <Button Content="x" Command="{Binding DataContext.ClearCurrentLossCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" Margin="2,-4,0,-4"/>
            </WrapPanel>
          </DataGridTemplateColumn.Header>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Net" CellTemplate="{StaticResource NetCellTemplate}" />
        <DataGridTextColumn Header="L ∑" Binding="{Binding LimitAmount,StringFormat=c1}" IsReadOnly="True"/>
        <DataGridTemplateColumn CellTemplate="{StaticResource CloseCellTemplate}"></DataGridTemplateColumn>
        <DataGridTemplateColumn CellTemplate="{StaticResource ReverseCellTemplate}" Visibility="Collapsed"></DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Buy" CellTemplate="{StaticResource BuyCellTemplate}"></DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Sell" CellTemplate="{StaticResource SellCellTemplate}"></DataGridTemplateColumn>

        <!--<DataGridTextColumn Header="LB" Binding="{Binding BalanceOnLimit,StringFormat=c0}" IsReadOnly="True"/>
        <DataGridTextColumn Header="S ∑" Binding="{Binding StopAmount,StringFormat=c1}" IsReadOnly="True"/>
        <DataGridTextColumn Header="SB" Binding="{Binding BalanceOnStop,StringFormat=c0}" IsReadOnly="True"/>-->

        <DataGridTemplateColumn Header="Ŧ" Visibility="Collapsed">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <WrapPanel Background="{Binding IsCorridornessOk,Converter={StaticResource BoolToColorConverter},ConverterParameter=Transparent|LightPink|LightGreen}">
                <TextBlock Text="{Binding CorridorStats.StartDate,StringFormat='HH:mm'}">
        <TextBlock.ToolTip>
          <ToolTip>
            <TextBlock>
              <TextBlock FontWeight="Black">Limit:</TextBlock>
              <TextBlock Text="{Binding CorridorStats.StartDate,StringFormat='d HH:mm'}"/>
              <LineBreak/>
              <TextBlock FontWeight="Black">Distance:</TextBlock>
              <TextBlock Text="{Binding CorridorStatsForTradeDistance.StartDate,StringFormat='d HH:mm'}"/>
            </TextBlock>
          </ToolTip>
        </TextBlock.ToolTip>
                </TextBlock>
                <TextBlock Text="{Binding Corridornes,StringFormat=[{0:p0}}" FontWeight="Black" />
                <TextBlock Text="{Binding CorridornessMin,StringFormat='&gt;{0:p0}]'}" />
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
          <DataGridTemplateColumn.CellEditingTemplate>
            <DataTemplate>
              <TextBox Text="{Binding CorridornessMin}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellEditingTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="C*R" CellTemplate="{StaticResource TakeProfitPipsCellTemplate}" CellEditingTemplate="{StaticResource TakeProfitPipsEditCellTemplate}" Visibility="Collapsed" />
        <DataGridTemplateColumn Header="L=" CellStyle="{StaticResource PapayaWhipBackgroundStyle}">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <WrapPanel>
                <TextBlock Text="{Binding TradeDistance,StringFormat=n1}" ToolTip="Trade Distance"/>
                <TextBlock Text="{Binding TakeProfitPips,StringFormat=/{0:n1}}" ToolTip="Take Profit"/>
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
          <DataGridTemplateColumn.CellEditingTemplate>
            <DataTemplate>
              <TextBox Text="{Binding CorridorRatio}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" ToolTip="Corridor to Corridor Ratio" />
            </DataTemplate>
          </DataGridTemplateColumn.CellEditingTemplate>
        </DataGridTemplateColumn>
        <DataGridTextColumn Header="BSŦ" Binding="{Binding BuyStopByCorridor,StringFormat=n1}" IsReadOnly="True"/>
        <DataGridTextColumn Header="SSŦ" Binding="{Binding SellStopByCorridor,StringFormat=n1}" IsReadOnly="True"/>
        <DataGridTemplateColumn Header="Fib" CellStyle="{StaticResource PapayaWhipBackgroundStyle}">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <WrapPanel>
                <TextBlock Text="{Binding FibMin,StringFormat=n1}"></TextBlock>
                <TextBlock Text="{Binding CorridorFibInstant,StringFormat=&lt;[{0:n1}]}"></TextBlock>
                <TextBlock Text="{Binding CorridorFib,StringFormat=n1}" FontWeight="Black"
                           Background="{Binding TradeSignal,Converter={StaticResource ProfitToColorConverter},ConverterParameter=Transparent|Pink|LightGreen}"
                           Foreground="{Binding CorridorFib,Converter={StaticResource ProfitToColorConverter},ConverterParameter=Black|DarkGreen|DarkRed}"
                           ></TextBlock>
                <TextBlock Text="{Binding CorridorFibAverage,StringFormat=[{0:n1}]&lt;}"></TextBlock>
                <TextBlock Text="{Binding FibMax,StringFormat=n1}"></TextBlock>
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
          <DataGridTemplateColumn.CellEditingTemplate>
            <DataTemplate>
              <WrapPanel>
                <TextBox Text="{Binding FibMin}" ToolTip="Fibonacci Minimum"/>
                <TextBox Text="{Binding FibMax}" ToolTip="Fibonacci Maximum"/>
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellEditingTemplate>
        </DataGridTemplateColumn>
        <!--<DataGridTextColumn Header="OL#" Binding="{Binding OverlapToStop}" />
        <DataGridTemplateColumn Header="&lt;&gt;" IsReadOnly="True" CellTemplate="{StaticResource OverlapCellTemplate}"/>-->
        <DataGridTemplateColumn>
          <DataGridTemplateColumn.Header>
            <TextBlock ToolTip="Ticks Per Minute">TPM</TextBlock>
          </DataGridTemplateColumn.Header>
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <WrapPanel>
                <TextBlock Text="{Binding TicksPerMinuteInstant,StringFormat=[{0:n0}]}"/>
                <TextBlock Text="{Binding TicksPerMinute,StringFormat=n0}"/>
                <TextBlock Text="{Binding TicksPerMinuteAverage,StringFormat=[{0:n0}]}"/>
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="CI">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <WrapPanel>
                <TextBlock Text="{Binding CorridorStats.Iterations}"/>
                <TextBlock>/</TextBlock>
                <TextBlock Text="{Binding CorridorStatsForTradeDistance.Iterations}"/>
                <TextBlock Text="{Binding CorridorIterationsTrade,StringFormat=[{0}]}" ToolTip="Current Iterations"/>
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
          <DataGridTemplateColumn.CellEditingTemplate>
            <DataTemplate>
              <WrapPanel>
                <TextBox Text="{Binding CorridorIterationsIn}"/>
                <TextBox Text="{Binding CorridorIterationsOut}"/>
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellEditingTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="OL"  IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <WrapPanel>
                <TextBlock Text="{Binding Overlap}"/>
                <TextBlock Text="{Binding Overlap5,StringFormat=/{0:n0}}"/>
                <TextBlock Text="{Binding SlackInPips,StringFormat=[{0:n1}]}"/>
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="$/Lot" IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Label Margin="0">
                <StackPanel Orientation="Horizontal">
                  <TextBlock Text="{Binding LotSize,StringFormat=c0}"></TextBlock>
                  <TextBlock Text="{Binding LotSizePercent,StringFormat=/{0:p2}}"></TextBlock>
                </StackPanel>
              </Label>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridComboBoxColumn SelectedValueBinding="{Binding CorridorCalcMethod}" ItemsSource="{Binding Source={StaticResource CorridorCalculationValues}}" />

        <DataGridComboBoxColumn Header="FZ" SelectedValueBinding="{Binding FreezeType}" ItemsSource="{Binding Source={StaticResource FreezeValues}}" />
        <DataGridComboBoxColumn Header="FS" SelectedValueBinding="{Binding FreezeStopType}" ItemsSource="{Binding Source={StaticResource FreezeValues}}" />
        <DataGridCheckBoxColumn Header="ROP" Binding="{Binding ReverseOnProfit}" ToolTipService.ToolTip="Reverse on profit" />
        <DataGridTemplateColumn Header="RateTime">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding LastRateTime,StringFormat=HH:mm}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
          <DataGridTemplateColumn.CellEditingTemplate>
            <DataTemplate>
              <TextBox Text="{Binding CorridorBarMinutes}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellEditingTemplate>
        </DataGridTemplateColumn>
      </DataGrid.Columns>
    </DataGrid>

  </Grid>
</UserControl>
