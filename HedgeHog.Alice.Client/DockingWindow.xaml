<Window x:Class="HedgeHog.Alice.Client.DockingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:telerikDocking="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Docking"
        xmlns:state="clr-namespace:WpfPersist;assembly=Persistance"
        xmlns:u="clr-namespace:HedgeHog.UI;assembly=HedgeHog.UI"
        xmlns:ui="clr-namespace:HedgeHog.Alice.Client.UI.Controls"
        xmlns:hhmu="clr-namespace:HedgeHog.Markup;assembly=HedgeHog.Lib"
        xmlns:charter="clr-namespace:HedgeHog;assembly=HedgeHog.Charter"
        xmlns:l="clr-namespace:HedgeHog.Alice.Client"
        xmlns:hh="clr-namespace:HedgeHog;assembly=HedgeHog.Lib"
        Left="{state:UserSettings Default=100}" Top="{state:UserSettings Default=100}"
        Height="{state:UserSettings Default=200}" Width="{state:UserSettings Default=500}"
        >
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="UI/TradesOnServer.xaml"/>
      </ResourceDictionary.MergedDictionaries>
      <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="FontWeight" Value="Black"/>
      </Style>
      <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
        <Setter Property="Padding" Value="0" />
      </Style>
      <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontWeight" Value="Black"/>
      </Style>
      <DataTemplate x:Key="StopCellEditTemplate">
        <telerik:RadNumericUpDown Value="{Binding Stop,Mode=TwoWay}" />
      </DataTemplate>
      <DataTemplate x:Key="GrossCellTemplate">
        <!--<Label Content="{Binding GrossPL,StringFormat=c0}" ContentStringFormat="c0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Background="{Binding GrossPL,Converter={StaticResource DoubleToColorConverter},ConverterParameter=Transparent|LightSalmon|LightGreen}" />-->
        <Label Content="{Binding GrossPL,StringFormat=c0}" ContentStringFormat="c0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
      </DataTemplate>

      <!--TradesOnServer-->
      <DataTemplate x:Key="TradesOnServer">
        <ScrollViewer Background="#FFF7F3F7">
          <StackPanel Background="#FFF7F3F7">
          <StackPanel.Resources>
            <!--<Style TargetType="DataGrid" BasedOn="{StaticResource ReadOnlyDataGridStyle}"/>-->
          </StackPanel.Resources>
          <Button Command="{Binding CloseAllServerTradesCommand}" HorizontalAlignment="Left">Close All</Button>
          <!--Server Trades-->
            <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding ServerTradesList}" Style="{StaticResource ReadOnlyDataGridStyle}" FontWeight="Black" Background="#FFF7F3F7">
            <DataGrid.Columns>
              <DataGridTemplateColumn CellTemplate="{StaticResource CloseServerTradeTemplate}" Header="Id"/>
              <DataGridTextColumn Header="Pair" Binding="{Binding Pair}"/>
              <DataGridTextColumn Header="Time" Binding="{Binding Time,StringFormat='dd HH:mm:ss'}"/>
              <DataGridTextColumn Header="Lots" Binding="{Binding Lots}"/>
              <DataGridTextColumn Header="B/S"  Binding="{Binding Buy,Converter={StaticResource BoolToSrtingConverter},ConverterParameter=|S|B}">
                <DataGridTextColumn.ElementStyle>
                  <Style TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                  </Style>
                </DataGridTextColumn.ElementStyle>
              </DataGridTextColumn>
              <DataGridTemplateColumn Header="Stop" >
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
                        Command="{Binding DataContext.DecreaseStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                      <TextBlock Text="{Binding StopInPips,StringFormat=n1}" HorizontalAlignment="Stretch"/>
                      <TextBlock Text="{Binding StopToCloseInPips,StringFormat=/{0:n1}}" HorizontalAlignment="Stretch"/>
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
                        Command="{Binding DataContext.EncreaseStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                    </StackPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="S ∑" Binding="{Binding StopAmount,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="S ∑∑" Binding="{Binding UnKnown.BalanceOnStop,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTemplateColumn Header="Limit" >
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" 
                        Command="{Binding DataContext.DecreaseLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                      <TextBlock Text="{Binding LimitInPips,StringFormat=n1}" HorizontalAlignment="Stretch" />
                      <TextBlock Text="{Binding LimitToCloseInPips,StringFormat=/{0:n1}}" HorizontalAlignment="Stretch" />
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" 
                        Command="{Binding DataContext.IncreaseLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                    </StackPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="L ∑" Binding="{Binding LimitAmount,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="L ∑∑" Binding="{Binding UnKnown.BalanceOnLimit,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="Pips" Binding="{Binding PL,StringFormat=n1}">
                <DataGridTextColumn.CellStyle>
                  <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background" Value="{Binding PL,Converter={StaticResource ProfitToColorConverter}}"/>
                  </Style>
                </DataGridTextColumn.CellStyle>
              </DataGridTextColumn>
              <DataGridTemplateColumn Header="$$$" CellTemplate="{StaticResource GrossCellTemplate}"/>
            </DataGrid.Columns>
          </DataGrid>
        </StackPanel>
        </ScrollViewer>
      </DataTemplate>
      <DataTemplate x:Key="OrdersOnServer">
        <!--Server Orders-->
        <Grid Background="#FFF7F3F7">
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding OrdersList}" Style="{StaticResource ReadOnlyDataGridStyle}" FontWeight="Black" VerticalScrollBarVisibility="Auto" Background="#FFF7F3F7">
            <DataGrid.ColumnHeaderStyle>
              <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                <Setter Property="FontWeight" Value="Black"/>
              </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Columns>
              <DataGridTemplateColumn>
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Cancel Order" Content="X"
                        Command="{Binding DataContext.CancelEntryOrderCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="Pair" Binding="{Binding Pair}"/>
              <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
              <DataGridTextColumn Header="BS" Binding="{Binding BS}"/>
              <DataGridTemplateColumn Header="Rate">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <WrapPanel>
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
                        Command="{Binding DataContext.DecreaseEntryRateCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                      <ContentControl Content="{Binding PipsTillRate}" ContentStringFormat="n1"/>
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
                        Command="{Binding DataContext.IncreaseEntryRateCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                    </WrapPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="Lot" Binding="{Binding Lot}"/>
              <DataGridTemplateColumn Header="Stop">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <WrapPanel Background="LightSalmon">
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
                        Command="{Binding DataContext.DecreaseEntryStopCommandCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>

                      <TextBlock Text="{Binding StopInPips,StringFormat=n1}"/>
                      <TextBlock Text="{Binding StopAmount,StringFormat=[{0:c1}}"/>
                      <!--<TextBlock Text="{Binding UnKnown.PercentOnStop,StringFormat=/{0:p1}}"/>
                      <TextBlock Text="{Binding UnKnown.BalanceOnStop,StringFormat=/{0:c0}]}"/>-->
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
                        Command="{Binding DataContext.IncreaseEntryStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                    </WrapPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn Header="L->$0">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Button Content="{Binding UnKnown.NoLossLimit}" ContentStringFormat="n1"
                            CommandParameter="{Binding BindsDirectlyToSource=True}" 
                            Command="{Binding DataContext.SetOrderToNoLossCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn Header="Limit">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <WrapPanel Background="LightGreen">
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
                        Command="{Binding DataContext.DecreaseEntryLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                      <TextBlock Text="{Binding LimitInPips,StringFormat=n1}"/>
                      <TextBlock Text="{Binding LimitAmount,StringFormat=[{0:c1}}"/>
                      <!--<TextBlock Text="{Binding UnKnown.PercentOnLimit,StringFormat=/{0:p1}}"/>
                      <TextBlock Text="{Binding UnKnown.BalanceOnLimit,StringFormat=/{0:c0}]}"/>-->
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
                        Command="{Binding DataContext.IncreaseEntryLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                    </WrapPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>

              <DataGridTextColumn Header="FixStatus" Binding="{Binding Status}" Visibility="Collapsed"/>
              <DataGridTextColumn Header="Type" Binding="{Binding Type}" Visibility="Collapsed"/>
              <DataGridTextColumn Header="Time" Binding="{Binding Time,StringFormat='dd HH:mm:ss'}"/>
              <DataGridTextColumn Header="OrderId" Binding="{Binding OrderID}"/>
              <DataGridTextColumn Header="QTXT" Binding="{Binding QTXT}" Visibility="Collapsed"/>
            </DataGrid.Columns>
          </DataGrid>
        </Grid>
      </DataTemplate>
      
      <DataTemplate x:Key="DeleteAccountCellTemplate">
        <Button Content="X" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.DeleteTradingAccountCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
      </DataTemplate>

      <DataTemplate x:Key="CloseServerTradeTemplate">
        <Button Content="{Binding Id}" CommandParameter="{Binding Id}"
            Command="{Binding DataContext.CloseServerTradeCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
      </DataTemplate>
      <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="Background" Value="#FFF7F3F7"/>
      </Style>
    </ResourceDictionary>
  </Window.Resources>
	<!-- DockSite -->
  <telerik:RadDocking Name="RootVisual" Background="{Binding IsLoggedIn,Converter={StaticResource ProfitToColorConverter}}">
    <telerik:RadDocking.DocumentHost>
      <telerik:RadSplitContainer Orientation="Vertical">
        <telerik:RadPaneGroup SelectedIndex="{state:UserSettings}">
          <telerik:RadPane Header="Log" Title="Log" CanUserClose="False" telerik:RadDocking.SerializationTag="Log" Name="Log">
            <telerik:RadPane.ContentTemplate>
              <DataTemplate>
                <ScrollViewer Name="LogContainer" DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource TemplatedParentDataContextConverter}}">
                  <Label Content="{Binding LogText}" BorderBrush="Red" BorderThickness="1" VerticalAlignment="Bottom"></Label>
                </ScrollViewer>
              </DataTemplate>
            </telerik:RadPane.ContentTemplate>
          </telerik:RadPane>
          <telerik:RadPane Header="Master" IsSelected="{state:UserSettings Default=true}" Title="Master Title" telerik:RadDocking.SerializationTag="RadPaneMain" Name="MasterPanel" CanUserClose="False">
            <WrapPanel>
        <u:TextBox2 Text2="{Binding DatabasePath,Mode=TwoWay}" Text="{state:UserSettings}" Name="DatabasePath" MinWidth="30" MaxWidth="100" />
        <Button Command="{Binding OpenDataBaseCommand}" Content="Database">
          <Button.ToolTip>
            <ToolTip>
              <TextBlock Text="{Binding DatabasePath}"/>
            </ToolTip>
          </Button.ToolTip>
        </Button>
        <ComboBox SelectedValue="{Binding TradingAccount}" SelectedIndex="{state:UserSettings Default=0}" Name="TradingAccount" ItemsSource="{Binding TradingAccounts}" />
        <Label ToolTip="Virtual Trading">VT:</Label>
        <u:CheckBox2 IsChecked2="{Binding IsInVirtualTrading,Mode=TwoWay}" IsChecked="{state:UserSettings}" Name="chkVT"/>
        <u:TextBox2 Text2="{Binding VirtualDateStart,Mode=TwoWay,FallbackValue='1/1/2000'}" Text="{state:UserSettings Default='1/1/2000'}" Name="VitrualDateStart" MinWidth="30" />
        <u:TextBox2 Text2="{Binding VirtualMonthsToTest,Mode=TwoWay,FallbackValue=0}" Text="{state:UserSettings Default=0}" Name="VitrualMonthsToTest" MinWidth="20" />
        <u:TextBox2 Text2="{Binding VirtualDelay,Mode=TwoWay,FallbackValue=0}" Text="{state:UserSettings Default=0}" Name="VitrualDekay" MinWidth="20" />
        <Button Command="{Binding StepBackCommand}" Content="_&lt;&lt;"></Button>
        <u:CheckBox2 IsChecked2="{Binding VirtualPause,Mode=TwoWay}" IsChecked="{state:UserSettings Default=true}" Name="chkVP" Content="_Pause"/>
        <Button Command="{Binding StepForwardCommand}" Content=">_>"></Button>
        <CheckBox IsChecked="{Binding VirtualClearTest,Mode=TwoWay}" Name="chkClearTest" ToolTip="Clear Previouse Test Results"/>
        <Button Command="{Binding BackTestCommand}">Test</Button>
        <Button Command="{Binding ReportCommand}">Report</Button>
        <Button Command="{Binding LoadHistoryCommand}">History</Button>
        <TextBlock>Status:</TextBlock>
        <TextBlock Text="{Binding SessionStatus}"/>
        
        <TextBlock Visibility="Collapsed">
        <TextBlock>Server:</TextBlock>
        <u:TextBox2 MinWidth="50" Text2="{Binding ServerAddress,Mode=TwoWay}" Text="{state:UserSettings Default=localhost:9200/}" x:Name="ServerAddress"/>
        <Label Content="{Binding ServerTime}" ContentStringFormat="HH:mm:ss" ToolTip="Server Time" VerticalContentAlignment="Center" VerticalAlignment="Center" BorderBrush="Gray" BorderThickness="1"/>
        <ComboBox SelectedValue="{Binding AliceMode,Mode=TwoWay}" SelectedIndex="{state:UserSettings Default=0}" ItemsSource="{hhmu:EnumValues l:AliceModes}" Name="AliceMode"/>
        <Button Command="{Binding OpenNewServerAccountCommand}">New Rabbit</Button>
        <Button Command="{Binding AddNewSlaveAccountCommand}">Add Alice</Button>
        </TextBlock>
        
      </WrapPanel>
          </telerik:RadPane>
          <telerik:RadPane IsSelected="{state:UserSettings}" Name="AccountsManager" Title="Accounts" telerik:RadDocking.SerializationTag="AccountsManager" CanUserClose="False">
            <AdornerDecorator>
              <StackPanel>
                <!--Slave Account Infos-->
                <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding TradingAccountsList}">
                  <DataGrid.Columns>
                    <DataGridTemplateColumn CellTemplate="{StaticResource DeleteAccountCellTemplate}"></DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                      <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                          <WrapPanel>
                            <TextBlock>Account</TextBlock>
                            <Button Content="{Binding DataContext.ShowAllAccountsFilter,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel},Converter={StaticResource BoolToSrtingConverter},ConverterParameter=+|+|-}" 
                              Command="{Binding DataContext.ToggleShowAllAccountsCommand,RelativeSource={RelativeSource Mode=FindAncestor,  AncestorType=StackPanel}}"
                              />
                          </WrapPanel>
                        </DataTemplate>
                      </DataGridTemplateColumn.HeaderTemplate>
                      <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                          <Button Content="{Binding AccountId}"
                              Command="{Binding DataContext.LoginCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
                              CommandParameter="{Binding BindsDirectlyToSource=True}"
                              />
                        </DataTemplate>
                      </DataGridTemplateColumn.CellTemplate>
                      <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                          <TextBox Text="{Binding AccountId}"/>
                        </DataTemplate>
                      </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding Path=Password}" Header="Password" Foreground="Transparent" />
                    <DataGridCheckBoxColumn Binding="{Binding Path=IsDemo}" Header="Demo" Width="SizeToHeader" />
                    <DataGridTextColumn Binding="{Binding Path=Commission}" Header="C$" />
                    <DataGridTextColumn Binding="{Binding Path=TradeRatio}" Header="M:S" ToolTipService.ToolTip="Trade Ratio" />
                    <DataGridCheckBoxColumn Binding="{Binding Path=IsMaster}" Header="Master" Width="SizeToHeader" />
                    <DataGridCheckBoxColumn Binding="{Binding Path=IsActive}" Header="Active" Width="SizeToHeader" />
                    <DataGridTemplateColumn Header="Case">
                      <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                          <ContentControl Content="{Binding TradingMacroName}"/>
                        </DataTemplate>
                      </DataGridTemplateColumn.CellTemplate>
                      <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                          <ComboBox SelectedItem="{Binding Path=TradingMacroName}" ItemsSource="{Binding DataContext.TradingMacrosCases,RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                        </DataTemplate>
                      </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding Path=EntityState}" Header="State" />
                    <DataGridTextColumn Binding="{Binding Path=Id}" Header="Id" />
                  </DataGrid.Columns>
                </DataGrid>
                <Button Command="{Binding SaveTradingSlavesCommand}">Save</Button>
              </StackPanel>
            </AdornerDecorator>
          </telerik:RadPane>
          <telerik:RadPane IsSelected="{state:UserSettings}" Header="Trading Macros" Title="Trading Macros" Name="TradingMacros" telerik:RadDocking.SerializationTag="TradingMacros" CanUserClose="False">
            <Grid Background="#FFF7F3F7">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <ui:AccountInfo DataContext="{Binding ServerAccountRow}"/>
              <l:RemoteControlView Grid.Row="1"/>
            </Grid>
          </telerik:RadPane>
          <telerik:RadPane IsSelected="{state:UserSettings}" Header="Opened Trades" Title="Opened Trades" telerik:RadDocking.SerializationTag="OpenedTrades" Name="OpenedTrades" ContentTemplate="{StaticResource TradesOnServer}" Content="{Binding}" CanUserClose="False" />
          <telerik:RadPane IsSelected="{state:UserSettings}" Header="Opened Orders" Title="Opened Orders" telerik:RadDocking.SerializationTag="OpenedOrders" Name="OpenedOrders" ContentTemplate="{StaticResource OrdersOnServer}" Content="{Binding}" CanUserClose="False"/>
        </telerik:RadPaneGroup>
        <telerik:RadSplitContainer Name="ChartsSplitter" Orientation="Horizontal" telerik:RadDocking.SerializationTag="ChartsSplitter">
          <telerik:RadPaneGroup Name="Charts" telerik:RadDocking.SerializationTag="Charts"/>
        </telerik:RadSplitContainer>
      </telerik:RadSplitContainer>
    </telerik:RadDocking.DocumentHost>
  </telerik:RadDocking>
</Window>
