<models:WindowModel x:Class="HedgeHog.Alice.Client.DockingWindow"
				xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
				xmlns:telerikDocking="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Docking"
				xmlns:state="clr-namespace:WpfPersist;assembly=Persistance"
				xmlns:models="clr-namespace:HedgeHog.Models;assembly=HedgeHog.Lib"
				xmlns:newsCaster="clr-namespace:HedgeHog.UI;assembly=HedgeHog.NewsCaster.UI"
				xmlns:u="clr-namespace:HedgeHog.UI;assembly=HedgeHog.UI"
				xmlns:ui="clr-namespace:HedgeHog.Alice.Client.UI.Controls"
				xmlns:hhmu="clr-namespace:HedgeHog.Markup;assembly=HedgeHog.Lib"
				xmlns:charter="clr-namespace:HedgeHog;assembly=HedgeHog.Charter"
				xmlns:l="clr-namespace:HedgeHog.Alice.Client"
				xmlns:store="clr-namespace:HedgeHog.Alice.Store;assembly=HedgeHog.Alice.Store"
				xmlns:hh="clr-namespace:HedgeHog;assembly=HedgeHog.Lib"
				DataContext="{Binding RelativeSource={RelativeSource Self}}"
				Left="{state:UserSettings Default=100}" Top="{state:UserSettings Default=100}"
				Height="{state:UserSettings Default=200}" Width="{state:UserSettings Default=500}"
				>
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="UI/TradesOnServer.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<store:GlobalStorage x:Key="GlobalStorage" />
			<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
				<Setter Property="FontWeight" Value="Black"/>
			</Style>
			<Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
				<Setter Property="Padding" Value="0" />
			</Style>
			<Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
				<Setter Property="FontWeight" Value="Black"/>
			</Style>
			<DataTemplate x:Key="SnapshotTemplate">
				<charter:CharterSnapshotControl VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
			</DataTemplate>

			<DataTemplate x:Key="CharterHeaderTemplate">
				<TextBlock DataContext="{Binding Content,RelativeSource={RelativeSource AncestorType=telerik:RadPane}}">
					<TextBlock Text="{Binding Header}"
										 Foreground="{Binding IsActive,ConverterParameter=Black|DarkRed|DarkGreen,Converter={x:Static hh:BoolToSrtingConverter.Default}}"
										 FontWeight="{Binding IsSelected,ConverterParameter=Normal|Normal|Black,Converter={x:Static hh:BoolToSrtingConverter.Default}}"
                     ToolTipService.ShowDuration="120000"
										 >
            <TextBlock.ToolTip>
              <TextBlock FontFamily="Courier New">
                <Run>M   - Manual Mode (On/Off)</Run><LineBreak/>
                <Run>T   - Buy/Sell (On/Off)</Run><LineBreak/>
                <Run>0,1 - Corridor Cross Count</Run><LineBreak/>
                <Run>H   - Fit chart to view</Run><LineBreak/>
                <Run>A   - Deactivate Strategy (On/Off)</Run><LineBreak/>
                <Run>/?p - Pause Virtual Trading(On/Off)</Run><LineBreak/>
                <Run>> - Advance on bar</Run>
              </TextBlock>
            </TextBlock.ToolTip>
          </TextBlock>
				</TextBlock>
			</DataTemplate>
			<DataTemplate x:Key="RadPaneContextMenu">
				<telerik:RadContextMenu>
					<telerik:RadMenuItem Header="Floating" Command="telerik:RadDockingCommands.Floating" IsCheckable="True"/>
					<telerik:RadMenuItem Header="Dockable" Command="telerik:RadDockingCommands.Dockable" IsCheckable="True" />
					<telerik:RadMenuItem Header="Tabbed document" Command="telerik:RadDockingCommands.TabbedDocument" IsCheckable="True" />
					<telerik:RadMenuItem Header="Auto hide" Command="telerik:RadDockingCommands.Pin" IsCheckable="True" />
					<telerik:RadMenuItem Header="Hide" Command="telerik:RadDockingCommands.Close" IsCheckable="True" />
				</telerik:RadContextMenu>
			</DataTemplate>

			<DataTemplate x:Key="StopCellEditTemplate">
				<telerik:RadNumericUpDown Value="{Binding Stop,Mode=TwoWay}" />
			</DataTemplate>
			<DataTemplate x:Key="GrossCellTemplate">
				<!--<Label Content="{Binding GrossPL,StringFormat=c0}" ContentStringFormat="c0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Background="{Binding GrossPL,Converter={StaticResource DoubleToColorConverter},ConverterParameter=Transparent|LightSalmon|LightGreen}" />-->
				<Label Content="{Binding GrossPL,StringFormat=c0}" ContentStringFormat="c0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" VerticalAlignment="Center" />
			</DataTemplate>

			<!--TradesOnServer-->
			<DataTemplate x:Key="TradesOnServer">
				<Grid Background="#FFF7F3F7">
					<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding ServerTradesList}" Style="{StaticResource ReadOnlyDataGridStyle}" FontWeight="Black" Background="#FFF7F3F7" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
						<DataGrid.Columns>
							<DataGridTemplateColumn CellTemplate="{StaticResource CloseServerTradeTemplate}" Header="Id"/>
							<DataGridTextColumn Header="Pair" Binding="{Binding Pair}"/>
							<DataGridTextColumn Header="Time" Binding="{Binding Time,StringFormat='dd HH:mm:ss'}"/>
							<DataGridTextColumn Header="Lots" Binding="{Binding Lots}"/>
							<DataGridTextColumn Header="B/S"  Binding="{Binding Buy,Converter={StaticResource BoolToSrtingConverter},ConverterParameter=|S|B}">
								<DataGridTextColumn.ElementStyle>
									<Style TargetType="TextBlock">
										<Setter Property="HorizontalAlignment" Value="Center"/>
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>
							<DataGridTemplateColumn Header="Stop" >
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
												Command="{Binding DataContext.DecreaseStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
												<Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
													<Image.LayoutTransform>
														<ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
													</Image.LayoutTransform>
												</Image>
											</Button>
											<TextBlock HorizontalAlignment="Stretch" Grid.Column="1">
												<TextBlock Text="{Binding StopInPips,StringFormat=n1}" HorizontalAlignment="Stretch" ToolTip="Stop In Pips"/>
												<TextBlock Text="{Binding StopToCloseInPips,StringFormat=/{0:n1}}" HorizontalAlignment="Stretch" ToolTip="Pips Till Stop"/>
											</TextBlock>
											<Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up" Grid.Column="2"
												Command="{Binding DataContext.EncreaseStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
												<Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
													<Image.LayoutTransform>
														<ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
													</Image.LayoutTransform>
												</Image>
											</Button>
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn Header="S ∑" Binding="{Binding StopAmount,StringFormat=c0}" IsReadOnly="True"/>
							<DataGridTextColumn Header="S ∑∑" Binding="{Binding UnKnown.BalanceOnStop,StringFormat=c0}" IsReadOnly="True"/>
							<DataGridTemplateColumn Header="Limit" >
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<Button CommandParameter="{Binding BindsDirectlyToSource=True}" 
												Command="{Binding DataContext.DecreaseLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
												<Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
													<Image.LayoutTransform>
														<ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
													</Image.LayoutTransform>
												</Image>
											</Button>
											<TextBlock HorizontalAlignment="Stretch" Grid.Column="1">
												<TextBlock Text="{Binding LimitInPips,StringFormat=n1}" HorizontalAlignment="Stretch" />
												<TextBlock Text="{Binding LimitToCloseInPips,StringFormat=/{0:n1}}" HorizontalAlignment="Stretch" />
											</TextBlock>
											<Button CommandParameter="{Binding BindsDirectlyToSource=True}" Grid.Column="2"
												Command="{Binding DataContext.IncreaseLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
												<Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
													<Image.LayoutTransform>
														<ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
													</Image.LayoutTransform>
												</Image>
											</Button>
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn Header="L ∑" Binding="{Binding LimitAmount,StringFormat=c0}" IsReadOnly="True"/>
							<DataGridTextColumn Header="L ∑∑" Binding="{Binding UnKnown.BalanceOnLimit,StringFormat=c0}" IsReadOnly="True"/>
							<DataGridTextColumn Header="Pips" Binding="{Binding PL,StringFormat=n1}">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
										<Setter Property="Background" Value="{Binding PL,Converter={StaticResource ProfitToColorConverter}}"/>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTemplateColumn Header="$$$" CellTemplate="{StaticResource GrossCellTemplate}"/>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</DataTemplate>
			<!--Closed Tradesr-->
			<DataTemplate x:Key="ClosedTradesTemplate">
				<Grid Background="#FFF7F3F7">
					<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding ClosedTradesList}" Style="{StaticResource ReadOnlyDataGridStyle}" FontWeight="Black" Background="#FFF7F3F7" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
						<DataGrid.Columns>
							<DataGridTextColumn Header="Pair" Binding="{Binding Pair}"/>
              <DataGridTextColumn Header="Open" Binding="{Binding Time,StringFormat='dd HH:mm:ss'}"/>
              <DataGridTextColumn Header="Close" Binding="{Binding TimeClose,StringFormat='dd HH:mm:ss'}"/>
							<DataGridTextColumn Header="Lots" Binding="{Binding Lots}"/>
							<DataGridTextColumn Header="B/S"  Binding="{Binding Buy,Converter={StaticResource BoolToSrtingConverter},ConverterParameter=|S|B}">
								<DataGridTextColumn.ElementStyle>
									<Style TargetType="TextBlock">
										<Setter Property="HorizontalAlignment" Value="Center"/>
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>
              <DataGridTextColumn Header="Open$" Binding="{Binding Open}"/>
              <DataGridTextColumn Header="Close$" Binding="{Binding Close}"/>
              <DataGridTextColumn Header="Pips" Binding="{Binding PL,StringFormat=n1}">
								<DataGridTextColumn.CellStyle>
									<Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
										<Setter Property="Background" Value="{Binding PL,Converter={StaticResource ProfitToColorConverter}}"/>
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTemplateColumn Header="$$$" CellTemplate="{StaticResource GrossCellTemplate}"/>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</DataTemplate>

			<!--Markets-->
			<DataTemplate x:Key="MarketsTemplate">
				<Grid Background="#FFF7F3F7">
					<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding MarketsList}" Style="{StaticResource ReadOnlyDataGridStyle}" FontWeight="Black" Background="#FFF7F3F7" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
						<DataGrid.RowStyle>
							<Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
								<Setter Property="Background" Value="{Binding Status,Converter={x:Static Member=hh:CompareValueConverter.Default},ConverterParameter=Open|LightGray|#CCFF99}"/>
							</Style>
						</DataGrid.RowStyle>
						<DataGrid.Columns>
							<DataGridTextColumn Header="Market" Binding="{Binding TimeZone}"/>
							<DataGridTextColumn Header="Opens" Binding="{Binding Opens,StringFormat='dd HH:mm'}"/>
							<DataGridTextColumn Header="Closes" Binding="{Binding Closes,StringFormat='dd HH:mm'}"/>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</DataTemplate>

			<!--Open Trades Title Template-->
			<DataTemplate x:Key="OpenTradesHeaderTemplate">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<ContentPresenter Content="{Binding}" Margin="0,0,5,0" />
					<TextBlock Text="{Binding DataContext.ServerTradesList.Count,StringFormat=[{0:n0}],RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=telerik:RadPane}}"
										 Grid.Column="1"/>
					<Button Content="Close ALL" HorizontalAlignment="Left"
						Command="{Binding DataContext.CloseAllServerTradesCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=telerik:RadPane}}"
						Grid.Column="2" >
					</Button>
				</Grid>
			</DataTemplate>
			<DataTemplate x:Key="OpenTradesTitleTemplate">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<ContentPresenter Content="{Binding}" Margin="0,0,5,0" />
					<Button Content="Close ALL" HorizontalAlignment="Left"
						Command="{Binding DataContext.CloseAllServerTradesCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=telerik:RadPane}}"
						Grid.Column="1" >
					</Button>
				</Grid>
			</DataTemplate>
      <DataTemplate x:Key="OpenOrdersTitleTemplate">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <ContentPresenter Content="{Binding}" Margin="0,0,5,0" />
          <TextBlock Text="{Binding DataContext.OrdersList.Count,StringFormat=[{0:n0}],RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=telerik:RadPane}}"
										 Grid.Column="1"/>
        </Grid>
      </DataTemplate>
      <!--OrdersOnServer-->
			<DataTemplate x:Key="OrdersOnServer">
				<!--Server Orders-->
				<Grid Background="#FFF7F3F7">
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding OrdersList}" Style="{StaticResource ReadOnlyDataGridStyle}" FontWeight="Black" VerticalScrollBarVisibility="Auto" Background="#FFF7F3F7">
						<DataGrid.ColumnHeaderStyle>
							<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
								<Setter Property="FontWeight" Value="Black"/>
							</Style>
						</DataGrid.ColumnHeaderStyle>
						<DataGrid.Columns>
							<DataGridTemplateColumn>
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Cancel Order" Content="X"
												Command="{Binding DataContext.CancelEntryOrderCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn Header="Pair" Binding="{Binding Pair}"/>
							<DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
							<DataGridTextColumn Header="BS" Binding="{Binding BS}"/>
							<DataGridTemplateColumn Header="Distance">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<WrapPanel>
											<Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
												Command="{Binding DataContext.DecreaseEntryRateCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
												<Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
													<Image.LayoutTransform>
														<ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
													</Image.LayoutTransform>
												</Image>
											</Button>
											<ContentControl Content="{Binding Distance}" ContentStringFormat="n1"/>
											<Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
												Command="{Binding DataContext.IncreaseEntryRateCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
												<Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
													<Image.LayoutTransform>
														<ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
													</Image.LayoutTransform>
												</Image>
											</Button>
										</WrapPanel>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn Header="Lot" Binding="{Binding Lot}"/>
							<DataGridTemplateColumn Header="Stop">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<WrapPanel Background="LightSalmon">
											<Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
												Command="{Binding DataContext.DecreaseEntryStopCommandCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
												<Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
													<Image.LayoutTransform>
														<ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
													</Image.LayoutTransform>
												</Image>
											</Button>

											<TextBlock Text="{Binding StopInPips,StringFormat=n1}"/>
											<TextBlock Text="{Binding StopAmount,StringFormat=[{0:c1}}"/>
											<!--<TextBlock Text="{Binding UnKnown.PercentOnStop,StringFormat=/{0:p1}}"/>
											<TextBlock Text="{Binding UnKnown.BalanceOnStop,StringFormat=/{0:c0}]}"/>-->
											<Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
												Command="{Binding DataContext.IncreaseEntryStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
												<Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
													<Image.LayoutTransform>
														<ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
													</Image.LayoutTransform>
												</Image>
											</Button>
										</WrapPanel>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTemplateColumn Header="L->$0">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Button Content="{Binding UnKnown.NoLossLimit}" ContentStringFormat="n1"
														CommandParameter="{Binding BindsDirectlyToSource=True}" 
														Command="{Binding DataContext.SetOrderToNoLossCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" />
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTemplateColumn Header="Limit">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<WrapPanel Background="LightGreen">
											<Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
												Command="{Binding DataContext.DecreaseEntryLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
												<Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
													<Image.LayoutTransform>
														<ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
													</Image.LayoutTransform>
												</Image>
											</Button>
											<TextBlock Text="{Binding LimitInPips,StringFormat=n1}"/>
											<TextBlock Text="{Binding LimitAmount,StringFormat=[{0:c1}}"/>
											<!--<TextBlock Text="{Binding UnKnown.PercentOnLimit,StringFormat=/{0:p1}}"/>
											<TextBlock Text="{Binding UnKnown.BalanceOnLimit,StringFormat=/{0:c0}]}"/>-->
											<Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
												Command="{Binding DataContext.IncreaseEntryLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
												<Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
													<Image.LayoutTransform>
														<ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
													</Image.LayoutTransform>
												</Image>
											</Button>
										</WrapPanel>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>

							<DataGridTextColumn Header="FixStatus" Binding="{Binding Status}" Visibility="Collapsed"/>
							<DataGridTextColumn Header="Type" Binding="{Binding Type}" Visibility="Collapsed"/>
							<DataGridTextColumn Header="Time" Binding="{Binding Time,StringFormat='dd HH:mm:ss'}"/>
							<DataGridTextColumn Header="OrderId" Binding="{Binding OrderID}"/>
							<DataGridTextColumn Header="QTXT" Binding="{Binding QTXT}" Visibility="Collapsed"/>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</DataTemplate>
			
			<DataTemplate x:Key="DeleteAccountCellTemplate">
				<Button Content="X" CommandParameter="{Binding BindsDirectlyToSource=True}" 
						Command="{Binding DataContext.DeleteTradingAccountCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
			</DataTemplate>

			<DataTemplate x:Key="CloseServerTradeTemplate">
				<Button Content="{Binding Id}" CommandParameter="{Binding Id}"
						Command="{Binding DataContext.CloseServerTradeCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
			</DataTemplate>
			
			<!--DataGrid Style-->
			<Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
				<Setter Property="Background" Value="#FFF7F3F7"/>
			</Style>
			
			<!--RadPane Header Template-->
			<Style TargetType="{x:Type telerik:RadPane}">
				<Setter Property="HeaderTemplate">
					<Setter.Value>
						<DataTemplate>
							<ContentPresenter Content="{Binding}">
								<ContentPresenter.Resources>
									<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
										<Setter Property="FontWeight" Value="Black"/>
									</Style>
								</ContentPresenter.Resources>
							</ContentPresenter>
						</DataTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Window.Resources>
	<!-- DockSite -->
	<Grid KeyDown="Grid_KeyDown">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<telerik:RadMenu VerticalAlignment="Top">
			<telerik:RadMenuItem Header="_File">
				<telerik:RadMenuItem Header="_Load Layout ..." Command="{Binding LoadLayoutCommand}"/>
				<telerik:RadMenuItem Header="_Save Layout As ..." Command="{Binding SaveLayoutAsCommand}"/>
				<telerik:RadMenuItem Header="_Reset Layout" Command="{Binding ResetLayoutCommand}"/>
				<telerik:RadMenuItem IsSeparator="True"/>
				<telerik:RadMenuItem Header="_Exit"/>
			</telerik:RadMenuItem>
			<telerik:RadMenuItem Header="_View" ItemsSource="{Binding Views}">
				<telerik:RadMenuItem.ItemContainerStyle>
					<Style TargetType="telerik:RadMenuItem">
						<Setter Property="IsCheckable" Value="true"/>
						<Setter Property="IsChecked" Value="{Binding IsHidden,Mode=TwoWay,Converter={StaticResource InvertBooleanConverter}}"/>
						<Setter Property="Header" Value="{Binding Header}"/>
					</Style>
				</telerik:RadMenuItem.ItemContainerStyle>
			</telerik:RadMenuItem>
			<telerik:RadMenuItem Header="_Charts">
				<telerik:RadMenuItem Header="Show _All" ItemsSource="{Binding Charters}">
					<telerik:RadMenuItem.ItemContainerStyle>
						<Style TargetType="telerik:RadMenuItem">
							<Setter Property="IsCheckable" Value="true"/>
							<Setter Property="IsChecked" Value="{Binding IsHidden,Mode=TwoWay,Converter={StaticResource InvertBooleanConverter}}"/>
							<Setter Property="Header" Value="{Binding Header}"/>
						</Style>
					</telerik:RadMenuItem.ItemContainerStyle>
				</telerik:RadMenuItem>
				<telerik:RadMenuItem Header="_Tile" Command="{Binding TileChartsCommand}"/>
			</telerik:RadMenuItem>
		</telerik:RadMenu>
		<telerik:RadDocking Grid.Row="1" Name="RootVisual" DataContext="{x:Static l:TraderModel.Default}"
												Background="{Binding IsLoggedIn,Converter={StaticResource ProfitToColorConverter}}">
			<telerik:RadDocking.DocumentHost>
				<telerik:RadSplitContainer Orientation="Vertical">
					<telerik:RadPaneGroup SelectedIndex="{state:UserSettings}">
						<telerik:RadPane Header="Master" IsSelected="{state:UserSettings Default=true}" Title="Master Title" telerik:RadDocking.SerializationTag="RadPaneMain" Name="MasterPanel" CanUserClose="False">
							<WrapPanel DataContext="{x:Static l:TraderModel.Default}">
								<u:TextBox2 Text2="{Binding DatabasePath,Mode=TwoWay}" Text="{state:UserSettings}" Name="DatabasePath" MinWidth="30" MaxWidth="100" />
								<Button Command="{Binding OpenDataBaseCommand}" Content="Database">
									<Button.ToolTip>
										<ToolTip>
											<TextBlock Text="{Binding DatabasePath}"/>
										</ToolTip>
									</Button.ToolTip>
								</Button>
								<ComboBox SelectedValue="{Binding TradingAccount}" SelectedIndex="{state:UserSettings Default=0}" Name="TradingAccount" ItemsSource="{Binding TradingAccounts}" />
								<Label ToolTip="Virtual Trading">VT:</Label>
								<u:CheckBox2 IsChecked2="{Binding IsInVirtualTrading,Mode=TwoWay}" IsChecked="{state:UserSettings}" Name="chkVT"/>
								<u:TextBox2 Text2="{Binding VirtualDateStart,Mode=TwoWay,FallbackValue='1/1/2000'}" Text="{state:UserSettings Default='1/1/2000'}" Name="VitrualDateStart" MinWidth="30" />
								<u:TextBox2 Text2="{Binding VirtualMonthsToTest,Mode=TwoWay,FallbackValue=0}" Text="{state:UserSettings Default=0}" Name="VitrualMonthsToTest" MinWidth="20" />
								<u:TextBox2 Text2="{Binding VirtualDelay,Mode=TwoWay,FallbackValue=0}" Text="{state:UserSettings Default=0}" Name="VitrualDekay" MinWidth="20" />
								<Button Command="{Binding StepBackCommand}" Content="_&lt;&lt;"></Button>
								<u:CheckBox2 IsChecked2="{Binding VirtualPause,Mode=TwoWay}" IsChecked="{state:UserSettings Default=true}" Name="chkVP" Content="_Pause"/>
								<Button Command="{Binding StepForwardCommand}" Content=">_>"></Button>
								<CheckBox IsChecked="{Binding VirtualClearTest,Mode=TwoWay}" Name="chkClearTest" ToolTip="Clear Previouse Test Results"/>
								<Button Command="{Binding ReportCommand}">Report</Button>
								<Button Command="{Binding LoadHistoryCommand}">History</Button>
								<TextBlock>Status:</TextBlock>
								<TextBlock Text="{Binding SessionStatus}"/>

								<TextBlock Visibility="Collapsed">
				<TextBlock>Server:</TextBlock>
				<u:TextBox2 MinWidth="50" Text2="{Binding ServerAddress,Mode=TwoWay}" Text="{state:UserSettings Default=localhost:9200/}" x:Name="ServerAddress"/>
				<Label Content="{Binding ServerTime}" ContentStringFormat="HH:mm:ss" ToolTip="Server Time" VerticalContentAlignment="Center" VerticalAlignment="Center" BorderBrush="Gray" BorderThickness="1"/>
				<ComboBox SelectedValue="{Binding AliceMode,Mode=TwoWay}" SelectedIndex="{state:UserSettings Default=0}" ItemsSource="{hhmu:EnumValues l:AliceModes}" Name="AliceMode"/>
				<Button Command="{Binding OpenNewServerAccountCommand}">New Rabbit</Button>
				<Button Command="{Binding AddNewSlaveAccountCommand}">Add Alice</Button>
				</TextBlock>

							</WrapPanel>
						</telerik:RadPane>
						<telerik:RadPane IsSelected="{state:UserSettings}" Name="AccountsManager" Title="Accounts" telerik:RadDocking.SerializationTag="AccountsManager" CanUserClose="False">
							<AdornerDecorator>
								<StackPanel>
									<!--Slave Account Infos-->
									<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding TradingAccountsList}">
										<DataGrid.Columns>
											<DataGridTemplateColumn CellTemplate="{StaticResource DeleteAccountCellTemplate}"></DataGridTemplateColumn>
											<DataGridTemplateColumn>
												<DataGridTemplateColumn.HeaderTemplate>
													<DataTemplate>
														<WrapPanel>
															<TextBlock>Account</TextBlock>
															<Button Content="{Binding DataContext.ShowAllAccountsFilter,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel},Converter={StaticResource BoolToSrtingConverter},ConverterParameter=+|+|-}" 
															Command="{Binding DataContext.ToggleShowAllAccountsCommand,RelativeSource={RelativeSource Mode=FindAncestor,  AncestorType=StackPanel}}"
															/>
														</WrapPanel>
													</DataTemplate>
												</DataGridTemplateColumn.HeaderTemplate>
												<DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<Button Content="{Binding AccountId}"
															Command="{Binding DataContext.LoginCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"
															CommandParameter="{Binding BindsDirectlyToSource=True}"
															/>
													</DataTemplate>
												</DataGridTemplateColumn.CellTemplate>
												<DataGridTemplateColumn.CellEditingTemplate>
													<DataTemplate>
														<TextBox Text="{Binding AccountId}"/>
													</DataTemplate>
												</DataGridTemplateColumn.CellEditingTemplate>
											</DataGridTemplateColumn>
											<DataGridTextColumn Binding="{Binding Path=Password}" Header="Password" Foreground="Transparent" />
											<DataGridCheckBoxColumn Binding="{Binding Path=IsDemo}" Header="Demo" Width="SizeToHeader" />
											<DataGridTextColumn Binding="{Binding Path=Commission}" Header="C$" />
											<DataGridTextColumn Binding="{Binding Path=TradeRatio}" Header="M:S" ToolTipService.ToolTip="Trade Ratio" />
											<DataGridCheckBoxColumn Binding="{Binding Path=IsMaster}" Header="Master" Width="SizeToHeader" />
											<DataGridCheckBoxColumn Binding="{Binding Path=IsActive}" Header="Active" Width="SizeToHeader" />
											<DataGridTemplateColumn Header="Case">
												<DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<ContentControl Content="{Binding TradingMacroName}"/>
													</DataTemplate>
												</DataGridTemplateColumn.CellTemplate>
												<DataGridTemplateColumn.CellEditingTemplate>
													<DataTemplate>
														<ComboBox SelectedItem="{Binding Path=TradingMacroName}" ItemsSource="{Binding DataContext.TradingMacrosCases,RelativeSource={RelativeSource AncestorType=DataGrid}}" />
													</DataTemplate>
												</DataGridTemplateColumn.CellEditingTemplate>
											</DataGridTemplateColumn>
											<DataGridTextColumn Binding="{Binding Path=EntityState}" Header="State" />
											<DataGridTextColumn Binding="{Binding Path=Id}" Header="Id" />
										</DataGrid.Columns>
									</DataGrid>
									<Button Command="{Binding SaveTradingSlavesCommand}">Save</Button>
								</StackPanel>
							</AdornerDecorator>
						</telerik:RadPane>
						<telerik:RadPane IsSelected="{state:UserSettings}" Header="Trading Macros" 
														 
														 Title="Trading Macros" Name="TradingMacros" telerik:RadDocking.SerializationTag="TradingMacros" CanUserClose="False">
							<Grid Background="#FFF7F3F7">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<ui:AccountInfo DataContext="{Binding ServerAccountRow}"/>
								<TextBlock DataContext="{Binding TradingStatistics}" Grid.Row="1">
									TPD:<TextBlock Text="{Binding TakeProfitDistanceInPips,StringFormat=n1}" ToolTip="TakeProfitDistanceInPips"/>
									TP:<TextBlock Text="{Binding TakeProfitPips,StringFormat=n1}" ToolTip="TakeProfitPips"/>
									StD:<TextBlock Text="{Binding StDevPips,StringFormat=n1}" ToolTip="StDevPips"/>
									Lot:<TextBlock Text="{Binding AllowedLotMinimum}" ToolTip="Allowed Lot Minimum"/>
									VR:
										<TextBlock Text="{Binding VolumeRatioL,StringFormat=p0}" ToolTip="VolumeRatioL"/>
										<TextBlock>/</TextBlock>
										<TextBlock Text="{Binding VolumeRatioH,StringFormat=p0}" ToolTip="VolumeRatioH"/>
									Gross:
										<TextBlock Text="{Binding CurrentGrossAverage,StringFormat=c0}" ToolTip="CurrentGrossAverage"/>
										<TextBlock>/</TextBlock>
										<TextBlock Text="{Binding CurrentGross,StringFormat=c0}" ToolTip="CurrentGross"/>
								</TextBlock>
								<l:RemoteControlView Grid.Row="2"/>
							</Grid>
						</telerik:RadPane>
						<telerik:RadPane IsSelected="{state:UserSettings}" telerik:RadDocking.SerializationTag="OpenedTrades" CanUserClose="False"
													 Header="Open Trades" HeaderTemplate="{StaticResource OpenTradesHeaderTemplate}"
													 Title="OpenTrades" TitleTemplate="{StaticResource OpenTradesTitleTemplate}"
													 ContentTemplate="{StaticResource TradesOnServer}" Content="{Binding}" />
						<telerik:RadPane Header="Closed Trades" ContentTemplate="{StaticResource ClosedTradesTemplate}" Content="{Binding}" telerik:RadDocking.SerializationTag="ClosedTrades" CanUserClose="False"/>
						<telerik:RadPane IsSelected="{state:UserSettings}" 
                             Header="Open Orders" Title="Open Orders" 
                             HeaderTemplate="{StaticResource OpenOrdersTitleTemplate}"
                             telerik:RadDocking.SerializationTag="OpenedOrders" 
                             Name="OpenedOrders" 
                             ContentTemplate="{StaticResource OrdersOnServer}" Content="{Binding}" 
                             CanUserClose="False"/>
					</telerik:RadPaneGroup>
					<telerik:RadSplitContainer Name="ChartsSplitter" Orientation="Horizontal" telerik:RadDocking.SerializationTag="ChartsSplitter">
						<telerik:RadPaneGroup telerik:RadDocking.SerializationTag="ChartsPaneGroup"/>
					</telerik:RadSplitContainer>
				</telerik:RadSplitContainer>
			</telerik:RadDocking.DocumentHost>
			<telerik:RadSplitContainer InitialPosition="DockedBottom" Orientation="Horizontal">
				<telerik:RadPaneGroup>

					<telerik:RadPane Header="Log" Title="Log" CanUserClose="False" telerik:RadDocking.SerializationTag="Log" Name="Log">
						<telerik:RadPane.ContentTemplate>
							<DataTemplate>
								<ScrollViewer Name="LogContainer" DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource TemplatedParentDataContextConverter}}" VerticalScrollBarVisibility="Auto">
									<Label Content="{Binding LogText}" BorderBrush="Red" BorderThickness="1" VerticalAlignment="Bottom"></Label>
								</ScrollViewer>
							</DataTemplate>
						</telerik:RadPane.ContentTemplate>
					</telerik:RadPane>

					<telerik:RadPane Header="Table" Title="Table" CanUserClose="False" telerik:RadDocking.SerializationTag="Table" Name="Table">
						<telerik:RadPane.ContentTemplate>
						<DataTemplate>
								<telerik:RadGridView CanUserSelect="False" IsSynchronizedWithCurrentItem="False" CanUserSortColumns="True" ShowGroupPanel="False" IsFilteringAllowed="False" RowIndicatorVisibility="Collapsed" RowHeight="16"
										ItemsSource="{Binding GenericList,Source={x:Static store:GlobalStorage.Instance}}" AutoGenerateColumns="True">
                  <telerik:RadGridView.Resources>
                    <Style TargetType="{x:Type telerik:GridViewCell}">
                      <Setter Property="HorizontalAlignment" Value="Right"/>
                    </Style>
                  </telerik:RadGridView.Resources>
                  <telerik:RadGridView.RowStyle>
                    <Style TargetType="telerik:GridViewRow">
                      <Setter Property="FontWeight" Value="{Binding FontWeight}" />
                      <Setter Property="Background" Value="{Binding Color}" />
                    </Style>
                  </telerik:RadGridView.RowStyle>
                </telerik:RadGridView>
							</DataTemplate>
						</telerik:RadPane.ContentTemplate>
					</telerik:RadPane>

					<telerik:RadPane Header="Markets" ContentTemplate="{StaticResource MarketsTemplate}" Content="{Binding}" telerik:RadDocking.SerializationTag="Markets" CanUserClose="False"/>

					<telerik:RadPane Header="News" Title="News" CanUserClose="False" telerik:RadDocking.SerializationTag="News" Name="News">
						<telerik:RadPane.ContentTemplate>
							<DataTemplate>
								<newsCaster:NewsCasterControl VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
							</DataTemplate>
						</telerik:RadPane.ContentTemplate>
					</telerik:RadPane>

					<telerik:RadPane Header="Sbapshot" Title="Sbapshot" ContentTemplate="{StaticResource SnapshotTemplate}" CanUserClose="False" telerik:RadDocking.SerializationTag="Sbapshot" Name="Sbapshot">
					</telerik:RadPane>

				</telerik:RadPaneGroup>
			</telerik:RadSplitContainer>
		</telerik:RadDocking>
	</Grid>
</models:WindowModel>
