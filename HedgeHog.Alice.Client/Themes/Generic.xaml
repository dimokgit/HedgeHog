  <ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HedgeHog.Alice.Client"
        xmlns:l="clr-namespace:HedgeHog.Alice.Client"
        xmlns:lui="clr-namespace:HedgeHog.Alice.Client.UI"
        xmlns:hh="clr-namespace:HedgeHog;assembly=HedgeHog.Lib"
  xmlns:ui="clr-namespace:HedgeHog.Alice.Client.UI.Controls"
  >

  <hh:BoolToColorConverter x:Key="BoolToColorConverter"/>
  <hh:ProfitToColorConverter x:Key="ProfitToColorConverter"/>
  <DataTemplate x:Key="CombinedBalanceCellTemplate">
    <WrapPanel>
      <TextBlock Text="{Binding Balance,StringFormat=c0}"/>
      <TextBlock Text="{Binding OriginalBalance,StringFormat=/{0:c0}}"/>
    </WrapPanel>
  </DataTemplate>
  <DataTemplate x:Key="CombinedProfitCellTemplate">
    <WrapPanel>
      <TextBlock Text="{Binding ProfitPercent,StringFormat=p2}"/>
      <TextBlock Text="{Binding OriginalProfit,StringFormat=/{0:p2}}"/>
    </WrapPanel>
  </DataTemplate>

  <Style TargetType="{x:Type ui:AccountInfo}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:AccountInfo}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
            <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding}" FontWeight="Black"
                      RowBackground="{Binding [0].OriginalProfit,Converter={StaticResource ProfitToColorConverter}}">
              <DataGrid.Columns>
                <DataGridTextColumn Header="Account" Binding="{Binding ID}" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="Balance" CellTemplate="{StaticResource CombinedBalanceCellTemplate}" IsReadOnly="True">
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Profit" CellTemplate="{StaticResource CombinedProfitCellTemplate}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Equity" Binding="{Binding Equity,StringFormat=c0}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Pos" Binding="{Binding Trades.Length,Mode=OneWay}" IsReadOnly="True" ToolTipService.ToolTip="Total Positions"/>
                <DataGridTextColumn Header="Margin" Binding="{Binding UsableMargin,StringFormat=c0}" IsReadOnly="True"/>
                <DataGridTextColumn Binding="{Binding PipsToMC}" IsReadOnly="True">
                  <DataGridTextColumn.HeaderTemplate>
                    <DataTemplate>
                      <TextBlock Text="PMC" ToolTip="Pips to Margin Call"/>
                    </DataTemplate>
                  </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Pips">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <TextBlock>
                        <TextBlock Text="{Binding PL,StringFormat=n1}"/>
                        <TextBlock Margin="-2">></TextBlock>
                        <TextBlock Text="{Binding TakeProfit,StringFormat=n1}"/>
                      </TextBlock>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                  <DataGridTemplateColumn.CellEditingTemplate>
                    <DataTemplate>
                      <TextBox Text="{Binding PipsToExit,Converter={x:Static hh:NullableValueConverter.Default}}"/>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="∑Pips">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <TextBlock HorizontalAlignment="Center">
                        <TextBlock Text="{Binding CurrentGrossInPips,StringFormat=c0}" />
                        <TextBlock Margin="-2" 
                                   Visibility="{Binding GrossToExitInPips,Converter={x:Static hh:DoubleToColorConverter.Default},ConverterParameter=Collapsed|Collapsed|Visible}">></TextBlock>
                        <TextBlock Text="{Binding GrossToExitInPips,StringFormat=c0}"/>
                      </TextBlock>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                  <DataGridTemplateColumn.CellEditingTemplate>
                    <DataTemplate>
                      <TextBox Text="{Binding GrossToExitInPips,Converter={x:Static hh:NullableValueConverter.Default}}"/>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="$$$" Binding="{Binding Gross,StringFormat=c0}" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="DPL$">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <TextBlock HorizontalAlignment="Center">
                        <TextBlock Text="{Binding DayPL,StringFormat=c0}" />
                        <TextBlock Margin="-2" 
                                   Visibility="{Binding DayTakeProfit,Converter={x:Static hh:DoubleToColorConverter.Default},ConverterParameter=Collapsed|Collapsed|Visible}">></TextBlock>
                        <TextBlock Text="{Binding DayTakeProfit,StringFormat=c0}"/>
                      </TextBlock>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                  <DataGridTemplateColumn.CellEditingTemplate>
                    <DataTemplate>
                      <TextBox Text="{Binding DayTakeProfit,Converter={x:Static hh:NullableValueConverter.Default}}"/>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Limit ∑">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <WrapPanel>
                        <TextBlock Text="{Binding LimitAmount,StringFormat=c0}"/>
                        <TextBlock Text="{Binding BalanceOnLimit,StringFormat=/{0:c0}}"/>
                      </WrapPanel>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="S/B" Binding="{Binding StopToBalanceRatio,StringFormat=p0}" IsReadOnly="True">
                  <DataGridTextColumn.HeaderTemplate>
                    <DataTemplate>
                      <TextBlock Text="S/B %" ToolTip="Stop to Balance Ratio"/>
                    </DataTemplate>
                  </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Stop ∑">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <WrapPanel>
                        <TextBlock Text="{Binding StopAmount,StringFormat=c0}"/>
                        <TextBlock Text="{Binding BalanceOnStop,StringFormat=/{0:c0}}"/>
                      </WrapPanel>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Time" Binding="{Binding ServerTime,StringFormat=HH:mm:ss,Mode=OneWay}" IsReadOnly="True"/>
              </DataGrid.Columns>
            </DataGrid>
          </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type lui:DataGrid_D}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type lui:DataGrid_D}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
