//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Temp
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ForexEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ForexEntities object using the connection string found in the 'ForexEntities' section of the application configuration file.
        /// </summary>
        public ForexEntities() : base("name=ForexEntities", "ForexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForexEntities object.
        /// </summary>
        public ForexEntities(string connectionString) : base(connectionString, "ForexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForexEntities object.
        /// </summary>
        public ForexEntities(EntityConnection connection) : base(connection, "ForexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<v_Tick> v_Tick
        {
            get
            {
                if ((_v_Tick == null))
                {
                    _v_Tick = base.CreateObjectSet<v_Tick>("v_Tick");
                }
                return _v_Tick;
            }
        }
        private ObjectSet<v_Tick> _v_Tick;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Stat> t_Stat
        {
            get
            {
                if ((_t_Stat == null))
                {
                    _t_Stat = base.CreateObjectSet<t_Stat>("t_Stat");
                }
                return _t_Stat;
            }
        }
        private ObjectSet<t_Stat> _t_Stat;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Tick> t_Tick
        {
            get
            {
                if ((_t_Tick == null))
                {
                    _t_Tick = base.CreateObjectSet<t_Tick>("t_Tick");
                }
                return _t_Tick;
            }
        }
        private ObjectSet<t_Tick> _t_Tick;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Tick_Mew> t_Tick_Mew
        {
            get
            {
                if ((_t_Tick_Mew == null))
                {
                    _t_Tick_Mew = base.CreateObjectSet<t_Tick_Mew>("t_Tick_Mew");
                }
                return _t_Tick_Mew;
            }
        }
        private ObjectSet<t_Tick_Mew> _t_Tick_Mew;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the v_Tick EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTov_Tick(v_Tick v_Tick)
        {
            base.AddObject("v_Tick", v_Tick);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Stat EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Stat(t_Stat t_Stat)
        {
            base.AddObject("t_Stat", t_Stat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Tick EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Tick(t_Tick t_Tick)
        {
            base.AddObject("t_Tick", t_Tick);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Tick_Mew EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Tick_Mew(t_Tick_Mew t_Tick_Mew)
        {
            base.AddObject("t_Tick_Mew", t_Tick_Mew);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pair">No Metadata Documentation available.</param>
        /// <param name="period">No Metadata Documentation available.</param>
        public ObjectResult<Bars_Result> Bars(global::System.String pair, Nullable<global::System.Byte> period)
        {
            ObjectParameter pairParameter;
            if (pair != null)
            {
                pairParameter = new ObjectParameter("Pair", pair);
            }
            else
            {
                pairParameter = new ObjectParameter("Pair", typeof(global::System.String));
            }
    
            ObjectParameter periodParameter;
            if (period.HasValue)
            {
                periodParameter = new ObjectParameter("Period", period);
            }
            else
            {
                periodParameter = new ObjectParameter("Period", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction<Bars_Result>("Bars", pairParameter, periodParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Stat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Stat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Stat object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="value1">Initial value of the Value1 property.</param>
        /// <param name="value2">Initial value of the Value2 property.</param>
        /// <param name="value3">Initial value of the Value3 property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static t_Stat Createt_Stat(global::System.Int32 id, global::System.DateTime time, global::System.Double price, global::System.Double value1, global::System.Double value2, global::System.Double value3, global::System.String name)
        {
            t_Stat t_Stat = new t_Stat();
            t_Stat.Id = id;
            t_Stat.Time = time;
            t_Stat.Price = price;
            t_Stat.Value1 = value1;
            t_Stat.Value2 = value2;
            t_Stat.Value3 = value3;
            t_Stat.Name = name;
            return t_Stat;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value1
        {
            get
            {
                return _Value1;
            }
            set
            {
                OnValue1Changing(value);
                ReportPropertyChanging("Value1");
                _Value1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value1");
                OnValue1Changed();
            }
        }
        private global::System.Double _Value1;
        partial void OnValue1Changing(global::System.Double value);
        partial void OnValue1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value2
        {
            get
            {
                return _Value2;
            }
            set
            {
                OnValue2Changing(value);
                ReportPropertyChanging("Value2");
                _Value2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value2");
                OnValue2Changed();
            }
        }
        private global::System.Double _Value2;
        partial void OnValue2Changing(global::System.Double value);
        partial void OnValue2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value3
        {
            get
            {
                return _Value3;
            }
            set
            {
                OnValue3Changing(value);
                ReportPropertyChanging("Value3");
                _Value3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value3");
                OnValue3Changed();
            }
        }
        private global::System.Double _Value3;
        partial void OnValue3Changing(global::System.Double value);
        partial void OnValue3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Tick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Tick : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Tick object.
        /// </summary>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="ask">Initial value of the Ask property.</param>
        /// <param name="bid">Initial value of the Bid property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static t_Tick Createt_Tick(global::System.String pair, global::System.DateTime startDate, global::System.Double ask, global::System.Double bid, global::System.Int32 id)
        {
            t_Tick t_Tick = new t_Tick();
            t_Tick.Pair = pair;
            t_Tick.StartDate = startDate;
            t_Tick.Ask = ask;
            t_Tick.Bid = bid;
            t_Tick.ID = id;
            return t_Tick;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Ask
        {
            get
            {
                return _Ask;
            }
            set
            {
                OnAskChanging(value);
                ReportPropertyChanging("Ask");
                _Ask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ask");
                OnAskChanged();
            }
        }
        private global::System.Double _Ask;
        partial void OnAskChanging(global::System.Double value);
        partial void OnAskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Bid
        {
            get
            {
                return _Bid;
            }
            set
            {
                OnBidChanging(value);
                ReportPropertyChanging("Bid");
                _Bid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bid");
                OnBidChanged();
            }
        }
        private global::System.Double _Bid;
        partial void OnBidChanging(global::System.Double value);
        partial void OnBidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Tick_Mew")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Tick_Mew : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Tick_Mew object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="ask">Initial value of the Ask property.</param>
        /// <param name="bid">Initial value of the Bid property.</param>
        public static t_Tick_Mew Createt_Tick_Mew(global::System.Int32 id, global::System.String pair, global::System.DateTime time, global::System.Double ask, global::System.Double bid)
        {
            t_Tick_Mew t_Tick_Mew = new t_Tick_Mew();
            t_Tick_Mew.ID = id;
            t_Tick_Mew.Pair = pair;
            t_Tick_Mew.Time = time;
            t_Tick_Mew.Ask = ask;
            t_Tick_Mew.Bid = bid;
            return t_Tick_Mew;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Ask
        {
            get
            {
                return _Ask;
            }
            set
            {
                OnAskChanging(value);
                ReportPropertyChanging("Ask");
                _Ask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ask");
                OnAskChanged();
            }
        }
        private global::System.Double _Ask;
        partial void OnAskChanging(global::System.Double value);
        partial void OnAskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Bid
        {
            get
            {
                return _Bid;
            }
            set
            {
                OnBidChanging(value);
                ReportPropertyChanging("Bid");
                _Bid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bid");
                OnBidChanged();
            }
        }
        private global::System.Double _Bid;
        partial void OnBidChanging(global::System.Double value);
        partial void OnBidChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="v_Tick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class v_Tick : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new v_Tick object.
        /// </summary>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="ask">Initial value of the Ask property.</param>
        /// <param name="bid">Initial value of the Bid property.</param>
        public static v_Tick Createv_Tick(global::System.String pair, global::System.DateTime startDate, global::System.Double ask, global::System.Double bid)
        {
            v_Tick v_Tick = new v_Tick();
            v_Tick.Pair = pair;
            v_Tick.StartDate = startDate;
            v_Tick.Ask = ask;
            v_Tick.Bid = bid;
            return v_Tick;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                if (_Pair != value)
                {
                    OnPairChanging(value);
                    ReportPropertyChanging("Pair");
                    _Pair = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Pair");
                    OnPairChanged();
                }
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                if (_StartDate != value)
                {
                    OnStartDateChanging(value);
                    ReportPropertyChanging("StartDate");
                    _StartDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StartDate");
                    OnStartDateChanged();
                }
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Ask
        {
            get
            {
                return _Ask;
            }
            set
            {
                if (_Ask != value)
                {
                    OnAskChanging(value);
                    ReportPropertyChanging("Ask");
                    _Ask = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Ask");
                    OnAskChanged();
                }
            }
        }
        private global::System.Double _Ask;
        partial void OnAskChanging(global::System.Double value);
        partial void OnAskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Bid
        {
            get
            {
                return _Bid;
            }
            set
            {
                if (_Bid != value)
                {
                    OnBidChanging(value);
                    ReportPropertyChanging("Bid");
                    _Bid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Bid");
                    OnBidChanged();
                }
            }
        }
        private global::System.Double _Bid;
        partial void OnBidChanging(global::System.Double value);
        partial void OnBidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private Nullable<global::System.Int32> _Count;
        partial void OnCountChanging(Nullable<global::System.Int32> value);
        partial void OnCountChanged();

        #endregion
    
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ForexModel", Name="Bars_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Bars_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ticks
        {
            get
            {
                return _Ticks;
            }
            set
            {
                OnTicksChanging(value);
                ReportPropertyChanging("Ticks");
                _Ticks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ticks");
                OnTicksChanged();
            }
        }
        private Nullable<global::System.Int32> _Ticks;
        partial void OnTicksChanging(Nullable<global::System.Int32> value);
        partial void OnTicksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AskAvg
        {
            get
            {
                return _AskAvg;
            }
            set
            {
                OnAskAvgChanging(value);
                ReportPropertyChanging("AskAvg");
                _AskAvg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskAvg");
                OnAskAvgChanged();
            }
        }
        private Nullable<global::System.Double> _AskAvg;
        partial void OnAskAvgChanging(Nullable<global::System.Double> value);
        partial void OnAskAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AskHigh
        {
            get
            {
                return _AskHigh;
            }
            set
            {
                OnAskHighChanging(value);
                ReportPropertyChanging("AskHigh");
                _AskHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskHigh");
                OnAskHighChanged();
            }
        }
        private Nullable<global::System.Double> _AskHigh;
        partial void OnAskHighChanging(Nullable<global::System.Double> value);
        partial void OnAskHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AskLow
        {
            get
            {
                return _AskLow;
            }
            set
            {
                OnAskLowChanging(value);
                ReportPropertyChanging("AskLow");
                _AskLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskLow");
                OnAskLowChanged();
            }
        }
        private Nullable<global::System.Double> _AskLow;
        partial void OnAskLowChanging(Nullable<global::System.Double> value);
        partial void OnAskLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BidAvg
        {
            get
            {
                return _BidAvg;
            }
            set
            {
                OnBidAvgChanging(value);
                ReportPropertyChanging("BidAvg");
                _BidAvg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidAvg");
                OnBidAvgChanged();
            }
        }
        private Nullable<global::System.Double> _BidAvg;
        partial void OnBidAvgChanging(Nullable<global::System.Double> value);
        partial void OnBidAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BidHigh
        {
            get
            {
                return _BidHigh;
            }
            set
            {
                OnBidHighChanging(value);
                ReportPropertyChanging("BidHigh");
                _BidHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidHigh");
                OnBidHighChanged();
            }
        }
        private Nullable<global::System.Double> _BidHigh;
        partial void OnBidHighChanging(Nullable<global::System.Double> value);
        partial void OnBidHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BidLow
        {
            get
            {
                return _BidLow;
            }
            set
            {
                OnBidLowChanging(value);
                ReportPropertyChanging("BidLow");
                _BidLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidLow");
                OnBidLowChanged();
            }
        }
        private Nullable<global::System.Double> _BidLow;
        partial void OnBidLowChanging(Nullable<global::System.Double> value);
        partial void OnBidLowChanged();

        #endregion
    }

    #endregion
    
}
