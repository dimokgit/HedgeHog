//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace HedgeHog.Alice.Store
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ForexEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ForexEntities object using the connection string found in the 'ForexEntities' section of the application configuration file.
        /// </summary>
        public ForexEntities() : base("name=ForexEntities", "ForexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForexEntities object.
        /// </summary>
        public ForexEntities(string connectionString) : base(connectionString, "ForexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForexEntities object.
        /// </summary>
        public ForexEntities(EntityConnection connection) : base(connection, "ForexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Bar> t_Bar
        {
            get
            {
                if ((_t_Bar == null))
                {
                    _t_Bar = base.CreateObjectSet<t_Bar>("t_Bar");
                }
                return _t_Bar;
            }
        }
        private ObjectSet<t_Bar> _t_Bar;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Trade> t_Trade
        {
            get
            {
                if ((_t_Trade == null))
                {
                    _t_Trade = base.CreateObjectSet<t_Trade>("t_Trade");
                }
                return _t_Trade;
            }
        }
        private ObjectSet<t_Trade> _t_Trade;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Bar EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Bar(t_Bar t_Bar)
        {
            base.AddObject("t_Bar", t_Bar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Trade EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Trade(t_Trade t_Trade)
        {
            base.AddObject("t_Trade", t_Trade);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pair">No Metadata Documentation available.</param>
        /// <param name="period">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="spreadPeriod">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Single>> GetCorridor(global::System.String pair, Nullable<global::System.Byte> period, Nullable<global::System.DateTime> date, Nullable<global::System.Int32> spreadPeriod)
        {
            ObjectParameter pairParameter;
            if (pair != null)
            {
                pairParameter = new ObjectParameter("Pair", pair);
            }
            else
            {
                pairParameter = new ObjectParameter("Pair", typeof(global::System.String));
            }
    
            ObjectParameter periodParameter;
            if (period.HasValue)
            {
                periodParameter = new ObjectParameter("Period", period);
            }
            else
            {
                periodParameter = new ObjectParameter("Period", typeof(global::System.Byte));
            }
    
            ObjectParameter dateParameter;
            if (date.HasValue)
            {
                dateParameter = new ObjectParameter("Date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("Date", typeof(global::System.DateTime));
            }
    
            ObjectParameter spreadPeriodParameter;
            if (spreadPeriod.HasValue)
            {
                spreadPeriodParameter = new ObjectParameter("SpreadPeriod", spreadPeriod);
            }
            else
            {
                spreadPeriodParameter = new ObjectParameter("SpreadPeriod", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Single>>("GetCorridor", pairParameter, periodParameter, dateParameter, spreadPeriodParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pair">No Metadata Documentation available.</param>
        /// <param name="period">No Metadata Documentation available.</param>
        /// <param name="corridorDate">No Metadata Documentation available.</param>
        /// <param name="corridorPeriods">No Metadata Documentation available.</param>
        /// <param name="barMinutes">No Metadata Documentation available.</param>
        public ObjectResult<GetCorridorAverage_Result> GetCorridorAverage(global::System.String pair, Nullable<global::System.Byte> period, Nullable<global::System.DateTime> corridorDate, Nullable<global::System.Int32> corridorPeriods, Nullable<global::System.Int32> barMinutes)
        {
            ObjectParameter pairParameter;
            if (pair != null)
            {
                pairParameter = new ObjectParameter("Pair", pair);
            }
            else
            {
                pairParameter = new ObjectParameter("Pair", typeof(global::System.String));
            }
    
            ObjectParameter periodParameter;
            if (period.HasValue)
            {
                periodParameter = new ObjectParameter("Period", period);
            }
            else
            {
                periodParameter = new ObjectParameter("Period", typeof(global::System.Byte));
            }
    
            ObjectParameter corridorDateParameter;
            if (corridorDate.HasValue)
            {
                corridorDateParameter = new ObjectParameter("CorridorDate", corridorDate);
            }
            else
            {
                corridorDateParameter = new ObjectParameter("CorridorDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter corridorPeriodsParameter;
            if (corridorPeriods.HasValue)
            {
                corridorPeriodsParameter = new ObjectParameter("CorridorPeriods", corridorPeriods);
            }
            else
            {
                corridorPeriodsParameter = new ObjectParameter("CorridorPeriods", typeof(global::System.Int32));
            }
    
            ObjectParameter barMinutesParameter;
            if (barMinutes.HasValue)
            {
                barMinutesParameter = new ObjectParameter("BarMinutes", barMinutes);
            }
            else
            {
                barMinutesParameter = new ObjectParameter("BarMinutes", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetCorridorAverage_Result>("GetCorridorAverage", pairParameter, periodParameter, corridorDateParameter, corridorPeriodsParameter, barMinutesParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pair">No Metadata Documentation available.</param>
        /// <param name="period">No Metadata Documentation available.</param>
        /// <param name="dateEnd">No Metadata Documentation available.</param>
        /// <param name="barMinutes">No Metadata Documentation available.</param>
        /// <param name="barsCount">No Metadata Documentation available.</param>
        public ObjectResult<BarsByMinutes_Result> BarsByMinutes(global::System.String pair, Nullable<global::System.Byte> period, Nullable<global::System.DateTime> dateEnd, Nullable<global::System.Int32> barMinutes, Nullable<global::System.Int32> barsCount)
        {
            ObjectParameter pairParameter;
            if (pair != null)
            {
                pairParameter = new ObjectParameter("Pair", pair);
            }
            else
            {
                pairParameter = new ObjectParameter("Pair", typeof(global::System.String));
            }
    
            ObjectParameter periodParameter;
            if (period.HasValue)
            {
                periodParameter = new ObjectParameter("Period", period);
            }
            else
            {
                periodParameter = new ObjectParameter("Period", typeof(global::System.Byte));
            }
    
            ObjectParameter dateEndParameter;
            if (dateEnd.HasValue)
            {
                dateEndParameter = new ObjectParameter("DateEnd", dateEnd);
            }
            else
            {
                dateEndParameter = new ObjectParameter("DateEnd", typeof(global::System.DateTime));
            }
    
            ObjectParameter barMinutesParameter;
            if (barMinutes.HasValue)
            {
                barMinutesParameter = new ObjectParameter("BarMinutes", barMinutes);
            }
            else
            {
                barMinutesParameter = new ObjectParameter("BarMinutes", typeof(global::System.Int32));
            }
    
            ObjectParameter barsCountParameter;
            if (barsCount.HasValue)
            {
                barsCountParameter = new ObjectParameter("BarsCount", barsCount);
            }
            else
            {
                barsCountParameter = new ObjectParameter("BarsCount", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<BarsByMinutes_Result>("BarsByMinutes", pairParameter, periodParameter, dateEndParameter, barMinutesParameter, barsCountParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Bar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Bar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Bar object.
        /// </summary>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="askHigh">Initial value of the AskHigh property.</param>
        /// <param name="askLow">Initial value of the AskLow property.</param>
        /// <param name="askOpen">Initial value of the AskOpen property.</param>
        /// <param name="askClose">Initial value of the AskClose property.</param>
        /// <param name="bidHigh">Initial value of the BidHigh property.</param>
        /// <param name="bidLow">Initial value of the BidLow property.</param>
        /// <param name="bidOpen">Initial value of the BidOpen property.</param>
        /// <param name="bidClose">Initial value of the BidClose property.</param>
        public static t_Bar Createt_Bar(global::System.String pair, global::System.Int32 period, global::System.DateTime startDate, global::System.Single askHigh, global::System.Single askLow, global::System.Single askOpen, global::System.Single askClose, global::System.Single bidHigh, global::System.Single bidLow, global::System.Single bidOpen, global::System.Single bidClose)
        {
            t_Bar t_Bar = new t_Bar();
            t_Bar.Pair = pair;
            t_Bar.Period = period;
            t_Bar.StartDate = startDate;
            t_Bar.AskHigh = askHigh;
            t_Bar.AskLow = askLow;
            t_Bar.AskOpen = askOpen;
            t_Bar.AskClose = askClose;
            t_Bar.BidHigh = bidHigh;
            t_Bar.BidLow = bidLow;
            t_Bar.BidOpen = bidOpen;
            t_Bar.BidClose = bidClose;
            return t_Bar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                if (_Pair != value)
                {
                    OnPairChanging(value);
                    ReportPropertyChanging("Pair");
                    _Pair = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Pair");
                    OnPairChanged();
                }
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period
        {
            get
            {
                return _Period;
            }
            set
            {
                if (_Period != value)
                {
                    OnPeriodChanging(value);
                    ReportPropertyChanging("Period");
                    _Period = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Period");
                    OnPeriodChanged();
                }
            }
        }
        private global::System.Int32 _Period;
        partial void OnPeriodChanging(global::System.Int32 value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                if (_StartDate != value)
                {
                    OnStartDateChanging(value);
                    ReportPropertyChanging("StartDate");
                    _StartDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StartDate");
                    OnStartDateChanged();
                }
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single AskHigh
        {
            get
            {
                return _AskHigh;
            }
            set
            {
                OnAskHighChanging(value);
                ReportPropertyChanging("AskHigh");
                _AskHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskHigh");
                OnAskHighChanged();
            }
        }
        private global::System.Single _AskHigh;
        partial void OnAskHighChanging(global::System.Single value);
        partial void OnAskHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single AskLow
        {
            get
            {
                return _AskLow;
            }
            set
            {
                OnAskLowChanging(value);
                ReportPropertyChanging("AskLow");
                _AskLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskLow");
                OnAskLowChanged();
            }
        }
        private global::System.Single _AskLow;
        partial void OnAskLowChanging(global::System.Single value);
        partial void OnAskLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single AskOpen
        {
            get
            {
                return _AskOpen;
            }
            set
            {
                OnAskOpenChanging(value);
                ReportPropertyChanging("AskOpen");
                _AskOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskOpen");
                OnAskOpenChanged();
            }
        }
        private global::System.Single _AskOpen;
        partial void OnAskOpenChanging(global::System.Single value);
        partial void OnAskOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single AskClose
        {
            get
            {
                return _AskClose;
            }
            set
            {
                OnAskCloseChanging(value);
                ReportPropertyChanging("AskClose");
                _AskClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskClose");
                OnAskCloseChanged();
            }
        }
        private global::System.Single _AskClose;
        partial void OnAskCloseChanging(global::System.Single value);
        partial void OnAskCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single BidHigh
        {
            get
            {
                return _BidHigh;
            }
            set
            {
                OnBidHighChanging(value);
                ReportPropertyChanging("BidHigh");
                _BidHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidHigh");
                OnBidHighChanged();
            }
        }
        private global::System.Single _BidHigh;
        partial void OnBidHighChanging(global::System.Single value);
        partial void OnBidHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single BidLow
        {
            get
            {
                return _BidLow;
            }
            set
            {
                OnBidLowChanging(value);
                ReportPropertyChanging("BidLow");
                _BidLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidLow");
                OnBidLowChanged();
            }
        }
        private global::System.Single _BidLow;
        partial void OnBidLowChanging(global::System.Single value);
        partial void OnBidLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single BidOpen
        {
            get
            {
                return _BidOpen;
            }
            set
            {
                OnBidOpenChanging(value);
                ReportPropertyChanging("BidOpen");
                _BidOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidOpen");
                OnBidOpenChanged();
            }
        }
        private global::System.Single _BidOpen;
        partial void OnBidOpenChanging(global::System.Single value);
        partial void OnBidOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single BidClose
        {
            get
            {
                return _BidClose;
            }
            set
            {
                OnBidCloseChanging(value);
                ReportPropertyChanging("BidClose");
                _BidClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidClose");
                OnBidCloseChanged();
            }
        }
        private global::System.Single _BidClose;
        partial void OnBidCloseChanging(global::System.Single value);
        partial void OnBidCloseChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Trade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Trade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Trade object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="buy">Initial value of the Buy property.</param>
        /// <param name="pL">Initial value of the PL property.</param>
        /// <param name="grossPL">Initial value of the GrossPL property.</param>
        /// <param name="lot">Initial value of the Lot property.</param>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="timeOpen">Initial value of the TimeOpen property.</param>
        /// <param name="timeClose">Initial value of the TimeClose property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="commission">Initial value of the Commission property.</param>
        /// <param name="isVirtual">Initial value of the IsVirtual property.</param>
        /// <param name="corridorHeightInPips">Initial value of the CorridorHeightInPips property.</param>
        /// <param name="corridorMinutesBack">Initial value of the CorridorMinutesBack property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        public static t_Trade Createt_Trade(global::System.String id, global::System.Boolean buy, global::System.Double pL, global::System.Double grossPL, global::System.Double lot, global::System.String pair, global::System.DateTime timeOpen, global::System.DateTime timeClose, global::System.String accountId, global::System.Double commission, global::System.Boolean isVirtual, global::System.Double corridorHeightInPips, global::System.Double corridorMinutesBack, global::System.Guid sessionId)
        {
            t_Trade t_Trade = new t_Trade();
            t_Trade.Id = id;
            t_Trade.Buy = buy;
            t_Trade.PL = pL;
            t_Trade.GrossPL = grossPL;
            t_Trade.Lot = lot;
            t_Trade.Pair = pair;
            t_Trade.TimeOpen = timeOpen;
            t_Trade.TimeClose = timeClose;
            t_Trade.AccountId = accountId;
            t_Trade.Commission = commission;
            t_Trade.IsVirtual = isVirtual;
            t_Trade.CorridorHeightInPips = corridorHeightInPips;
            t_Trade.CorridorMinutesBack = corridorMinutesBack;
            t_Trade.SessionId = sessionId;
            return t_Trade;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Buy
        {
            get
            {
                return _Buy;
            }
            set
            {
                OnBuyChanging(value);
                ReportPropertyChanging("Buy");
                _Buy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Buy");
                OnBuyChanged();
            }
        }
        private global::System.Boolean _Buy;
        partial void OnBuyChanging(global::System.Boolean value);
        partial void OnBuyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PL
        {
            get
            {
                return _PL;
            }
            set
            {
                OnPLChanging(value);
                ReportPropertyChanging("PL");
                _PL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PL");
                OnPLChanged();
            }
        }
        private global::System.Double _PL;
        partial void OnPLChanging(global::System.Double value);
        partial void OnPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GrossPL
        {
            get
            {
                return _GrossPL;
            }
            set
            {
                OnGrossPLChanging(value);
                ReportPropertyChanging("GrossPL");
                _GrossPL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossPL");
                OnGrossPLChanged();
            }
        }
        private global::System.Double _GrossPL;
        partial void OnGrossPLChanging(global::System.Double value);
        partial void OnGrossPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lot
        {
            get
            {
                return _Lot;
            }
            set
            {
                OnLotChanging(value);
                ReportPropertyChanging("Lot");
                _Lot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lot");
                OnLotChanged();
            }
        }
        private global::System.Double _Lot;
        partial void OnLotChanging(global::System.Double value);
        partial void OnLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeOpen
        {
            get
            {
                return _TimeOpen;
            }
            set
            {
                OnTimeOpenChanging(value);
                ReportPropertyChanging("TimeOpen");
                _TimeOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeOpen");
                OnTimeOpenChanged();
            }
        }
        private global::System.DateTime _TimeOpen;
        partial void OnTimeOpenChanging(global::System.DateTime value);
        partial void OnTimeOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeClose
        {
            get
            {
                return _TimeClose;
            }
            set
            {
                OnTimeCloseChanging(value);
                ReportPropertyChanging("TimeClose");
                _TimeClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeClose");
                OnTimeCloseChanged();
            }
        }
        private global::System.DateTime _TimeClose;
        partial void OnTimeCloseChanging(global::System.DateTime value);
        partial void OnTimeCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.String _AccountId;
        partial void OnAccountIdChanging(global::System.String value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private global::System.Double _Commission;
        partial void OnCommissionChanging(global::System.Double value);
        partial void OnCommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVirtual
        {
            get
            {
                return _IsVirtual;
            }
            set
            {
                OnIsVirtualChanging(value);
                ReportPropertyChanging("IsVirtual");
                _IsVirtual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVirtual");
                OnIsVirtualChanged();
            }
        }
        private global::System.Boolean _IsVirtual;
        partial void OnIsVirtualChanging(global::System.Boolean value);
        partial void OnIsVirtualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeStamp;
        partial void OnTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CorridorHeightInPips
        {
            get
            {
                return _CorridorHeightInPips;
            }
            set
            {
                OnCorridorHeightInPipsChanging(value);
                ReportPropertyChanging("CorridorHeightInPips");
                _CorridorHeightInPips = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorHeightInPips");
                OnCorridorHeightInPipsChanged();
            }
        }
        private global::System.Double _CorridorHeightInPips;
        partial void OnCorridorHeightInPipsChanging(global::System.Double value);
        partial void OnCorridorHeightInPipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CorridorMinutesBack
        {
            get
            {
                return _CorridorMinutesBack;
            }
            set
            {
                OnCorridorMinutesBackChanging(value);
                ReportPropertyChanging("CorridorMinutesBack");
                _CorridorMinutesBack = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorMinutesBack");
                OnCorridorMinutesBackChanged();
            }
        }
        private global::System.Double _CorridorMinutesBack;
        partial void OnCorridorMinutesBackChanging(global::System.Double value);
        partial void OnCorridorMinutesBackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.Guid _SessionId;
        partial void OnSessionIdChanging(global::System.Guid value);
        partial void OnSessionIdChanged();

        #endregion
    
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ForexModel", Name="BarsByMinutes_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class BarsByMinutes_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> AskHigh
        {
            get
            {
                return _AskHigh;
            }
            set
            {
                OnAskHighChanging(value);
                ReportPropertyChanging("AskHigh");
                _AskHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskHigh");
                OnAskHighChanged();
            }
        }
        private Nullable<global::System.Single> _AskHigh;
        partial void OnAskHighChanging(Nullable<global::System.Single> value);
        partial void OnAskHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> AskLow
        {
            get
            {
                return _AskLow;
            }
            set
            {
                OnAskLowChanging(value);
                ReportPropertyChanging("AskLow");
                _AskLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskLow");
                OnAskLowChanged();
            }
        }
        private Nullable<global::System.Single> _AskLow;
        partial void OnAskLowChanging(Nullable<global::System.Single> value);
        partial void OnAskLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BidHigh
        {
            get
            {
                return _BidHigh;
            }
            set
            {
                OnBidHighChanging(value);
                ReportPropertyChanging("BidHigh");
                _BidHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidHigh");
                OnBidHighChanged();
            }
        }
        private Nullable<global::System.Single> _BidHigh;
        partial void OnBidHighChanging(Nullable<global::System.Single> value);
        partial void OnBidHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BidLow
        {
            get
            {
                return _BidLow;
            }
            set
            {
                OnBidLowChanging(value);
                ReportPropertyChanging("BidLow");
                _BidLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidLow");
                OnBidLowChanged();
            }
        }
        private Nullable<global::System.Single> _BidLow;
        partial void OnBidLowChanging(Nullable<global::System.Single> value);
        partial void OnBidLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> AskOpen
        {
            get
            {
                return _AskOpen;
            }
            set
            {
                OnAskOpenChanging(value);
                ReportPropertyChanging("AskOpen");
                _AskOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskOpen");
                OnAskOpenChanged();
            }
        }
        private Nullable<global::System.Single> _AskOpen;
        partial void OnAskOpenChanging(Nullable<global::System.Single> value);
        partial void OnAskOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> AskClose
        {
            get
            {
                return _AskClose;
            }
            set
            {
                OnAskCloseChanging(value);
                ReportPropertyChanging("AskClose");
                _AskClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskClose");
                OnAskCloseChanged();
            }
        }
        private Nullable<global::System.Single> _AskClose;
        partial void OnAskCloseChanging(Nullable<global::System.Single> value);
        partial void OnAskCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BidOpen
        {
            get
            {
                return _BidOpen;
            }
            set
            {
                OnBidOpenChanging(value);
                ReportPropertyChanging("BidOpen");
                _BidOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidOpen");
                OnBidOpenChanged();
            }
        }
        private Nullable<global::System.Single> _BidOpen;
        partial void OnBidOpenChanging(Nullable<global::System.Single> value);
        partial void OnBidOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BidClose
        {
            get
            {
                return _BidClose;
            }
            set
            {
                OnBidCloseChanging(value);
                ReportPropertyChanging("BidClose");
                _BidClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidClose");
                OnBidCloseChanged();
            }
        }
        private Nullable<global::System.Single> _BidClose;
        partial void OnBidCloseChanging(Nullable<global::System.Single> value);
        partial void OnBidCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateClose
        {
            get
            {
                return _DateClose;
            }
            set
            {
                OnDateCloseChanging(value);
                ReportPropertyChanging("DateClose");
                _DateClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateClose");
                OnDateCloseChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateClose;
        partial void OnDateCloseChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOpen
        {
            get
            {
                return _DateOpen;
            }
            set
            {
                OnDateOpenChanging(value);
                ReportPropertyChanging("DateOpen");
                _DateOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOpen");
                OnDateOpenChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOpen;
        partial void OnDateOpenChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOpenChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ForexModel", Name="GetCorridorAverage_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetCorridorAverage_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Avg
        {
            get
            {
                return _Avg;
            }
            set
            {
                OnAvgChanging(value);
                ReportPropertyChanging("Avg");
                _Avg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Avg");
                OnAvgChanged();
            }
        }
        private Nullable<global::System.Double> _Avg;
        partial void OnAvgChanging(Nullable<global::System.Double> value);
        partial void OnAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> StDev
        {
            get
            {
                return _StDev;
            }
            set
            {
                OnStDevChanging(value);
                ReportPropertyChanging("StDev");
                _StDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StDev");
                OnStDevChanged();
            }
        }
        private Nullable<global::System.Double> _StDev;
        partial void OnStDevChanging(Nullable<global::System.Double> value);
        partial void OnStDevChanged();

        #endregion
    }

    #endregion
    
}
