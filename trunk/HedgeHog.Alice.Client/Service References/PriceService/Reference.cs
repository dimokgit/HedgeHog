//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HedgeHog.Alice.Client.PriceService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PriceStatistics", Namespace="http://schemas.datacontract.org/2004/07/HedgeHog.Alice.Server")]
    [System.SerializableAttribute()]
    public partial class PriceStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BidHighAskLowSpreadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BidHighAskLowSpread {
            get {
                return this.BidHighAskLowSpreadField;
            }
            set {
                if ((this.BidHighAskLowSpreadField.Equals(value) != true)) {
                    this.BidHighAskLowSpreadField = value;
                    this.RaisePropertyChanged("BidHighAskLowSpread");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PriceService.IPriceService")]
    public interface IPriceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPriceService/FillPrice", ReplyAction="http://tempuri.org/IPriceService/FillPriceResponse")]
        HedgeHog.Bars.Rate[] FillPrice(string pair, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPriceService/FillPrice", ReplyAction="http://tempuri.org/IPriceService/FillPriceResponse")]
        System.IAsyncResult BeginFillPrice(string pair, System.DateTime startDate, System.AsyncCallback callback, object asyncState);
        
        HedgeHog.Bars.Rate[] EndFillPrice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPriceService/PriceStatistics", ReplyAction="http://tempuri.org/IPriceService/PriceStatisticsResponse")]
        HedgeHog.Alice.Client.PriceService.PriceStatistics PriceStatistics(string pair);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPriceService/PriceStatistics", ReplyAction="http://tempuri.org/IPriceService/PriceStatisticsResponse")]
        System.IAsyncResult BeginPriceStatistics(string pair, System.AsyncCallback callback, object asyncState);
        
        HedgeHog.Alice.Client.PriceService.PriceStatistics EndPriceStatistics(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPriceServiceChannel : HedgeHog.Alice.Client.PriceService.IPriceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FillPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FillPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HedgeHog.Bars.Rate[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HedgeHog.Bars.Rate[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PriceStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PriceStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HedgeHog.Alice.Client.PriceService.PriceStatistics Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HedgeHog.Alice.Client.PriceService.PriceStatistics)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PriceServiceClient : System.ServiceModel.ClientBase<HedgeHog.Alice.Client.PriceService.IPriceService>, HedgeHog.Alice.Client.PriceService.IPriceService {
        
        private BeginOperationDelegate onBeginFillPriceDelegate;
        
        private EndOperationDelegate onEndFillPriceDelegate;
        
        private System.Threading.SendOrPostCallback onFillPriceCompletedDelegate;
        
        private BeginOperationDelegate onBeginPriceStatisticsDelegate;
        
        private EndOperationDelegate onEndPriceStatisticsDelegate;
        
        private System.Threading.SendOrPostCallback onPriceStatisticsCompletedDelegate;
        
        public PriceServiceClient() {
        }
        
        public PriceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PriceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PriceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PriceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<FillPriceCompletedEventArgs> FillPriceCompleted;
        
        public event System.EventHandler<PriceStatisticsCompletedEventArgs> PriceStatisticsCompleted;
        
        public HedgeHog.Bars.Rate[] FillPrice(string pair, System.DateTime startDate) {
            return base.Channel.FillPrice(pair, startDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFillPrice(string pair, System.DateTime startDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFillPrice(pair, startDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HedgeHog.Bars.Rate[] EndFillPrice(System.IAsyncResult result) {
            return base.Channel.EndFillPrice(result);
        }
        
        private System.IAsyncResult OnBeginFillPrice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pair = ((string)(inValues[0]));
            System.DateTime startDate = ((System.DateTime)(inValues[1]));
            return this.BeginFillPrice(pair, startDate, callback, asyncState);
        }
        
        private object[] OnEndFillPrice(System.IAsyncResult result) {
            HedgeHog.Bars.Rate[] retVal = this.EndFillPrice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFillPriceCompleted(object state) {
            if ((this.FillPriceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FillPriceCompleted(this, new FillPriceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FillPriceAsync(string pair, System.DateTime startDate) {
            this.FillPriceAsync(pair, startDate, null);
        }
        
        public void FillPriceAsync(string pair, System.DateTime startDate, object userState) {
            if ((this.onBeginFillPriceDelegate == null)) {
                this.onBeginFillPriceDelegate = new BeginOperationDelegate(this.OnBeginFillPrice);
            }
            if ((this.onEndFillPriceDelegate == null)) {
                this.onEndFillPriceDelegate = new EndOperationDelegate(this.OnEndFillPrice);
            }
            if ((this.onFillPriceCompletedDelegate == null)) {
                this.onFillPriceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFillPriceCompleted);
            }
            base.InvokeAsync(this.onBeginFillPriceDelegate, new object[] {
                        pair,
                        startDate}, this.onEndFillPriceDelegate, this.onFillPriceCompletedDelegate, userState);
        }
        
        public HedgeHog.Alice.Client.PriceService.PriceStatistics PriceStatistics(string pair) {
            return base.Channel.PriceStatistics(pair);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPriceStatistics(string pair, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPriceStatistics(pair, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HedgeHog.Alice.Client.PriceService.PriceStatistics EndPriceStatistics(System.IAsyncResult result) {
            return base.Channel.EndPriceStatistics(result);
        }
        
        private System.IAsyncResult OnBeginPriceStatistics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pair = ((string)(inValues[0]));
            return this.BeginPriceStatistics(pair, callback, asyncState);
        }
        
        private object[] OnEndPriceStatistics(System.IAsyncResult result) {
            HedgeHog.Alice.Client.PriceService.PriceStatistics retVal = this.EndPriceStatistics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPriceStatisticsCompleted(object state) {
            if ((this.PriceStatisticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PriceStatisticsCompleted(this, new PriceStatisticsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PriceStatisticsAsync(string pair) {
            this.PriceStatisticsAsync(pair, null);
        }
        
        public void PriceStatisticsAsync(string pair, object userState) {
            if ((this.onBeginPriceStatisticsDelegate == null)) {
                this.onBeginPriceStatisticsDelegate = new BeginOperationDelegate(this.OnBeginPriceStatistics);
            }
            if ((this.onEndPriceStatisticsDelegate == null)) {
                this.onEndPriceStatisticsDelegate = new EndOperationDelegate(this.OnEndPriceStatistics);
            }
            if ((this.onPriceStatisticsCompletedDelegate == null)) {
                this.onPriceStatisticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPriceStatisticsCompleted);
            }
            base.InvokeAsync(this.onBeginPriceStatisticsDelegate, new object[] {
                        pair}, this.onEndPriceStatisticsDelegate, this.onPriceStatisticsCompletedDelegate, userState);
        }
    }
}
