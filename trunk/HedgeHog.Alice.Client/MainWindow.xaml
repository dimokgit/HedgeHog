<Window x:Class="HedgeHog.Alice.Client.MainWindow"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:tlrkInput="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:hh="clr-namespace:HedgeHog;assembly=HedgeHog.Lib"
      xmlns:hhmu="clr-namespace:HedgeHog.Markup;assembly=HedgeHog.Lib"
      mc:Ignorable="d"

        xmlns:l="clr-namespace:HedgeHog.Alice.Client"
        xmlns:ui="clr-namespace:HedgeHog.Alice.Client.UI.Controls"
        xmlns:uiAccounts="clr-namespace:HedgeHog.Alice.Client.UI.Controls"
        xmlns:u="clr-namespace:HedgeHog.UI;assembly=HedgeHog.UI"
        xmlns:state="clr-namespace:WpfPersist;assembly=Persistance"
        xmlns:gala="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.WPF4"
        xmlns:galaCmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
        Left="{state:UserSettings Default=100}"
    Top="{state:UserSettings Default=100}"
  Height="{state:UserSettings Default=200}" Width="{state:UserSettings Default=500}"
        DataContext="{DynamicResource DataModel}"
        d:DataContext="{DynamicResource DataModelDesign}"
        Title="{Binding Title,StringFormat=Alice In: {0}}" xmlns:my="clr-namespace:HedgeHog.Alice.Client.Models" Loaded="Window_Loaded">
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="UI/TradesOnServer.xaml"/>
      </ResourceDictionary.MergedDictionaries>
      <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
        <Setter Property="Padding" Value="0" />
      </Style>
      <DataTemplate x:Key="StopCellEditTemplate">
        <tlrkInput:RadNumericUpDown Value="{Binding Stop,Mode=TwoWay}" />
      </DataTemplate>
      <DataTemplate x:Key="GrossCellTemplate">
        <Label Content="{Binding GrossPL,StringFormat=c0}" ContentStringFormat="c0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Background="{Binding GrossPL,Converter={StaticResource DoubleToColorConverter},ConverterParameter=Transparent|LightSalmon|LightGreen}" />
      </DataTemplate>

      <!--TradesOnServer-->
      <DataTemplate x:Key="TradesOnServer">
        <StackPanel>
          <StackPanel.Resources>
            <Style TargetType="DataGrid" BasedOn="{StaticResource ReadOnlyDataGridStyle}"/>
          </StackPanel.Resources>
          <WrapPanel>
            <Button Command="{Binding CloseAllServerTradesCommand}" HorizontalAlignment="Left">Close All</Button>
          </WrapPanel>
          <!--Server Trades-->
          <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding ServerTradesList}" >
            <DataGrid.Columns>
              <DataGridTemplateColumn CellTemplate="{StaticResource CloseServerTradeTemplate}" Header="Id"/>
              <DataGridTextColumn Header="Pair" Binding="{Binding Pair}"/>
              <DataGridTextColumn Header="Time" Binding="{Binding Time,StringFormat='dd HH:mm:ss'}"/>
              <DataGridTextColumn Header="Lots" Binding="{Binding Lots}"/>
              <DataGridTextColumn Header="B/S"  Binding="{Binding Buy,Converter={StaticResource BoolToSrtingConverter},ConverterParameter=|S|B}">
                <DataGridTextColumn.ElementStyle>
                  <Style TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                  </Style>
                </DataGridTextColumn.ElementStyle>
              </DataGridTextColumn>
              <DataGridTemplateColumn Header="Stop" >
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                      <Button Content="&lt;" CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
                        Command="{Binding DataContext.DecreaseStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                      <Label Content="{Binding Stop}" ContentStringFormat="{Binding PointSizeFormat}" Background="White">
                      </Label>
                      <Button Content=">" CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
                        Command="{Binding DataContext.EncreaseStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                    </StackPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="S ∑" Binding="{Binding StopAmount,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="S ∑∑" Binding="{Binding UnKnown.BalanceOnStop,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTemplateColumn Header="Limit" >
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                      <Button Content="&lt;" CommandParameter="{Binding BindsDirectlyToSource=True}" 
                        Command="{Binding DataContext.DecreaseLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                      <Label Content="{Binding Limit}" ContentStringFormat="{Binding PointSizeFormat}" Background="White"/>
                      <Button Content=">" CommandParameter="{Binding BindsDirectlyToSource=True}" 
                        Command="{Binding DataContext.IncreaseLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                    </StackPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="L ∑" Binding="{Binding LimitAmount,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="L ∑∑" Binding="{Binding UnKnown.BalanceOnLimit,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="Pips" Binding="{Binding PL}"/>
              <DataGridTemplateColumn Header="$$$" CellTemplate="{StaticResource GrossCellTemplate}"/>
            </DataGrid.Columns>
          </DataGrid>
          <!--Server Orders-->
          <Label Content="Orders"/>
          <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding OrdersList}" >
            <DataGrid.Columns>
              <DataGridTextColumn Header="Pair" Binding="{Binding Pair}"/>
              <DataGridTextColumn Header="BS" Binding="{Binding BS}"/>
              <DataGridTextColumn Header="Rate" Binding="{Binding Rate}"/>
              <DataGridTextColumn Header="Lot" Binding="{Binding Lot}"/>
              <DataGridTextColumn Header="Stop" Binding="{Binding Stop}"/>
              <DataGridTextColumn Header="Limit" Binding="{Binding Limit}"/>
              <DataGridTextColumn Header="FixStatus" Binding="{Binding Status}"/>
              <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
              <DataGridTextColumn Header="L ∑" Binding="{Binding LimitAmount,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="S ∑" Binding="{Binding StopAmount,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="Time" Binding="{Binding Time,StringFormat='dd HH:mm:ss'}"/>
            </DataGrid.Columns>
          </DataGrid>
        </StackPanel>
      </DataTemplate>
      <DataTemplate x:Key="DeleteAccountCellTemplate">
        <Button Content="X" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.DeleteTradingAccountCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
      </DataTemplate>

      <DataTemplate x:Key="CloseServerTradeTemplate">
        <Button Content="{Binding Id}" CommandParameter="{Binding Id}"
            Command="{Binding DataContext.CloseServerTradeCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
      </DataTemplate>

    </ResourceDictionary>
  </Window.Resources>
    <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <StackPanel Background="{Binding IsLoggedIn,Converter={StaticResource BoolToColorConverter},ConverterParameter=transparent|Pink|#3A98EF71}">
          <WrapPanel>
            <TextBlock>Server:</TextBlock>
        <u:TextBox2 MinWidth="50" Text2="{Binding ServerAddress,Mode=TwoWay}" Text="{state:UserSettings Default=localhost:9200/}" x:Name="ServerAddress"/>
            <Label Content="{Binding ServerTime}" ContentStringFormat="HH:mm:ss" ToolTip="Server Time" VerticalContentAlignment="Center" VerticalAlignment="Center" BorderBrush="Gray" BorderThickness="1"/>
            <ComboBox SelectedValue="{Binding AliceMode,Mode=TwoWay}" SelectedIndex="{state:UserSettings Default=0}" ItemsSource="{hhmu:EnumValues l:AliceModes}" Name="AliceMode"/>
        <!---->
        
        <Button Command="{Binding OpenNewServerAccountCommand}">New Rabbit</Button>
        <Button Command="{Binding AddNewSlaveAccountCommand}">Add Alice</Button>
      </WrapPanel>
      <ui:AccountLoginView AccountLoginCommand="{Binding AccountLoginCommand}" OpenNewAccountCommand="{Binding OpenNewLocalAccountCommand}"
                           IsEnabled="{Binding IsNotInLogin}"
        TradingAccount="{Binding TradingMaster.AccountId,Mode=TwoWay}" TradingPassword="{Binding TradingMaster.Password,Mode=TwoWay}" TradingDemo="{Binding TradingMaster.IsDemo,Mode=TwoWay}"/>
      <!--Account Manager-->
      <Expander Header="Accounts Manager">
        <StackPanel>
          <!--Slave Account Infos-->
      <DataGrid AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding TradingAccountsSet}" RowDetailsVisibilityMode="VisibleWhenSelected">
        <DataGrid.Columns>
          <DataGridTemplateColumn CellTemplate="{StaticResource DeleteAccountCellTemplate}"></DataGridTemplateColumn>
          <DataGridTextColumn Binding="{Binding Path=AccountId}" Header="Account" />
          <DataGridTextColumn Binding="{Binding Path=Password}" Header="Password" Foreground="Transparent" />
          <DataGridCheckBoxColumn Binding="{Binding Path=IsDemo}" Header="Demo" Width="SizeToHeader" />
          <DataGridTextColumn Binding="{Binding Path=TradeRatio}" Header="M:S" ToolTipService.ToolTip="Trade Ratio" />
          <DataGridCheckBoxColumn Binding="{Binding Path=IsMaster}" Header="Master" Width="SizeToHeader" />
          <DataGridTextColumn Binding="{Binding Path=EntityState}" Header="State" />
          <DataGridTextColumn Binding="{Binding Path=Id}" Header="Id" />
        </DataGrid.Columns>
            </DataGrid>
      <Button Command="{Binding SaveTradingSlavesCommand}">Save</Button>
        </StackPanel>
      </Expander>
      <!--<DataGrid AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource tradingAccountsViewSource}}" Name="tradingAccountsDataGrid" RowDetailsVisibilityMode="VisibleWhenSelected"><DataGrid.Columns><DataGridTextColumn x:Name="idColumn" Binding="{Binding Path=Id}" Header="Id" /><DataGridTextColumn x:Name="passwordColumn" Binding="{Binding Path=Password}" Header="Password" /><DataGridTextColumn x:Name="masterIdColumn" Binding="{Binding Path=MasterId}" Header="Master Id" /><DataGridCheckBoxColumn x:Name="isDemoColumn" Binding="{Binding Path=IsDemo}" Header="Is Demo" Width="SizeToHeader" /></DataGrid.Columns></DataGrid></Expander>-->
      <l:RemoteControlView DataContext="{Binding RemoteController}" />
    </StackPanel>

      <!--Master Account-->
    <Expander Grid.Row="1" ContentTemplate="{StaticResource TradesOnServer}" IsExpanded="True" Content="{Binding}">
      <Expander.Header>
        <StackPanel>
          <TextBlock>Master Account</TextBlock>
          <ui:AccountInfo DataContext="{Binding ServerAccountRow}"/>
        </StackPanel>
      </Expander.Header>
    </Expander>

        <!--Slave Accounts-->
    <DataGrid Grid.Row="2" ItemsSource="{Binding SlaveModels}" AutoGenerateColumns="False" EnableRowVirtualization="False" HorizontalAlignment="Left" RowDetailsVisibilityMode="VisibleWhenSelected" VerticalAlignment="Top" CanUserAddRows="False" CanUserDeleteRows="False" KeyDown="SlaveModelGrid_KeyDown" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" FontWeight="Bold">
      <DataGrid.Columns>
        <DataGridTextColumn Header="Account" Binding="{Binding AccountModel.ID,Mode=OneWay}" IsReadOnly="True"/>
        <DataGridTextColumn Header="Balance" Binding="{Binding AccountModel.Balance,StringFormat=c0}" IsReadOnly="True"/>
        <DataGridTextColumn Header="Equity" Binding="{Binding AccountModel.Equity,StringFormat=c0}" IsReadOnly="True"/>
          <DataGridTextColumn Header="Pos" Binding="{Binding AccountModel.Trades.Length,Mode=OneWay}" IsReadOnly="True" ToolTipService.ToolTip="Total Positions"/>
        <DataGridTextColumn Header="Margin" Binding="{Binding AccountModel.UsableMargin,StringFormat=c0}" IsReadOnly="True"/>
        <DataGridTextColumn Binding="{Binding AccountModel.PipsToMC}" IsReadOnly="True">
            <DataGridTextColumn.HeaderTemplate>
              <DataTemplate>
                <TextBlock Text="PMC" ToolTip="Pips to Margin Call"/>
              </DataTemplate>
            </DataGridTextColumn.HeaderTemplate>
          </DataGridTextColumn>
        <DataGridTextColumn Header="Pips" Binding="{Binding AccountModel.PL,StringFormat=n1}" IsReadOnly="True"/>
        <DataGridTextColumn Header="$$$" Binding="{Binding AccountModel.Gross,StringFormat=c0}" IsReadOnly="True"/>
        <DataGridTextColumn Header="Ratio" Binding="{Binding AccountModel.TradingRatio,StringFormat=p0}"/>
      </DataGrid.Columns>
      <DataGrid.RowDetailsTemplate>
          <DataTemplate>
            <uiAccounts:SlaveAccount
                  SlaveModel="{Binding BindsDirectlyToSource=True}"
                  MasterModel="{Binding DataContext,RelativeSource={RelativeSource AncestorType=Grid}}"
                               TradingAccount="{Binding TradingAccount,Mode=TwoWay}"
                               TradingPassword="{Binding TradingPassword,Mode=TwoWay}"
                               TradingDemo="{Binding TradingDemo,Mode=TwoWay}" 
                               TradeRatio="{Binding ServerToLocalRatioValue,Mode=TwoWay}"
                               Background="BlanchedAlmond"/>
          </DataTemplate>
        </DataGrid.RowDetailsTemplate>
      </DataGrid>
    <Expander Header="Log" Grid.Row="10" IsExpanded="{Binding IsLogExpanded,Mode=OneWay}" Padding="0" Grid.RowSpan="2">
    <Label Content="{Binding LogText}" BorderBrush="Gray" BorderThickness="1"></Label>
    </Expander>
  </Grid>
</Window>
