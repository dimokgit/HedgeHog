//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace HedgeHog.Alice.Client.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AliceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AliceEntities object using the connection string found in the 'AliceEntities' section of the application configuration file.
        /// </summary>
        public AliceEntities() : base("name=AliceEntities", "AliceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AliceEntities object.
        /// </summary>
        public AliceEntities(string connectionString) : base(connectionString, "AliceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AliceEntities object.
        /// </summary>
        public AliceEntities(EntityConnection connection) : base(connection, "AliceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TradingAccount> TradingAccounts
        {
            get
            {
                if ((_TradingAccounts == null))
                {
                    _TradingAccounts = base.CreateObjectSet<TradingAccount>("TradingAccounts");
                }
                return _TradingAccounts;
            }
        }
        private ObjectSet<TradingAccount> _TradingAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TradingMacro> TradingMacroes
        {
            get
            {
                if ((_TradingMacroes == null))
                {
                    _TradingMacroes = base.CreateObjectSet<TradingMacro>("TradingMacroes");
                }
                return _TradingMacroes;
            }
        }
        private ObjectSet<TradingMacro> _TradingMacroes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TradingAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTradingAccounts(TradingAccount tradingAccount)
        {
            base.AddObject("TradingAccounts", tradingAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TradingMacroes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTradingMacroes(TradingMacro tradingMacro)
        {
            base.AddObject("TradingMacroes", tradingMacro);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AliceModel", Name="TradingAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TradingAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TradingAccount object.
        /// </summary>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isDemo">Initial value of the IsDemo property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isMaster">Initial value of the IsMaster property.</param>
        /// <param name="tradeRatio">Initial value of the TradeRatio property.</param>
        public static TradingAccount CreateTradingAccount(global::System.String password, global::System.Boolean isDemo, global::System.Guid id, global::System.Boolean isMaster, global::System.String tradeRatio)
        {
            TradingAccount tradingAccount = new TradingAccount();
            tradingAccount.Password = password;
            tradingAccount.IsDemo = isDemo;
            tradingAccount.Id = id;
            tradingAccount.IsMaster = isMaster;
            tradingAccount.TradeRatio = tradeRatio;
            return tradingAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MasterId
        {
            get
            {
                return _MasterId;
            }
            set
            {
                OnMasterIdChanging(value);
                ReportPropertyChanging("MasterId");
                _MasterId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MasterId");
                OnMasterIdChanged();
            }
        }
        private global::System.String _MasterId;
        partial void OnMasterIdChanging(global::System.String value);
        partial void OnMasterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDemo
        {
            get
            {
                return _IsDemo;
            }
            set
            {
                OnIsDemoChanging(value);
                ReportPropertyChanging("IsDemo");
                _IsDemo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDemo");
                OnIsDemoChanged();
            }
        }
        private global::System.Boolean _IsDemo;
        partial void OnIsDemoChanging(global::System.Boolean value);
        partial void OnIsDemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.String _AccountId;
        partial void OnAccountIdChanging(global::System.String value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMaster
        {
            get
            {
                return _IsMaster;
            }
            set
            {
                OnIsMasterChanging(value);
                ReportPropertyChanging("IsMaster");
                _IsMaster = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMaster");
                OnIsMasterChanged();
            }
        }
        private global::System.Boolean _IsMaster;
        partial void OnIsMasterChanging(global::System.Boolean value);
        partial void OnIsMasterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TradeRatio
        {
            get
            {
                return _TradeRatio;
            }
            set
            {
                OnTradeRatioChanging(value);
                ReportPropertyChanging("TradeRatio");
                _TradeRatio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TradeRatio");
                OnTradeRatioChanged();
            }
        }
        private global::System.String _TradeRatio;
        partial void OnTradeRatioChanging(global::System.String value);
        partial void OnTradeRatioChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AliceModel", Name="TradingMacro")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TradingMacro : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TradingMacro object.
        /// </summary>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="tradingRatio">Initial value of the TradingRatio property.</param>
        /// <param name="uID">Initial value of the UID property.</param>
        /// <param name="limitBar">Initial value of the LimitBar property.</param>
        /// <param name="currentLoss">Initial value of the CurrentLoss property.</param>
        /// <param name="reverseOnProfit">Initial value of the ReverseOnProfit property.</param>
        /// <param name="freezLimit">Initial value of the FreezLimit property.</param>
        /// <param name="corridorRatio">Initial value of the CorridorRatio property.</param>
        /// <param name="corridorMethod">Initial value of the CorridorMethod property.</param>
        /// <param name="corridorIterations">Initial value of the CorridorIterations property.</param>
        public static TradingMacro CreateTradingMacro(global::System.String pair, global::System.Double tradingRatio, global::System.Guid uID, global::System.Int32 limitBar, global::System.Double currentLoss, global::System.Boolean reverseOnProfit, global::System.Int32 freezLimit, global::System.Double corridorRatio, global::System.Int32 corridorMethod, global::System.Int32 corridorIterations)
        {
            TradingMacro tradingMacro = new TradingMacro();
            tradingMacro.Pair = pair;
            tradingMacro.TradingRatio = tradingRatio;
            tradingMacro.UID = uID;
            tradingMacro.LimitBar = limitBar;
            tradingMacro.CurrentLoss = currentLoss;
            tradingMacro.ReverseOnProfit = reverseOnProfit;
            tradingMacro.FreezLimit = freezLimit;
            tradingMacro.CorridorRatio = corridorRatio;
            tradingMacro.CorridorMethod = corridorMethod;
            tradingMacro.CorridorIterations = corridorIterations;
            return tradingMacro;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TradingRatio
        {
            get
            {
                return _TradingRatio;
            }
            set
            {
                OnTradingRatioChanging(value);
                ReportPropertyChanging("TradingRatio");
                _TradingRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradingRatio");
                OnTradingRatioChanged();
            }
        }
        private global::System.Double _TradingRatio;
        partial void OnTradingRatioChanging(global::System.Double value);
        partial void OnTradingRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LimitBar
        {
            get
            {
                return _LimitBar;
            }
            set
            {
                OnLimitBarChanging(value);
                ReportPropertyChanging("LimitBar");
                _LimitBar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitBar");
                OnLimitBarChanged();
            }
        }
        private global::System.Int32 _LimitBar;
        partial void OnLimitBarChanging(global::System.Int32 value);
        partial void OnLimitBarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CurrentLoss
        {
            get
            {
                return _CurrentLoss;
            }
            set
            {
                OnCurrentLossChanging(value);
                ReportPropertyChanging("CurrentLoss");
                _CurrentLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentLoss");
                OnCurrentLossChanged();
            }
        }
        private global::System.Double _CurrentLoss;
        partial void OnCurrentLossChanging(global::System.Double value);
        partial void OnCurrentLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReverseOnProfit
        {
            get
            {
                return _ReverseOnProfit;
            }
            set
            {
                OnReverseOnProfitChanging(value);
                ReportPropertyChanging("ReverseOnProfit");
                _ReverseOnProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReverseOnProfit");
                OnReverseOnProfitChanged();
            }
        }
        private global::System.Boolean _ReverseOnProfit;
        partial void OnReverseOnProfitChanging(global::System.Boolean value);
        partial void OnReverseOnProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FreezLimit
        {
            get
            {
                return _FreezLimit;
            }
            set
            {
                OnFreezLimitChanging(value);
                ReportPropertyChanging("FreezLimit");
                _FreezLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreezLimit");
                OnFreezLimitChanged();
            }
        }
        private global::System.Int32 _FreezLimit;
        partial void OnFreezLimitChanging(global::System.Int32 value);
        partial void OnFreezLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CorridorRatio
        {
            get
            {
                return _CorridorRatio;
            }
            set
            {
                OnCorridorRatioChanging(value);
                ReportPropertyChanging("CorridorRatio");
                _CorridorRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorRatio");
                OnCorridorRatioChanged();
            }
        }
        private global::System.Double _CorridorRatio;
        partial void OnCorridorRatioChanging(global::System.Double value);
        partial void OnCorridorRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorMethod
        {
            get
            {
                return _CorridorMethod;
            }
            set
            {
                OnCorridorMethodChanging(value);
                ReportPropertyChanging("CorridorMethod");
                _CorridorMethod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorMethod");
                OnCorridorMethodChanged();
            }
        }
        private global::System.Int32 _CorridorMethod;
        partial void OnCorridorMethodChanging(global::System.Int32 value);
        partial void OnCorridorMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorIterations
        {
            get
            {
                return _CorridorIterations;
            }
            set
            {
                OnCorridorIterationsChanging(value);
                ReportPropertyChanging("CorridorIterations");
                _CorridorIterations = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorIterations");
                OnCorridorIterationsChanged();
            }
        }
        private global::System.Int32 _CorridorIterations;
        partial void OnCorridorIterationsChanging(global::System.Int32 value);
        partial void OnCorridorIterationsChanged();

        #endregion
    
    }

    #endregion
    
}
