//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Manheim.Model
{
    public partial class Auction
    {
        #region Primitive Properties
    
        public virtual int AuctionId
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual int PreSaleManagerId
        {
            get { return _preSaleManagerId; }
            set
            {
                if (_preSaleManagerId != value)
                {
                    if (PreSaleManager != null && PreSaleManager.ManagerId != value)
                    {
                        PreSaleManager = null;
                    }
                    _preSaleManagerId = value;
                }
            }
        }
        private int _preSaleManagerId;
    
        public virtual string StateCode
        {
            get { return _stateCode; }
            set
            {
                if (_stateCode != value)
                {
                    if (State != null && State.StateCode != value)
                    {
                        State = null;
                    }
                    _stateCode = value;
                }
            }
        }
        private string _stateCode;

        #endregion
        #region Navigation Properties
    
        public virtual Manager PreSaleManager
        {
            get { return _preSaleManager; }
            set
            {
                if (!ReferenceEquals(_preSaleManager, value))
                {
                    var previousValue = _preSaleManager;
                    _preSaleManager = value;
                    FixupPreSaleManager(previousValue);
                }
            }
        }
        private Manager _preSaleManager;
    
        public virtual State State
        {
            get { return _state; }
            set
            {
                if (!ReferenceEquals(_state, value))
                {
                    var previousValue = _state;
                    _state = value;
                    FixupState(previousValue);
                }
            }
        }
        private State _state;
    
        public virtual ICollection<PreSale> PreSales
        {
            get
            {
                if (_preSales == null)
                {
                    var newCollection = new FixupCollection<PreSale>();
                    newCollection.CollectionChanged += FixupPreSales;
                    _preSales = newCollection;
                }
                return _preSales;
            }
            set
            {
                if (!ReferenceEquals(_preSales, value))
                {
                    var previousValue = _preSales as FixupCollection<PreSale>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPreSales;
                    }
                    _preSales = value;
                    var newValue = value as FixupCollection<PreSale>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPreSales;
                    }
                }
            }
        }
        private ICollection<PreSale> _preSales;

        #endregion
        #region Association Fixup
    
        private void FixupPreSaleManager(Manager previousValue)
        {
            if (PreSaleManager != null)
            {
                if (PreSaleManagerId != PreSaleManager.ManagerId)
                {
                    PreSaleManagerId = PreSaleManager.ManagerId;
                }
            }
        }
    
        private void FixupState(State previousValue)
        {
            if (State != null)
            {
                if (StateCode != State.StateCode)
                {
                    StateCode = State.StateCode;
                }
            }
        }
    
        private void FixupPreSales(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PreSale item in e.NewItems)
                {
                    item.Auction = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PreSale item in e.OldItems)
                {
                    if (ReferenceEquals(item.Auction, this))
                    {
                        item.Auction = null;
                    }
                }
            }
        }

        #endregion
    }
}
