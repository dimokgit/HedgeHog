



// ReSharper disable PossibleNullReferenceException
/*
This code was automatically generated by Daniel Vaughan's metadata generator.
Changes to this file may be lost if regeneration occurs.
http://danielvaughan.orpius.com
*/
using System.Windows;
using System.Windows.Media.Imaging;
using System;
using System.Linq;
using System.Linq.Expressions;


#pragma warning disable 
namespace HedgeHog.Alice.Client.FileMetadata.Metadata
{
    /// <summary>Metadata for File app.config</summary>
    public static class AppConfig    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/app.config", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/app.config"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/app.config")); } }


    }

    /// <summary>Metadata for XAML App.xaml</summary>
    public static class AppXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/App.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/App.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/App.xaml")); } }

            /// <summary>Represents x:Key="BoolToColorConverter"/></summary>
            public static string BoolToColorConverterKey { get { return "BoolToColorConverter"; } }

            /// <summary>Represents x:Key="ProfitToColorConverter"/></summary>
            public static string ProfitToColorConverterKey { get { return "ProfitToColorConverter"; } }

            /// <summary>Represents x:Key="DateTimeConverter"/></summary>
            public static string DateTimeConverterKey { get { return "DateTimeConverter"; } }

            /// <summary>Represents x:Key="BoolToSrtingConverter"/></summary>
            public static string BoolToSrtingConverterKey { get { return "BoolToSrtingConverter"; } }

            /// <summary>Represents x:Key="PassThroughConverter"/></summary>
            public static string PassThroughConverterKey { get { return "PassThroughConverter"; } }

            /// <summary>Represents x:Key="ReadOnlyDataGridStyle"/></summary>
            public static string ReadOnlyDataGridStyleKey { get { return "ReadOnlyDataGridStyle"; } }


    }

    /// <summary>Metadata for File Controls</summary>
    public static class Controls    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Controls", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Controls"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Controls")); } }


    }

    /// <summary>Metadata for File Data</summary>
    public static class Data    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Data", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Data"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Data")); } }


    }

    /// <summary>Metadata for XAML Dictionary1.xaml</summary>
    public static class Dictionary1Xaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Dictionary1.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Dictionary1.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Dictionary1.xaml")); } }


    }

    /// <summary>Metadata for XAML MainWindow.xaml</summary>
    public static class MainWindowXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/MainWindow.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/MainWindow.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/MainWindow.xaml")); } }

            /// <summary>Represents x:Key="StopCellEditTemplate"/></summary>
            public static string StopCellEditTemplateKey { get { return "StopCellEditTemplate"; } }

            /// <summary>Represents x:Key="GrossCellTemplate"/></summary>
            public static string GrossCellTemplateKey { get { return "GrossCellTemplate"; } }

            /// <summary>Represents x:Key="TradesOnServer"/></summary>
            public static string TradesOnServerKey { get { return "TradesOnServer"; } }

            /// <summary>Represents x:Key="DeleteAccountCellTemplate"/></summary>
            public static string DeleteAccountCellTemplateKey { get { return "DeleteAccountCellTemplate"; } }

            /// <summary>Represents x:Key="CloseServerTradeTemplate"/></summary>
            public static string CloseServerTradeTemplateKey { get { return "CloseServerTradeTemplate"; } }


    }

    /// <summary>Metadata for File MetadataGeneration.tt</summary>
    public static class MetadataGenerationTt    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/MetadataGeneration.tt", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/MetadataGeneration.tt"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/MetadataGeneration.tt")); } }


    }

}


namespace HedgeHog.Alice.Client.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.App"/></summary>
    public static class AppMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.App.IsInDesignMode"/></summary>
        public const string IsInDesignMode = "IsInDesignMode";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.App.container"/></summary>
        public const string container = "container";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.App.ChildWindows"/></summary>
        public const string ChildWindows = "ChildWindows";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.App.App_DispatcherUnhandledException"/></summary>
        public const string App_DispatcherUnhandledException = "App_DispatcherUnhandledException";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.App.Application_Exit"/></summary>
        public const string Application_Exit = "Application_Exit";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.App.OnStartup"/></summary>
        public const string OnStartup = "OnStartup";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.App.OnExit"/></summary>
        public const string OnExit = "OnExit";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.App.IsInDesignMode"/></summary>
        public static PropertyPath IsInDesignModePath { get { return new PropertyPath("IsInDesignMode"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.ProfitToColorConverter"/></summary>
    public static class ProfitToColorConverterMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.ProfitToColorConverter.defaultInstance"/></summary>
        public const string defaultInstance = "defaultInstance";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.ProfitToColorConverter.Default"/></summary>
        public const string Default = "Default";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.ProfitToColorConverter.Convert"/></summary>
        public const string Convert = "Convert";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.ProfitToColorConverter.ConvertBack"/></summary>
        public const string ConvertBack = "ConvertBack";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.ProfitToColorConverter.Default"/></summary>
        public static PropertyPath DefaultPath { get { return new PropertyPath("Default"); } }

    }

    /// <summary>Metadata for interface <see cref="HedgeHog.Alice.Client.IAccountHolder"/></summary>
    public static class IAccountHolderMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.IAccountHolder.Login"/></summary>
        public const string Login = "Login";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Static"/></summary>
    public static class StaticMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Static.GetEntryOrderLimit"/></summary>
        public const string GetEntryOrderLimit = "GetEntryOrderLimit";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.DataGridStyleSelector"/></summary>
    public static class DataGridStyleSelectorMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.DataGridStyleSelector.SelectStyle"/></summary>
        public const string SelectStyle = "SelectStyle";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TradeRequestManager"/></summary>
    public static class TradeRequestManagerMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradeRequestManager.RaiseTradeRequestManagerEvent"/></summary>
        public const string RaiseTradeRequestManagerEvent = "RaiseTradeRequestManagerEvent";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.openQueueScheduler"/></summary>
        public const string openQueueScheduler = "openQueueScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradeRequestManager.fw"/></summary>
        public const string fw = "fw";

        /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest"/></summary>
        public static class OpenRequestMetadata
        {
                        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest.pair"/></summary>
            public const string pair = "pair";

            /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest.buy"/></summary>
            public const string buy = "buy";

            /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest.lots"/></summary>
            public const string lots = "lots";

            /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest.serverTradeID"/></summary>
            public const string serverTradeID = "serverTradeID";

            /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenRequest.pendingTrade"/></summary>
            public const string pendingTrade = "pendingTrade";


        }

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.closeQueue"/></summary>
        public const string closeQueue = "closeQueue";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradeRequestManager.openQueue"/></summary>
        public const string openQueue = "openQueue";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradeRequestManager.AddOpenTradeRequest"/></summary>
        public const string AddOpenTradeRequest = "AddOpenTradeRequest";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradeRequestManager.RunOpenQueue"/></summary>
        public const string RunOpenQueue = "RunOpenQueue";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradeRequestManager.OpenTrade"/></summary>
        public const string OpenTrade = "OpenTrade";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradeRequestManager.fw"/></summary>
        public static PropertyPath fwPath { get { return new PropertyPath("fw"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TradeRequestManagerEventArgs"/></summary>
    public static class TradeRequestManagerEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradeRequestManagerEventArgs.Exception"/></summary>
        public const string Exception = "Exception";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradeRequestManagerEventArgs.Exception"/></summary>
        public static PropertyPath ExceptionPath { get { return new PropertyPath("Exception"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.MasterListChangedEventArgs"/></summary>
    public static class MasterListChangedEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MasterListChangedEventArgs.MasterTrades"/></summary>
        public const string MasterTrades = "MasterTrades";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MasterListChangedEventArgs.MasterTrades"/></summary>
        public static PropertyPath MasterTradesPath { get { return new PropertyPath("MasterTrades"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.NeedAccountInfoEventArgs"/></summary>
    public static class NeedAccountInfoEventArgsMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.NeedAccountInfoEventArgs.Accounts"/></summary>
        public const string Accounts = "Accounts";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.NeedAccountInfoEventArgs.Accounts"/></summary>
        public static PropertyPath AccountsPath { get { return new PropertyPath("Accounts"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TraderModel"/></summary>
    public static class TraderModelMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._coreFX"/></summary>
        public const string _coreFX = "_coreFX";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CoreFX"/></summary>
        public const string CoreFX = "CoreFX";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster"/></summary>
        public const string fwMaster = "fwMaster";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsLoggedIn"/></summary>
        public const string IsLoggedIn = "IsLoggedIn";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._isInLogin"/></summary>
        public const string _isInLogin = "_isInLogin";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsInLogin"/></summary>
        public const string IsInLogin = "IsInLogin";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsNotInLogin"/></summary>
        public const string IsNotInLogin = "IsNotInLogin";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._SessionStatus"/></summary>
        public const string _SessionStatus = "_SessionStatus";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SessionStatus"/></summary>
        public const string SessionStatus = "SessionStatus";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._ServerToLocalRatioValue"/></summary>
        public const string _ServerToLocalRatioValue = "_ServerToLocalRatioValue";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerToLocalRatioValue"/></summary>
        public const string ServerToLocalRatioValue = "ServerToLocalRatioValue";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerToLocalRatio"/></summary>
        public const string ServerToLocalRatio = "ServerToLocalRatio";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IsInVirtualTrading"/></summary>
        public const string _IsInVirtualTrading = "_IsInVirtualTrading";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsInVirtualTrading"/></summary>
        public const string IsInVirtualTrading = "IsInVirtualTrading";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualDateStart"/></summary>
        public const string _VirtualDateStart = "_VirtualDateStart";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualDateStart"/></summary>
        public const string VirtualDateStart = "VirtualDateStart";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualDelay"/></summary>
        public const string _VirtualDelay = "_VirtualDelay";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualDelay"/></summary>
        public const string VirtualDelay = "VirtualDelay";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualPair"/></summary>
        public const string _VirtualPair = "_VirtualPair";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualPair"/></summary>
        public const string VirtualPair = "VirtualPair";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualPause"/></summary>
        public const string _VirtualPause = "_VirtualPause";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualPause"/></summary>
        public const string VirtualPause = "VirtualPause";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualClearTest"/></summary>
        public const string _VirtualClearTest = "_VirtualClearTest";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualClearTest"/></summary>
        public const string VirtualClearTest = "VirtualClearTest";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._VirtualMonthsToTest"/></summary>
        public const string _VirtualMonthsToTest = "_VirtualMonthsToTest";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualMonthsToTest"/></summary>
        public const string VirtualMonthsToTest = "VirtualMonthsToTest";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._remoteController"/></summary>
        public const string _remoteController = "_remoteController";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.RemoteController1"/></summary>
        public const string RemoteController1 = "RemoteController1";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.MasterAccount"/></summary>
        public const string MasterAccount = "MasterAccount";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnOrderToNoLoss"/></summary>
        public const string OnOrderToNoLoss = "OnOrderToNoLoss";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.RaiseMasterListChangedEvent"/></summary>
        public const string RaiseMasterListChangedEvent = "RaiseMasterListChangedEvent";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.RaiseSlaveLoginRequestEvent"/></summary>
        public const string RaiseSlaveLoginRequestEvent = "RaiseSlaveLoginRequestEvent";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMacrosCases"/></summary>
        public const string TradingMacrosCases = "TradingMacrosCases";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.slaveAccounts"/></summary>
        public const string slaveAccounts = "slaveAccounts";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveAccounts"/></summary>
        public const string SlaveAccounts = "SlaveAccounts";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._ShowAllAccountsFilter"/></summary>
        public const string _ShowAllAccountsFilter = "_ShowAllAccountsFilter";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ShowAllAccountsFilter"/></summary>
        public const string ShowAllAccountsFilter = "ShowAllAccountsFilter";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._tradingAccountsList"/></summary>
        public const string _tradingAccountsList = "_tradingAccountsList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccountsList"/></summary>
        public const string TradingAccountsList = "TradingAccountsList";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.FilterTradingAccounts"/></summary>
        public const string FilterTradingAccounts = "FilterTradingAccounts";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._TradingAccountsSet"/></summary>
        public const string _TradingAccountsSet = "_TradingAccountsSet";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccountsSet"/></summary>
        public const string TradingAccountsSet = "TradingAccountsSet";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel._TradingAccountsSet_CollectionChanged"/></summary>
        public const string _TradingAccountsSet_CollectionChanged = "_TradingAccountsSet_CollectionChanged";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMaster"/></summary>
        public const string TradingMaster = "TradingMaster";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMasters"/></summary>
        public const string TradingMasters = "TradingMasters";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingSlaves"/></summary>
        public const string TradingSlaves = "TradingSlaves";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._slaveModels"/></summary>
        public const string _slaveModels = "_slaveModels";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveModels"/></summary>
        public const string SlaveModels = "SlaveModels";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.orders"/></summary>
        public const string orders = "orders";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OrdersList"/></summary>
        public const string OrdersList = "OrdersList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTrades"/></summary>
        public const string ServerTrades = "ServerTrades";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTradesList"/></summary>
        public const string ServerTradesList = "ServerTradesList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AbsentTrades"/></summary>
        public const string AbsentTrades = "AbsentTrades";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AbsentTradesList"/></summary>
        public const string AbsentTradesList = "AbsentTradesList";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._accountModel"/></summary>
        public const string _accountModel = "_accountModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AccountModel"/></summary>
        public const string AccountModel = "AccountModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerAccountRow"/></summary>
        public const string ServerAccountRow = "ServerAccountRow";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CurrentLoss"/></summary>
        public const string CurrentLoss = "CurrentLoss";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.SlaveAccountInfos"/></summary>
        public const string SlaveAccountInfos = "SlaveAccountInfos";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._slaveAccountInfosView"/></summary>
        public const string _slaveAccountInfosView = "_slaveAccountInfosView";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveAccountInfosView"/></summary>
        public const string SlaveAccountInfosView = "SlaveAccountInfosView";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._serverAddress"/></summary>
        public const string _serverAddress = "_serverAddress";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.serverAddressPostfix"/></summary>
        public const string serverAddressPostfix = "serverAddressPostfix";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.serverAddressSuffix"/></summary>
        public const string serverAddressSuffix = "serverAddressSuffix";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerAddress"/></summary>
        public const string ServerAddress = "ServerAddress";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.isInRemoteMode"/></summary>
        public const string isInRemoteMode = "isInRemoteMode";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._aliceMode"/></summary>
        public const string _aliceMode = "_aliceMode";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AliceMode"/></summary>
        public const string AliceMode = "AliceMode";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._serverTime"/></summary>
        public const string _serverTime = "_serverTime";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTime"/></summary>
        public const string ServerTime = "ServerTime";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.lastLogTime"/></summary>
        public const string lastLogTime = "lastLogTime";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LogText"/></summary>
        public const string LogText = "LogText";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._logQueue"/></summary>
        public const string _logQueue = "_logQueue";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._log"/></summary>
        public const string _log = "_log";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Log"/></summary>
        public const string Log = "Log";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.GetExceptionShort"/></summary>
        public const string GetExceptionShort = "GetExceptionShort";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsLogExpanded"/></summary>
        public const string IsLogExpanded = "IsLogExpanded";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._LoginCommand"/></summary>
        public const string _LoginCommand = "_LoginCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LoginCommand"/></summary>
        public const string LoginCommand = "LoginCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.Login"/></summary>
        public const string Login = "Login";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._ToggleShowAllAccountsCommand"/></summary>
        public const string _ToggleShowAllAccountsCommand = "_ToggleShowAllAccountsCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ToggleShowAllAccountsCommand"/></summary>
        public const string ToggleShowAllAccountsCommand = "ToggleShowAllAccountsCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.ToggleShowAllAccounts"/></summary>
        public const string ToggleShowAllAccounts = "ToggleShowAllAccounts";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._SetOrderToNoLossCommand"/></summary>
        public const string _SetOrderToNoLossCommand = "_SetOrderToNoLossCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SetOrderToNoLossCommand"/></summary>
        public const string SetOrderToNoLossCommand = "SetOrderToNoLossCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.SetOrderToNoLoss"/></summary>
        public const string SetOrderToNoLoss = "SetOrderToNoLoss";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IncreaseLimitCommand"/></summary>
        public const string _IncreaseLimitCommand = "_IncreaseLimitCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseLimitCommand"/></summary>
        public const string IncreaseLimitCommand = "IncreaseLimitCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseLimit"/></summary>
        public const string IncreaseLimit = "IncreaseLimit";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DecreaseLimitCommand"/></summary>
        public const string _DecreaseLimitCommand = "_DecreaseLimitCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseLimitCommand"/></summary>
        public const string DecreaseLimitCommand = "DecreaseLimitCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseLimit"/></summary>
        public const string DecreaseLimit = "DecreaseLimit";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DecreaseStopCommand"/></summary>
        public const string _DecreaseStopCommand = "_DecreaseStopCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseStopCommand"/></summary>
        public const string DecreaseStopCommand = "DecreaseStopCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseStop"/></summary>
        public const string DecreaseStop = "DecreaseStop";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IncreaseEntryStopCommand"/></summary>
        public const string _IncreaseEntryStopCommand = "_IncreaseEntryStopCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryStopCommand"/></summary>
        public const string IncreaseEntryStopCommand = "IncreaseEntryStopCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryStop"/></summary>
        public const string IncreaseEntryStop = "IncreaseEntryStop";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DecreaseEntryStopCommandCommand"/></summary>
        public const string _DecreaseEntryStopCommandCommand = "_DecreaseEntryStopCommandCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryStopCommandCommand"/></summary>
        public const string DecreaseEntryStopCommandCommand = "DecreaseEntryStopCommandCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryStopCommand"/></summary>
        public const string DecreaseEntryStopCommand = "DecreaseEntryStopCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IncreaseEntryLimitCommand"/></summary>
        public const string _IncreaseEntryLimitCommand = "_IncreaseEntryLimitCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryLimitCommand"/></summary>
        public const string IncreaseEntryLimitCommand = "IncreaseEntryLimitCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryLimit"/></summary>
        public const string IncreaseEntryLimit = "IncreaseEntryLimit";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DecreaseEntryLimitCommand"/></summary>
        public const string _DecreaseEntryLimitCommand = "_DecreaseEntryLimitCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryLimitCommand"/></summary>
        public const string DecreaseEntryLimitCommand = "DecreaseEntryLimitCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryLimit"/></summary>
        public const string DecreaseEntryLimit = "DecreaseEntryLimit";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._IncreaseEntryRateCommand"/></summary>
        public const string _IncreaseEntryRateCommand = "_IncreaseEntryRateCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryRateCommand"/></summary>
        public const string IncreaseEntryRateCommand = "IncreaseEntryRateCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryRate"/></summary>
        public const string IncreaseEntryRate = "IncreaseEntryRate";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DecreaseEntryRateCommand"/></summary>
        public const string _DecreaseEntryRateCommand = "_DecreaseEntryRateCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryRateCommand"/></summary>
        public const string DecreaseEntryRateCommand = "DecreaseEntryRateCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryRate"/></summary>
        public const string DecreaseEntryRate = "DecreaseEntryRate";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._CancelEntryOrderCommand"/></summary>
        public const string _CancelEntryOrderCommand = "_CancelEntryOrderCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CancelEntryOrderCommand"/></summary>
        public const string CancelEntryOrderCommand = "CancelEntryOrderCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CancelEntryOrder"/></summary>
        public const string CancelEntryOrder = "CancelEntryOrder";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._EncreaseStopCommand"/></summary>
        public const string _EncreaseStopCommand = "_EncreaseStopCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.EncreaseStopCommand"/></summary>
        public const string EncreaseStopCommand = "EncreaseStopCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.EncreaseStop"/></summary>
        public const string EncreaseStop = "EncreaseStop";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DeleteTradingAccountCommand"/></summary>
        public const string _DeleteTradingAccountCommand = "_DeleteTradingAccountCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DeleteTradingAccountCommand"/></summary>
        public const string DeleteTradingAccountCommand = "DeleteTradingAccountCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.DeleteTradingAccount"/></summary>
        public const string DeleteTradingAccount = "DeleteTradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._SaveTradingSlavesCommand"/></summary>
        public const string _SaveTradingSlavesCommand = "_SaveTradingSlavesCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SaveTradingSlavesCommand"/></summary>
        public const string SaveTradingSlavesCommand = "SaveTradingSlavesCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.SaveTradingSlaves"/></summary>
        public const string SaveTradingSlaves = "SaveTradingSlaves";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._OpenNewLocalAccountCommand"/></summary>
        public const string _OpenNewLocalAccountCommand = "_OpenNewLocalAccountCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewLocalAccountCommand"/></summary>
        public const string OpenNewLocalAccountCommand = "OpenNewLocalAccountCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewLocalAccount"/></summary>
        public const string OpenNewLocalAccount = "OpenNewLocalAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._AddNewSlaveAccountCommand"/></summary>
        public const string _AddNewSlaveAccountCommand = "_AddNewSlaveAccountCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AddNewSlaveAccountCommand"/></summary>
        public const string AddNewSlaveAccountCommand = "AddNewSlaveAccountCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.AddNewSlaveAccount"/></summary>
        public const string AddNewSlaveAccount = "AddNewSlaveAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._OpenNewServerAccountCommand"/></summary>
        public const string _OpenNewServerAccountCommand = "_OpenNewServerAccountCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewServerAccountCommand"/></summary>
        public const string OpenNewServerAccountCommand = "OpenNewServerAccountCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewServerAccount"/></summary>
        public const string OpenNewServerAccount = "OpenNewServerAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._UpdatePasswordCommand"/></summary>
        public const string _UpdatePasswordCommand = "_UpdatePasswordCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.UpdatePasswordCommand"/></summary>
        public const string UpdatePasswordCommand = "UpdatePasswordCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.UpdatePassword"/></summary>
        public const string UpdatePassword = "UpdatePassword";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._CloseServerTradeCommand"/></summary>
        public const string _CloseServerTradeCommand = "_CloseServerTradeCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CloseServerTradeCommand"/></summary>
        public const string CloseServerTradeCommand = "CloseServerTradeCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CloseServerTrade"/></summary>
        public const string CloseServerTrade = "CloseServerTrade";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._BackTestCommand"/></summary>
        public const string _BackTestCommand = "_BackTestCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.BackTestCommand"/></summary>
        public const string BackTestCommand = "BackTestCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.BackTestEventArgs"/></summary>
        public const string BackTestEventArgs = "BackTestEventArgs";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.BackTest"/></summary>
        public const string BackTest = "BackTest";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._BackTestStepBackCommand"/></summary>
        public const string _BackTestStepBackCommand = "_BackTestStepBackCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.BackTestStepBackCommand"/></summary>
        public const string BackTestStepBackCommand = "BackTestStepBackCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.BackTestStepBack"/></summary>
        public const string BackTestStepBack = "BackTestStepBack";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._ReportCommand"/></summary>
        public const string _ReportCommand = "_ReportCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ReportCommand"/></summary>
        public const string ReportCommand = "ReportCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.Report"/></summary>
        public const string Report = "Report";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._CloseAllServerTradesCommand"/></summary>
        public const string _CloseAllServerTradesCommand = "_CloseAllServerTradesCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CloseAllServerTradesCommand"/></summary>
        public const string CloseAllServerTradesCommand = "CloseAllServerTradesCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CloseAllServerTrades"/></summary>
        public const string CloseAllServerTrades = "CloseAllServerTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._AccountLoginCommand"/></summary>
        public const string _AccountLoginCommand = "_AccountLoginCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AccountLoginCommand"/></summary>
        public const string AccountLoginCommand = "AccountLoginCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.AccountLogin"/></summary>
        public const string AccountLogin = "AccountLogin";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.LoginAsync"/></summary>
        public const string LoginAsync = "LoginAsync";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._DatabasePath"/></summary>
        public const string _DatabasePath = "_DatabasePath";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DatabasePath"/></summary>
        public const string DatabasePath = "DatabasePath";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._OpenDataBaseCommand"/></summary>
        public const string _OpenDataBaseCommand = "_OpenDataBaseCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenDataBaseCommand"/></summary>
        public const string OpenDataBaseCommand = "OpenDataBaseCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OpenDataBase"/></summary>
        public const string OpenDataBase = "OpenDataBase";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._TestCommand"/></summary>
        public const string _TestCommand = "_TestCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TestCommand"/></summary>
        public const string TestCommand = "TestCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.Test"/></summary>
        public const string Test = "Test";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LoginInfo"/></summary>
        public const string LoginInfo = "LoginInfo";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccounts"/></summary>
        public const string TradingAccounts = "TradingAccounts";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._tradingAccount"/></summary>
        public const string _tradingAccount = "_tradingAccount";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccount"/></summary>
        public const string TradingAccount = "TradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._tradingPassword"/></summary>
        public const string _tradingPassword = "_tradingPassword";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingPassword"/></summary>
        public const string TradingPassword = "TradingPassword";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._tradingDemo"/></summary>
        public const string _tradingDemo = "_tradingDemo";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingDemo"/></summary>
        public const string TradingDemo = "TradingDemo";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TargetInPips"/></summary>
        public const string TargetInPips = "TargetInPips";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.GetTradesScheduler"/></summary>
        public const string GetTradesScheduler = "GetTradesScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Title"/></summary>
        public const string Title = "Title";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.isInDesign"/></summary>
        public const string isInDesign = "isInDesign";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.Using_FetchServerTrades"/></summary>
        public const string Using_FetchServerTrades = "Using_FetchServerTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.Initialize"/></summary>
        public const string Initialize = "Initialize";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_SessionStatusChanged"/></summary>
        public const string fwMaster_SessionStatusChanged = "fwMaster_SessionStatusChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnMasterTradeRemoved"/></summary>
        public const string OnMasterTradeRemoved = "OnMasterTradeRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_TradeRemoved"/></summary>
        public const string fwMaster_TradeRemoved = "fwMaster_TradeRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_Error"/></summary>
        public const string fwMaster_Error = "fwMaster_Error";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.PriceChangedSchedulers"/></summary>
        public const string PriceChangedSchedulers = "PriceChangedSchedulers";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_PriceChanged"/></summary>
        public const string fwMaster_PriceChanged = "fwMaster_PriceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.RunPrice"/></summary>
        public const string RunPrice = "RunPrice";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.RunPriceChanged"/></summary>
        public const string RunPriceChanged = "RunPriceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OnMasterTradeAdded"/></summary>
        public const string OnMasterTradeAdded = "OnMasterTradeAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_TradeAdded"/></summary>
        public const string fwMaster_TradeAdded = "fwMaster_TradeAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_TradeChanged"/></summary>
        public const string fwMaster_TradeChanged = "fwMaster_TradeChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_OrderChanged"/></summary>
        public const string fwMaster_OrderChanged = "fwMaster_OrderChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.fwMaster_OrderAdded"/></summary>
        public const string fwMaster_OrderAdded = "fwMaster_OrderAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.FetchServerTrades"/></summary>
        public const string FetchServerTrades = "FetchServerTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.InvokeSyncronize"/></summary>
        public const string InvokeSyncronize = "InvokeSyncronize";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsAliceActive"/></summary>
        public const string IsAliceActive = "IsAliceActive";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.OpenTrade"/></summary>
        public const string OpenTrade = "OpenTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.UpdateTrades"/></summary>
        public const string UpdateTrades = "UpdateTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.UpdateOrders"/></summary>
        public const string UpdateOrders = "UpdateOrders";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.ShowTrades{TList}"/></summary>
        public const string ShowTrades = "ShowTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.Using"/></summary>
        public const string Using = "Using";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.changeStop"/></summary>
        public const string changeStop = "changeStop";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.changeStops"/></summary>
        public const string changeStops = "changeStops";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.changeLimit"/></summary>
        public const string changeLimit = "changeLimit";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.changeLimits"/></summary>
        public const string changeLimits = "changeLimits";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.changeStopsOrLimits"/></summary>
        public const string changeStopsOrLimits = "changeStopsOrLimits";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CanExecuteStopLimitChange"/></summary>
        public const string CanExecuteStopLimitChange = "CanExecuteStopLimitChange";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CanExecuteStopChange"/></summary>
        public const string CanExecuteStopChange = "CanExecuteStopChange";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CanExecuteLimitChange"/></summary>
        public const string CanExecuteLimitChange = "CanExecuteLimitChange";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.stopDeltas"/></summary>
        public const string stopDeltas = "stopDeltas";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.limitDeltas"/></summary>
        public const string limitDeltas = "limitDeltas";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.AddtDelta"/></summary>
        public const string AddtDelta = "AddtDelta";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._changeLimitScheduler"/></summary>
        public const string _changeLimitScheduler = "_changeLimitScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.changeLimitScheduler"/></summary>
        public const string changeLimitScheduler = "changeLimitScheduler";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel._changeStopScheduler"/></summary>
        public const string _changeStopScheduler = "_changeStopScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.changeStopScheduler"/></summary>
        public const string changeStopScheduler = "changeStopScheduler";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMacroName"/></summary>
        public const string TradingMacroName = "TradingMacroName";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.CommissionByTrade"/></summary>
        public const string CommissionByTrade = "CommissionByTrade";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderModel.tradeIdLast"/></summary>
        public const string tradeIdLast = "tradeIdLast";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderModel.AddCosedTrade"/></summary>
        public const string AddCosedTrade = "AddCosedTrade";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CoreFX"/></summary>
        public static PropertyPath CoreFXPath { get { return new PropertyPath("CoreFX"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsLoggedIn"/></summary>
        public static PropertyPath IsLoggedInPath { get { return new PropertyPath("IsLoggedIn"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsInLogin"/></summary>
        public static PropertyPath IsInLoginPath { get { return new PropertyPath("IsInLogin"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsNotInLogin"/></summary>
        public static PropertyPath IsNotInLoginPath { get { return new PropertyPath("IsNotInLogin"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SessionStatus"/></summary>
        public static PropertyPath SessionStatusPath { get { return new PropertyPath("SessionStatus"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerToLocalRatioValue"/></summary>
        public static PropertyPath ServerToLocalRatioValuePath { get { return new PropertyPath("ServerToLocalRatioValue"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerToLocalRatio"/></summary>
        public static PropertyPath ServerToLocalRatioPath { get { return new PropertyPath("ServerToLocalRatio"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsInVirtualTrading"/></summary>
        public static PropertyPath IsInVirtualTradingPath { get { return new PropertyPath("IsInVirtualTrading"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualDateStart"/></summary>
        public static PropertyPath VirtualDateStartPath { get { return new PropertyPath("VirtualDateStart"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualDelay"/></summary>
        public static PropertyPath VirtualDelayPath { get { return new PropertyPath("VirtualDelay"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualPair"/></summary>
        public static PropertyPath VirtualPairPath { get { return new PropertyPath("VirtualPair"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualPause"/></summary>
        public static PropertyPath VirtualPausePath { get { return new PropertyPath("VirtualPause"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualClearTest"/></summary>
        public static PropertyPath VirtualClearTestPath { get { return new PropertyPath("VirtualClearTest"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.VirtualMonthsToTest"/></summary>
        public static PropertyPath VirtualMonthsToTestPath { get { return new PropertyPath("VirtualMonthsToTest"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.RemoteController1"/></summary>
        public static PropertyPath RemoteController1Path { get { return new PropertyPath("RemoteController1"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.MasterAccount"/></summary>
        public static PropertyPath MasterAccountPath { get { return new PropertyPath("MasterAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMacrosCases"/></summary>
        public static PropertyPath TradingMacrosCasesPath { get { return new PropertyPath("TradingMacrosCases"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveAccounts"/></summary>
        public static PropertyPath SlaveAccountsPath { get { return new PropertyPath("SlaveAccounts"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ShowAllAccountsFilter"/></summary>
        public static PropertyPath ShowAllAccountsFilterPath { get { return new PropertyPath("ShowAllAccountsFilter"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccountsList"/></summary>
        public static PropertyPath TradingAccountsListPath { get { return new PropertyPath("TradingAccountsList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccountsSet"/></summary>
        public static PropertyPath TradingAccountsSetPath { get { return new PropertyPath("TradingAccountsSet"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMaster"/></summary>
        public static PropertyPath TradingMasterPath { get { return new PropertyPath("TradingMaster"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMasters"/></summary>
        public static PropertyPath TradingMastersPath { get { return new PropertyPath("TradingMasters"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingSlaves"/></summary>
        public static PropertyPath TradingSlavesPath { get { return new PropertyPath("TradingSlaves"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveModels"/></summary>
        public static PropertyPath SlaveModelsPath { get { return new PropertyPath("SlaveModels"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.orders"/></summary>
        public static PropertyPath ordersPath { get { return new PropertyPath("orders"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OrdersList"/></summary>
        public static PropertyPath OrdersListPath { get { return new PropertyPath("OrdersList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTrades"/></summary>
        public static PropertyPath ServerTradesPath { get { return new PropertyPath("ServerTrades"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTradesList"/></summary>
        public static PropertyPath ServerTradesListPath { get { return new PropertyPath("ServerTradesList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AbsentTrades"/></summary>
        public static PropertyPath AbsentTradesPath { get { return new PropertyPath("AbsentTrades"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AbsentTradesList"/></summary>
        public static PropertyPath AbsentTradesListPath { get { return new PropertyPath("AbsentTradesList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AccountModel"/></summary>
        public static PropertyPath AccountModelPath { get { return new PropertyPath("AccountModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerAccountRow"/></summary>
        public static PropertyPath ServerAccountRowPath { get { return new PropertyPath("ServerAccountRow"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CurrentLoss"/></summary>
        public static PropertyPath CurrentLossPath { get { return new PropertyPath("CurrentLoss"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SlaveAccountInfosView"/></summary>
        public static PropertyPath SlaveAccountInfosViewPath { get { return new PropertyPath("SlaveAccountInfosView"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerAddress"/></summary>
        public static PropertyPath ServerAddressPath { get { return new PropertyPath("ServerAddress"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.isInRemoteMode"/></summary>
        public static PropertyPath isInRemoteModePath { get { return new PropertyPath("isInRemoteMode"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AliceMode"/></summary>
        public static PropertyPath AliceModePath { get { return new PropertyPath("AliceMode"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ServerTime"/></summary>
        public static PropertyPath ServerTimePath { get { return new PropertyPath("ServerTime"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LogText"/></summary>
        public static PropertyPath LogTextPath { get { return new PropertyPath("LogText"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Log"/></summary>
        public static PropertyPath LogPath { get { return new PropertyPath("Log"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsLogExpanded"/></summary>
        public static PropertyPath IsLogExpandedPath { get { return new PropertyPath("IsLogExpanded"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LoginCommand"/></summary>
        public static PropertyPath LoginCommandPath { get { return new PropertyPath("LoginCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ToggleShowAllAccountsCommand"/></summary>
        public static PropertyPath ToggleShowAllAccountsCommandPath { get { return new PropertyPath("ToggleShowAllAccountsCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SetOrderToNoLossCommand"/></summary>
        public static PropertyPath SetOrderToNoLossCommandPath { get { return new PropertyPath("SetOrderToNoLossCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseLimitCommand"/></summary>
        public static PropertyPath IncreaseLimitCommandPath { get { return new PropertyPath("IncreaseLimitCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseLimitCommand"/></summary>
        public static PropertyPath DecreaseLimitCommandPath { get { return new PropertyPath("DecreaseLimitCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseStopCommand"/></summary>
        public static PropertyPath DecreaseStopCommandPath { get { return new PropertyPath("DecreaseStopCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryStopCommand"/></summary>
        public static PropertyPath IncreaseEntryStopCommandPath { get { return new PropertyPath("IncreaseEntryStopCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryStopCommandCommand"/></summary>
        public static PropertyPath DecreaseEntryStopCommandCommandPath { get { return new PropertyPath("DecreaseEntryStopCommandCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryLimitCommand"/></summary>
        public static PropertyPath IncreaseEntryLimitCommandPath { get { return new PropertyPath("IncreaseEntryLimitCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryLimitCommand"/></summary>
        public static PropertyPath DecreaseEntryLimitCommandPath { get { return new PropertyPath("DecreaseEntryLimitCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IncreaseEntryRateCommand"/></summary>
        public static PropertyPath IncreaseEntryRateCommandPath { get { return new PropertyPath("IncreaseEntryRateCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DecreaseEntryRateCommand"/></summary>
        public static PropertyPath DecreaseEntryRateCommandPath { get { return new PropertyPath("DecreaseEntryRateCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CancelEntryOrderCommand"/></summary>
        public static PropertyPath CancelEntryOrderCommandPath { get { return new PropertyPath("CancelEntryOrderCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.EncreaseStopCommand"/></summary>
        public static PropertyPath EncreaseStopCommandPath { get { return new PropertyPath("EncreaseStopCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DeleteTradingAccountCommand"/></summary>
        public static PropertyPath DeleteTradingAccountCommandPath { get { return new PropertyPath("DeleteTradingAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.SaveTradingSlavesCommand"/></summary>
        public static PropertyPath SaveTradingSlavesCommandPath { get { return new PropertyPath("SaveTradingSlavesCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewLocalAccountCommand"/></summary>
        public static PropertyPath OpenNewLocalAccountCommandPath { get { return new PropertyPath("OpenNewLocalAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AddNewSlaveAccountCommand"/></summary>
        public static PropertyPath AddNewSlaveAccountCommandPath { get { return new PropertyPath("AddNewSlaveAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenNewServerAccountCommand"/></summary>
        public static PropertyPath OpenNewServerAccountCommandPath { get { return new PropertyPath("OpenNewServerAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.UpdatePasswordCommand"/></summary>
        public static PropertyPath UpdatePasswordCommandPath { get { return new PropertyPath("UpdatePasswordCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CloseServerTradeCommand"/></summary>
        public static PropertyPath CloseServerTradeCommandPath { get { return new PropertyPath("CloseServerTradeCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.BackTestCommand"/></summary>
        public static PropertyPath BackTestCommandPath { get { return new PropertyPath("BackTestCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.BackTestStepBackCommand"/></summary>
        public static PropertyPath BackTestStepBackCommandPath { get { return new PropertyPath("BackTestStepBackCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.ReportCommand"/></summary>
        public static PropertyPath ReportCommandPath { get { return new PropertyPath("ReportCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.CloseAllServerTradesCommand"/></summary>
        public static PropertyPath CloseAllServerTradesCommandPath { get { return new PropertyPath("CloseAllServerTradesCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.AccountLoginCommand"/></summary>
        public static PropertyPath AccountLoginCommandPath { get { return new PropertyPath("AccountLoginCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.DatabasePath"/></summary>
        public static PropertyPath DatabasePathPath { get { return new PropertyPath("DatabasePath"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.OpenDataBaseCommand"/></summary>
        public static PropertyPath OpenDataBaseCommandPath { get { return new PropertyPath("OpenDataBaseCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TestCommand"/></summary>
        public static PropertyPath TestCommandPath { get { return new PropertyPath("TestCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.LoginInfo"/></summary>
        public static PropertyPath LoginInfoPath { get { return new PropertyPath("LoginInfo"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccounts"/></summary>
        public static PropertyPath TradingAccountsPath { get { return new PropertyPath("TradingAccounts"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingAccount"/></summary>
        public static PropertyPath TradingAccountPath { get { return new PropertyPath("TradingAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingPassword"/></summary>
        public static PropertyPath TradingPasswordPath { get { return new PropertyPath("TradingPassword"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingDemo"/></summary>
        public static PropertyPath TradingDemoPath { get { return new PropertyPath("TradingDemo"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TargetInPips"/></summary>
        public static PropertyPath TargetInPipsPath { get { return new PropertyPath("TargetInPips"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.Title"/></summary>
        public static PropertyPath TitlePath { get { return new PropertyPath("Title"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.isInDesign"/></summary>
        public static PropertyPath isInDesignPath { get { return new PropertyPath("isInDesign"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.IsAliceActive"/></summary>
        public static PropertyPath IsAliceActivePath { get { return new PropertyPath("IsAliceActive"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.changeLimitScheduler"/></summary>
        public static PropertyPath changeLimitSchedulerPath { get { return new PropertyPath("changeLimitScheduler"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.changeStopScheduler"/></summary>
        public static PropertyPath changeStopSchedulerPath { get { return new PropertyPath("changeStopScheduler"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderModel.TradingMacroName"/></summary>
        public static PropertyPath TradingMacroNamePath { get { return new PropertyPath("TradingMacroName"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TraderModelDesign"/></summary>
    public static class TraderModelDesignMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TradingAccountModel"/></summary>
    public static class TradingAccountModelMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.TradingRatio"/></summary>
        public const string TradingRatio = "TradingRatio";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.ProfitPercent"/></summary>
        public const string ProfitPercent = "ProfitPercent";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TradingAccountModel._CurrentLoss"/></summary>
        public const string _CurrentLoss = "_CurrentLoss";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.CurrentLoss"/></summary>
        public const string CurrentLoss = "CurrentLoss";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.OriginalBalance"/></summary>
        public const string OriginalBalance = "OriginalBalance";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.OriginalProfit"/></summary>
        public const string OriginalProfit = "OriginalProfit";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradingAccountModel.Update"/></summary>
        public const string Update = "Update";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.HasProfit"/></summary>
        public const string HasProfit = "HasProfit";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradingAccountModel.OnPropertyChanged"/></summary>
        public const string OnPropertyChanged = "OnPropertyChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradingAccountModel.RaisePropertyChanged"/></summary>
        public const string RaisePropertyChanged = "RaisePropertyChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TradingAccountModel.VerifyPropertyName"/></summary>
        public const string VerifyPropertyName = "VerifyPropertyName";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.TradingRatio"/></summary>
        public static PropertyPath TradingRatioPath { get { return new PropertyPath("TradingRatio"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.ProfitPercent"/></summary>
        public static PropertyPath ProfitPercentPath { get { return new PropertyPath("ProfitPercent"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.CurrentLoss"/></summary>
        public static PropertyPath CurrentLossPath { get { return new PropertyPath("CurrentLoss"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.OriginalBalance"/></summary>
        public static PropertyPath OriginalBalancePath { get { return new PropertyPath("OriginalBalance"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.OriginalProfit"/></summary>
        public static PropertyPath OriginalProfitPath { get { return new PropertyPath("OriginalProfit"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TradingAccountModel.HasProfit"/></summary>
        public static PropertyPath HasProfitPath { get { return new PropertyPath("HasProfit"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.MainWindow"/></summary>
    public static class MainWindowMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MainWindow.ViewModel"/></summary>
        public const string ViewModel = "ViewModel";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MainWindow.GetTradingAccountsQuery"/></summary>
        public const string GetTradingAccountsQuery = "GetTradingAccountsQuery";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MainWindow.Window_Loaded"/></summary>
        public const string Window_Loaded = "Window_Loaded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MainWindow.DataGrid_KeyDown"/></summary>
        public const string DataGrid_KeyDown = "DataGrid_KeyDown";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MainWindow.SlaveModelGrid_KeyDown"/></summary>
        public const string SlaveModelGrid_KeyDown = "SlaveModelGrid_KeyDown";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.MainWindow.Window_Closed"/></summary>
        public const string Window_Closed = "Window_Closed";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.MainWindow.ViewModel"/></summary>
        public static PropertyPath ViewModelPath { get { return new PropertyPath("ViewModel"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.OrderTemplatesView"/></summary>
    public static class OrderTemplatesViewMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.OrderTemplatesView.DataGrid_KeyDown"/></summary>
        public const string DataGrid_KeyDown = "DataGrid_KeyDown";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.OrderTemplatesModel"/></summary>
    public static class OrderTemplatesModelMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.OrderTemplates"/></summary>
        public const string OrderTemplates = "OrderTemplates";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.OrderTemplatesModel._MasterModel"/></summary>
        public const string _MasterModel = "_MasterModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.MasterModel"/></summary>
        public const string MasterModel = "MasterModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.LotSize"/></summary>
        public const string LotSize = "LotSize";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.OrderTemplatesModel._AvailiblePairs"/></summary>
        public const string _AvailiblePairs = "_AvailiblePairs";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.AvailiblePairs"/></summary>
        public const string AvailiblePairs = "AvailiblePairs";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.CoreFX_LoggedInEvent"/></summary>
        public const string CoreFX_LoggedInEvent = "CoreFX_LoggedInEvent";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.OrderTemplatesModel._BuyOrderCommand"/></summary>
        public const string _BuyOrderCommand = "_BuyOrderCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.BuyOrderCommand"/></summary>
        public const string BuyOrderCommand = "BuyOrderCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.BuyOrder"/></summary>
        public const string BuyOrder = "BuyOrder";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.OrderTemplatesModel._SellOrderCommand"/></summary>
        public const string _SellOrderCommand = "_SellOrderCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.SellOrderCommand"/></summary>
        public const string SellOrderCommand = "SellOrderCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.SellOrder"/></summary>
        public const string SellOrder = "SellOrder";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.OrderTemplates"/></summary>
        public static PropertyPath OrderTemplatesPath { get { return new PropertyPath("OrderTemplates"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.MasterModel"/></summary>
        public static PropertyPath MasterModelPath { get { return new PropertyPath("MasterModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.LotSize"/></summary>
        public static PropertyPath LotSizePath { get { return new PropertyPath("LotSize"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.AvailiblePairs"/></summary>
        public static PropertyPath AvailiblePairsPath { get { return new PropertyPath("AvailiblePairs"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.BuyOrderCommand"/></summary>
        public static PropertyPath BuyOrderCommandPath { get { return new PropertyPath("BuyOrderCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.OrderTemplatesModel.SellOrderCommand"/></summary>
        public static PropertyPath SellOrderCommandPath { get { return new PropertyPath("SellOrderCommand"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.RemoteControlView"/></summary>
    public static class RemoteControlViewMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlView.DataGrid_KeyDown"/></summary>
        public const string DataGrid_KeyDown = "DataGrid_KeyDown";


    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.RemoteControlModel"/></summary>
    public static class RemoteControlModelMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OnDrawChart"/></summary>
        public const string OnDrawChart = "OnDrawChart";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.profitToClose"/></summary>
        public const string profitToClose = "profitToClose";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.ratesLoader"/></summary>
        public const string ratesLoader = "ratesLoader";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.charters"/></summary>
        public const string charters = "charters";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetCharter"/></summary>
        public const string GetCharter = "GetCharter";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_Play"/></summary>
        public const string charter_Play = "charter_Play";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_SupportResistanceChanged"/></summary>
        public const string charter_SupportResistanceChanged = "charter_SupportResistanceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_CorridorStartPositionChanged"/></summary>
        public const string charter_CorridorStartPositionChanged = "charter_CorridorStartPositionChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetTradingMacro"/></summary>
        public const string GetTradingMacro = "GetTradingMacro";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.charter_StateChanged"/></summary>
        public const string charter_StateChanged = "charter_StateChanged";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.CurrentLoss"/></summary>
        public const string CurrentLoss = "CurrentLoss";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.ticksByPair"/></summary>
        public const string ticksByPair = "ticksByPair";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.anglesByPair"/></summary>
        public const string anglesByPair = "anglesByPair";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.SellOrderCommand"/></summary>
        public const string SellOrderCommand = "SellOrderCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.BuyOrderCommand"/></summary>
        public const string BuyOrderCommand = "BuyOrderCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OpenEntryOrderByTemplate"/></summary>
        public const string OpenEntryOrderByTemplate = "OpenEntryOrderByTemplate";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._CopyTradingMacroCommand"/></summary>
        public const string _CopyTradingMacroCommand = "_CopyTradingMacroCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.CopyTradingMacroCommand"/></summary>
        public const string CopyTradingMacroCommand = "CopyTradingMacroCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CopyTradingMacro"/></summary>
        public const string CopyTradingMacro = "CopyTradingMacro";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._ClearCurrentLossCommand"/></summary>
        public const string _ClearCurrentLossCommand = "_ClearCurrentLossCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClearCurrentLossCommand"/></summary>
        public const string ClearCurrentLossCommand = "ClearCurrentLossCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClearCurrentLoss"/></summary>
        public const string ClearCurrentLoss = "ClearCurrentLoss";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._DeleteTradingMacroCommand"/></summary>
        public const string _DeleteTradingMacroCommand = "_DeleteTradingMacroCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.DeleteTradingMacroCommand"/></summary>
        public const string DeleteTradingMacroCommand = "DeleteTradingMacroCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.DeleteTradingMacro"/></summary>
        public const string DeleteTradingMacro = "DeleteTradingMacro";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._ClosePairCommand"/></summary>
        public const string _ClosePairCommand = "_ClosePairCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClosePairCommand"/></summary>
        public const string ClosePairCommand = "ClosePairCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClosePair"/></summary>
        public const string ClosePair = "ClosePair";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._BuyCommand"/></summary>
        public const string _BuyCommand = "_BuyCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.BuyCommand"/></summary>
        public const string BuyCommand = "BuyCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.Buy"/></summary>
        public const string Buy = "Buy";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._SellCommand"/></summary>
        public const string _SellCommand = "_SellCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.SellCommand"/></summary>
        public const string SellCommand = "SellCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.Sell"/></summary>
        public const string Sell = "Sell";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._ShowPropertiesDialogCommand"/></summary>
        public const string _ShowPropertiesDialogCommand = "_ShowPropertiesDialogCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowPropertiesDialogCommand"/></summary>
        public const string ShowPropertiesDialogCommand = "ShowPropertiesDialogCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowPropertiesDialog"/></summary>
        public const string ShowPropertiesDialog = "ShowPropertiesDialog";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel._HidePropertiesDialogCommand"/></summary>
        public const string _HidePropertiesDialogCommand = "_HidePropertiesDialogCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.HidePropertiesDialogCommand"/></summary>
        public const string HidePropertiesDialogCommand = "HidePropertiesDialogCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.HidePropertiesDialog"/></summary>
        public const string HidePropertiesDialog = "HidePropertiesDialog";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CleanEntryOrders"/></summary>
        public const string CleanEntryOrders = "CleanEntryOrders";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.InitializeModel"/></summary>
        public const string InitializeModel = "InitializeModel";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.MasterModel_PropertyChanged"/></summary>
        public const string MasterModel_PropertyChanged = "MasterModel_PropertyChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OnVirtual"/></summary>
        public const string OnVirtual = "OnVirtual";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.LoadClosedTrades"/></summary>
        public const string LoadClosedTrades = "LoadClosedTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ObjectStateManager_ObjectStateManagerChanged"/></summary>
        public const string ObjectStateManager_ObjectStateManagerChanged = "ObjectStateManager_ObjectStateManagerChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.Context_ObjectMaterialized"/></summary>
        public const string Context_ObjectMaterialized = "Context_ObjectMaterialized";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.TradingMacro_PropertyChanged"/></summary>
        public const string TradingMacro_PropertyChanged = "TradingMacro_PropertyChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CoreFX_LoggedInEvent"/></summary>
        public const string CoreFX_LoggedInEvent = "CoreFX_LoggedInEvent";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CoreFX_LoggedOffEvent"/></summary>
        public const string CoreFX_LoggedOffEvent = "CoreFX_LoggedOffEvent";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.LoadRatesSchedulers"/></summary>
        public const string LoadRatesSchedulers = "LoadRatesSchedulers";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunPriceSchedulers"/></summary>
        public const string RunPriceSchedulers = "RunPriceSchedulers";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.ScanCorridorSchedulers"/></summary>
        public const string ScanCorridorSchedulers = "ScanCorridorSchedulers";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowChartScheduler"/></summary>
        public const string ShowChartScheduler = "ShowChartScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.fw_PriceChanged"/></summary>
        public const string fw_PriceChanged = "fw_PriceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunPriceChanged"/></summary>
        public const string RunPriceChanged = "RunPriceChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowChart"/></summary>
        public const string ShowChart = "ShowChart";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunPrice"/></summary>
        public const string RunPrice = "RunPrice";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.pendingOrders"/></summary>
        public const string pendingOrders = "pendingOrders";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.pendingOpenRequest"/></summary>
        public const string pendingOpenRequest = "pendingOpenRequest";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OpenTradeByStop"/></summary>
        public const string OpenTradeByStop = "OpenTradeByStop";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.tradesManager_TradeRemoved"/></summary>
        public const string tradesManager_TradeRemoved = "tradesManager_TradeRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.SetTradeLocks"/></summary>
        public const string SetTradeLocks = "SetTradeLocks";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CloseTradeByRateDirection"/></summary>
        public const string CloseTradeByRateDirection = "CloseTradeByRateDirection";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CanOpenTrade"/></summary>
        public const string CanOpenTrade = "CanOpenTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.HasNoProfit"/></summary>
        public const string HasNoProfit = "HasNoProfit";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.HasProfit"/></summary>
        public const string HasProfit = "HasProfit";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OpenTradeWithWait"/></summary>
        public const string OpenTradeWithWait = "OpenTradeWithWait";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.AllowedLotSize"/></summary>
        public const string AllowedLotSize = "AllowedLotSize";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.fw_TradeAdded"/></summary>
        public const string fw_TradeAdded = "fw_TradeAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.fw_OrderAdded"/></summary>
        public const string fw_OrderAdded = "fw_OrderAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.fw_Error"/></summary>
        public const string fw_Error = "fw_Error";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.AdjustCurrentLosses"/></summary>
        public const string AdjustCurrentLosses = "AdjustCurrentLosses";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.fw_TradeClosed"/></summary>
        public const string fw_TradeClosed = "fw_TradeClosed";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.fw_TradeRemoved"/></summary>
        public const string fw_TradeRemoved = "fw_TradeRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CalculateLot"/></summary>
        public const string CalculateLot = "CalculateLot";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetGrossPLByGroup"/></summary>
        public const string GetGrossPLByGroup = "GetGrossPLByGroup";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetCurrentLossByGroup"/></summary>
        public const string GetCurrentLossByGroup = "GetCurrentLossByGroup";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CalculateLotCore"/></summary>
        public const string CalculateLotCore = "CalculateLotCore";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.Correlations"/></summary>
        public const string Correlations = "Correlations";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunCorrelations"/></summary>
        public const string RunCorrelations = "RunCorrelations";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.RunCorrelation"/></summary>
        public const string RunCorrelation = "RunCorrelation";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.reLogin"/></summary>
        public const string reLogin = "reLogin";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.loginScheduler"/></summary>
        public const string loginScheduler = "loginScheduler";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.AddCurrentTick"/></summary>
        public const string AddCurrentTick = "AddCurrentTick";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.LoadRates"/></summary>
        public const string LoadRates = "LoadRates";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.timersByPair"/></summary>
        public const string timersByPair = "timersByPair";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CanTrade"/></summary>
        public const string CanTrade = "CanTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.TradeExists"/></summary>
        public const string TradeExists = "TradeExists";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.RemoteControlModel.pendingFxOrders"/></summary>
        public const string pendingFxOrders = "pendingFxOrders";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.HasPendingFxOrder"/></summary>
        public const string HasPendingFxOrder = "HasPendingFxOrder";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetPendingFxOrder"/></summary>
        public const string GetPendingFxOrder = "GetPendingFxOrder";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetEntryOrders"/></summary>
        public const string GetEntryOrders = "GetEntryOrders";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetEntryOrder"/></summary>
        public const string GetEntryOrder = "GetEntryOrder";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ResetEntryOrder"/></summary>
        public const string ResetEntryOrder = "ResetEntryOrder";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.RemoveEntryOrder"/></summary>
        public const string RemoveEntryOrder = "RemoveEntryOrder";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetEntryOrderRate"/></summary>
        public const string GetEntryOrderRate = "GetEntryOrderRate";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetEntryOrderLimit"/></summary>
        public const string GetEntryOrderLimit = "GetEntryOrderLimit";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.UpdateEntryOrder"/></summary>
        public const string UpdateEntryOrder = "UpdateEntryOrder";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OpenChainTrade"/></summary>
        public const string OpenChainTrade = "OpenChainTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.OpenTrade"/></summary>
        public const string OpenTrade = "OpenTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetStopByFractal"/></summary>
        public const string GetStopByFractal = "GetStopByFractal";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetRatesForCorridor"/></summary>
        public const string GetRatesForCorridor = "GetRatesForCorridor";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetLimitByFractal"/></summary>
        public const string GetLimitByFractal = "GetLimitByFractal";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.GetFibSlack"/></summary>
        public const string GetFibSlack = "GetFibSlack";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.ChangeTradeStop"/></summary>
        public const string ChangeTradeStop = "ChangeTradeStop";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CheckTrades"/></summary>
        public const string CheckTrades = "CheckTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CheckTradesLotSize"/></summary>
        public const string CheckTradesLotSize = "CheckTradesLotSize";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CloseLooseTrades"/></summary>
        public const string CloseLooseTrades = "CloseLooseTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.CheckTrade"/></summary>
        public const string CheckTrade = "CheckTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.DoLimit"/></summary>
        public const string DoLimit = "DoLimit";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.DoStop"/></summary>
        public const string DoStop = "DoStop";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.SetLotSize"/></summary>
        public const string SetLotSize = "SetLotSize";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.InitInstruments"/></summary>
        public const string InitInstruments = "InitInstruments";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.RemoteControlModel.InitTradingMacro"/></summary>
        public const string InitTradingMacro = "InitTradingMacro";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.CurrentLoss"/></summary>
        public static PropertyPath CurrentLossPath { get { return new PropertyPath("CurrentLoss"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.CopyTradingMacroCommand"/></summary>
        public static PropertyPath CopyTradingMacroCommandPath { get { return new PropertyPath("CopyTradingMacroCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClearCurrentLossCommand"/></summary>
        public static PropertyPath ClearCurrentLossCommandPath { get { return new PropertyPath("ClearCurrentLossCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.DeleteTradingMacroCommand"/></summary>
        public static PropertyPath DeleteTradingMacroCommandPath { get { return new PropertyPath("DeleteTradingMacroCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ClosePairCommand"/></summary>
        public static PropertyPath ClosePairCommandPath { get { return new PropertyPath("ClosePairCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.BuyCommand"/></summary>
        public static PropertyPath BuyCommandPath { get { return new PropertyPath("BuyCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.SellCommand"/></summary>
        public static PropertyPath SellCommandPath { get { return new PropertyPath("SellCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.ShowPropertiesDialogCommand"/></summary>
        public static PropertyPath ShowPropertiesDialogCommandPath { get { return new PropertyPath("ShowPropertiesDialogCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.RemoteControlModel.HidePropertiesDialogCommand"/></summary>
        public static PropertyPath HidePropertiesDialogCommandPath { get { return new PropertyPath("HidePropertiesDialogCommand"); } }

    }

}

namespace HedgeHog.Alice.Client.FileMetadata.bin.Debug_01.Store.Metadata
{
    /// <summary>Metadata for File Alice.sdf</summary>
    public static class AliceSdf    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/bin/Debug_01/Store/Alice.sdf", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_01/Store/Alice.sdf"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_01/Store/Alice.sdf")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.bin.Debug_02.Store.Metadata
{
    /// <summary>Metadata for File Alice.sdf</summary>
    public static class AliceSdf    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/bin/Debug_02/Store/Alice.sdf", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_02/Store/Alice.sdf"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_02/Store/Alice.sdf")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.bin.Debug_03.Store.Metadata
{
    /// <summary>Metadata for File Alice.sdf</summary>
    public static class AliceSdf    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/bin/Debug_03/Store/Alice.sdf", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_03/Store/Alice.sdf"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/bin/Debug_03/Store/Alice.sdf")); } }


    }

}

namespace HedgeHog.Alice.Client.Classes.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Classes.ReportModel"/></summary>
    public static class ReportModelMetadata
    {
        
    }

}

namespace HedgeHog.Alice.Client.Commands.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Commands.CommandReference"/></summary>
    public static class CommandReferenceMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Commands.CommandReference.CommandProperty"/></summary>
        public const string CommandProperty = "CommandProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Commands.CommandReference.Command"/></summary>
        public const string Command = "Command";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandReference.CanExecute"/></summary>
        public const string CanExecute = "CanExecute";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandReference.Execute"/></summary>
        public const string Execute = "Execute";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandReference.OnCommandChanged"/></summary>
        public const string OnCommandChanged = "OnCommandChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandReference.CreateInstanceCore"/></summary>
        public const string CreateInstanceCore = "CreateInstanceCore";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Commands.CommandReference.Command"/></summary>
        public static PropertyPath CommandPath { get { return new PropertyPath("Command"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand"/></summary>
    public static class DelegateCommandMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.CanExecute"/></summary>
        public const string CanExecute = "CanExecute";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.Execute"/></summary>
        public const string Execute = "Execute";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.IsAutomaticRequeryDisabled"/></summary>
        public const string IsAutomaticRequeryDisabled = "IsAutomaticRequeryDisabled";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.RaiseCanExecuteChanged"/></summary>
        public const string RaiseCanExecuteChanged = "RaiseCanExecuteChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.OnCanExecuteChanged"/></summary>
        public const string OnCanExecuteChanged = "OnCanExecuteChanged";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.CanExecute"/></summary>
        public const string ICommand_CanExecute = "ICommand.CanExecute";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.Execute"/></summary>
        public const string ICommand_Execute = "ICommand.Execute";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand._executeMethod"/></summary>
        public const string _executeMethod = "_executeMethod";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand._canExecuteMethod"/></summary>
        public const string _canExecuteMethod = "_canExecuteMethod";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand._isAutomaticRequeryDisabled"/></summary>
        public const string _isAutomaticRequeryDisabled = "_isAutomaticRequeryDisabled";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand._canExecuteChangedHandlers"/></summary>
        public const string _canExecuteChangedHandlers = "_canExecuteChangedHandlers";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Commands.DelegateCommand.IsAutomaticRequeryDisabled"/></summary>
        public static PropertyPath IsAutomaticRequeryDisabledPath { get { return new PropertyPath("IsAutomaticRequeryDisabled"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper"/></summary>
    public static class CommandManagerHelperMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper.CallWeakReferenceHandlers"/></summary>
        public const string CallWeakReferenceHandlers = "CallWeakReferenceHandlers";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper.AddHandlersToRequerySuggested"/></summary>
        public const string AddHandlersToRequerySuggested = "AddHandlersToRequerySuggested";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper.RemoveHandlersFromRequerySuggested"/></summary>
        public const string RemoveHandlersFromRequerySuggested = "RemoveHandlersFromRequerySuggested";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper.AddWeakReferenceHandler"/></summary>
        public const string AddWeakReferenceHandler = "AddWeakReferenceHandler";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.Commands.CommandManagerHelper.RemoveWeakReferenceHandler"/></summary>
        public const string RemoveWeakReferenceHandler = "RemoveWeakReferenceHandler";


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Images.Metadata
{
    /// <summary>Metadata for File down-arrow-3675-16.png</summary>
    public static class DownArrow367516Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Images/down-arrow-3675-16.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/down-arrow-3675-16.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/down-arrow-3675-16.png")); } }


    }

    /// <summary>Metadata for File DownArrow-32.png</summary>
    public static class DownArrow32Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Images/DownArrow-32.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/DownArrow-32.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/DownArrow-32.png")); } }


    }

    /// <summary>Metadata for File UpArrow-32.png</summary>
    public static class UpArrow32Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Images/UpArrow-32.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/UpArrow-32.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Images/UpArrow-32.png")); } }


    }

}

namespace HedgeHog.Alice.Client.Models.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Models.AccountModelBase"/></summary>
    public static class AccountModelBaseMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Models.AccountModelBase._coreFX"/></summary>
        public const string _coreFX = "_coreFX";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.CoreFX"/></summary>
        public const string CoreFX = "CoreFX";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.fwLocal"/></summary>
        public const string fwLocal = "fwLocal";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.IsLoggedIn"/></summary>
        public const string IsLoggedIn = "IsLoggedIn";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Models.AccountModelBase._tradingAccount"/></summary>
        public const string _tradingAccount = "_tradingAccount";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingAccount"/></summary>
        public const string TradingAccount = "TradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Models.AccountModelBase._tradingPassword"/></summary>
        public const string _tradingPassword = "_tradingPassword";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingPassword"/></summary>
        public const string TradingPassword = "TradingPassword";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingDemo"/></summary>
        public const string TradingDemo = "TradingDemo";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.CoreFX"/></summary>
        public static PropertyPath CoreFXPath { get { return new PropertyPath("CoreFX"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.IsLoggedIn"/></summary>
        public static PropertyPath IsLoggedInPath { get { return new PropertyPath("IsLoggedIn"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingAccount"/></summary>
        public static PropertyPath TradingAccountPath { get { return new PropertyPath("TradingAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingPassword"/></summary>
        public static PropertyPath TradingPasswordPath { get { return new PropertyPath("TradingPassword"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Models.AccountModelBase.TradingDemo"/></summary>
        public static PropertyPath TradingDemoPath { get { return new PropertyPath("TradingDemo"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Models.AccountLocal"/></summary>
    public static class AccountLocalMetadata
    {
        
    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Properties.DataSources.Metadata
{
    /// <summary>Metadata for File HedgeHog.Alice.Client.Models.AliceEntities.datasource</summary>
    public static class HedgeHogAliceClientModelsAliceEntitiesDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Alice.Client.Models.AliceEntities.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Alice.Client.Models.AliceEntities.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Alice.Client.Models.AliceEntities.datasource")); } }


    }

    /// <summary>Metadata for File HedgeHog.Shared.Account.datasource</summary>
    public static class HedgeHogSharedAccountDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Account.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Account.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Account.datasource")); } }


    }

    /// <summary>Metadata for File HedgeHog.Shared.AccountInfo.datasource</summary>
    public static class HedgeHogSharedAccountInfoDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.AccountInfo.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.AccountInfo.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.AccountInfo.datasource")); } }


    }

    /// <summary>Metadata for File HedgeHog.Shared.Trade.datasource</summary>
    public static class HedgeHogSharedTradeDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Trade.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Trade.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/HedgeHog.Shared.Trade.datasource")); } }


    }

    /// <summary>Metadata for File Order2GoAddIn.Trade.datasource</summary>
    public static class Order2GoAddInTradeDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/Order2GoAddIn.Trade.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/Order2GoAddIn.Trade.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/Order2GoAddIn.Trade.datasource")); } }


    }

    /// <summary>Metadata for File TradingAccountModel.datasource</summary>
    public static class TradingAccountModelDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/DataSources/TradingAccountModel.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/TradingAccountModel.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/DataSources/TradingAccountModel.datasource")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Properties.Metadata
{
    /// <summary>Metadata for File Resources.resx</summary>
    public static class ResourcesResx    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/Resources.resx", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/Resources.resx"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/Resources.resx")); } }


    }

    /// <summary>Metadata for File Settings.settings</summary>
    public static class SettingsSettings    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Properties/Settings.settings", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/Settings.settings"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Properties/Settings.settings")); } }


    }

}

namespace HedgeHog.Alice.Client.Properties.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Properties.Resources"/></summary>
    public static class ResourcesMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Properties.Resources.resourceMan"/></summary>
        public const string resourceMan = "resourceMan";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Properties.Resources.resourceCulture"/></summary>
        public const string resourceCulture = "resourceCulture";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Resources.ResourceManager"/></summary>
        public const string ResourceManager = "ResourceManager";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Resources.Culture"/></summary>
        public const string Culture = "Culture";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Resources.ResourceManager"/></summary>
        public static PropertyPath ResourceManagerPath { get { return new PropertyPath("ResourceManager"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Resources.Culture"/></summary>
        public static PropertyPath CulturePath { get { return new PropertyPath("Culture"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.Properties.Settings"/></summary>
    public static class SettingsMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.Properties.Settings.defaultInstance"/></summary>
        public const string defaultInstance = "defaultInstance";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Settings.Default"/></summary>
        public const string Default = "Default";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Settings.ForexConnectionString"/></summary>
        public const string ForexConnectionString = "ForexConnectionString";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Settings.Default"/></summary>
        public static PropertyPath DefaultPath { get { return new PropertyPath("Default"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.Properties.Settings.ForexConnectionString"/></summary>
        public static PropertyPath ForexConnectionStringPath { get { return new PropertyPath("ForexConnectionString"); } }

    }

}

namespace HedgeHog.Alice.Client.FileMetadata.RemoteControl.Metadata
{
    /// <summary>Metadata for XAML ButtonImage.xaml</summary>
    public static class ButtonImageXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/RemoteControl/ButtonImage.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/ButtonImage.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/ButtonImage.xaml")); } }


    }

    /// <summary>Metadata for XAML OrderTemplates.xaml</summary>
    public static class OrderTemplatesXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/RemoteControl/OrderTemplates.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/OrderTemplates.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/OrderTemplates.xaml")); } }


    }

    /// <summary>Metadata for XAML RemoteControl.xaml</summary>
    public static class RemoteControlXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/RemoteControl/RemoteControl.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/RemoteControl.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/RemoteControl/RemoteControl.xaml")); } }

            /// <summary>Represents x:Key="DeleteAccountCellTemplate"/></summary>
            public static string DeleteAccountCellTemplateKey { get { return "DeleteAccountCellTemplate"; } }

            /// <summary>Represents x:Key="InstrumentTemplate"/></summary>
            public static string InstrumentTemplateKey { get { return "InstrumentTemplate"; } }

            /// <summary>Represents x:Key="InstrumentEditTemplate"/></summary>
            public static string InstrumentEditTemplateKey { get { return "InstrumentEditTemplate"; } }

            /// <summary>Represents x:Key="BuyCellTemplate"/></summary>
            public static string BuyCellTemplateKey { get { return "BuyCellTemplate"; } }

            /// <summary>Represents x:Key="SellCellTemplate"/></summary>
            public static string SellCellTemplateKey { get { return "SellCellTemplate"; } }

            /// <summary>Represents x:Key="StopCellTemplate"/></summary>
            public static string StopCellTemplateKey { get { return "StopCellTemplate"; } }

            /// <summary>Represents x:Key="StopCellEditTemplate"/></summary>
            public static string StopCellEditTemplateKey { get { return "StopCellEditTemplate"; } }

            /// <summary>Represents x:Key="LimitBarCellTemplate"/></summary>
            public static string LimitBarCellTemplateKey { get { return "LimitBarCellTemplate"; } }

            /// <summary>Represents x:Key="NetCellTemplate"/></summary>
            public static string NetCellTemplateKey { get { return "NetCellTemplate"; } }

            /// <summary>Represents x:Key="LossCellTemplate"/></summary>
            public static string LossCellTemplateKey { get { return "LossCellTemplate"; } }

            /// <summary>Represents x:Key="LossEditCellTemplate"/></summary>
            public static string LossEditCellTemplateKey { get { return "LossEditCellTemplate"; } }

            /// <summary>Represents x:Key="CloseCellTemplate"/></summary>
            public static string CloseCellTemplateKey { get { return "CloseCellTemplate"; } }

            /// <summary>Represents x:Key="ReverseCellTemplate"/></summary>
            public static string ReverseCellTemplateKey { get { return "ReverseCellTemplate"; } }

            /// <summary>Represents x:Key="FreezeValues"/></summary>
            public static string FreezeValuesKey { get { return "FreezeValues"; } }

            /// <summary>Represents x:Key="TradeDirectionValues"/></summary>
            public static string TradeDirectionValuesKey { get { return "TradeDirectionValues"; } }

            /// <summary>Represents x:Key="StrategyValues"/></summary>
            public static string StrategyValuesKey { get { return "StrategyValues"; } }

            /// <summary>Represents x:Key="CorridorCalculationValues"/></summary>
            public static string CorridorCalculationValuesKey { get { return "CorridorCalculationValues"; } }

            /// <summary>Represents x:Key="PapayaWhipBackgroundStyle"/></summary>
            public static string PapayaWhipBackgroundStyleKey { get { return "PapayaWhipBackgroundStyle"; } }


    }

}

namespace HedgeHog.Alice.Client.RemoteControl.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.RemoteControl.ButtonImage"/></summary>
    public static class ButtonImageMetadata
    {
        
    }

}

namespace HedgeHog.Alice.Client.FileMetadata.ServiceReferences.TraderService.Metadata
{
    /// <summary>Metadata for File Arrays.xsd</summary>
    public static class ArraysXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/Arrays.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/Arrays.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/Arrays.xsd")); } }


    }

    /// <summary>Metadata for File configuration.svcinfo</summary>
    public static class ConfigurationSvcinfo    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/configuration.svcinfo", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/configuration.svcinfo"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/configuration.svcinfo")); } }


    }

    /// <summary>Metadata for File configuration91.svcinfo</summary>
    public static class Configuration91Svcinfo    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/configuration91.svcinfo", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/configuration91.svcinfo"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/configuration91.svcinfo")); } }


    }

    /// <summary>Metadata for File HedgeHog.Alice.WCF.xsd</summary>
    public static class HedgeHogAliceWCFXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Alice.WCF.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Alice.WCF.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Alice.WCF.xsd")); } }


    }

    /// <summary>Metadata for File HedgeHog.Shared.xsd</summary>
    public static class HedgeHogSharedXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Shared.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Shared.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Shared.xsd")); } }


    }

    /// <summary>Metadata for File Reference.svcmap</summary>
    public static class ReferenceSvcmap    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/Reference.svcmap", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/Reference.svcmap"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/Reference.svcmap")); } }


    }

    /// <summary>Metadata for File HedgeHog.Alice.Client.TraderService.CompositeType.datasource</summary>
    public static class HedgeHogAliceClientTraderServiceCompositeTypeDatasource    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Alice.Client.TraderService.CompositeType.datasource", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Alice.Client.TraderService.CompositeType.datasource"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/HedgeHog.Alice.Client.TraderService.CompositeType.datasource")); } }


    }

    /// <summary>Metadata for File service.wsdl</summary>
    public static class ServiceWsdl    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/service.wsdl", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service.wsdl"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service.wsdl")); } }


    }

    /// <summary>Metadata for File service.xsd</summary>
    public static class ServiceXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/service.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service.xsd")); } }


    }

    /// <summary>Metadata for File service1.xsd</summary>
    public static class Service1Xsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/service1.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service1.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/service1.xsd")); } }


    }

    /// <summary>Metadata for File System.xsd</summary>
    public static class SystemXsd    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Service References/TraderService/System.xsd", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/System.xsd"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Service References/TraderService/System.xsd")); } }


    }

}

namespace HedgeHog.Alice.Client.TraderService.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TraderService.CompositeType"/></summary>
    public static class CompositeTypeMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.extensionDataField"/></summary>
        public const string extensionDataField = "extensionDataField";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.BoolValueField"/></summary>
        public const string BoolValueField = "BoolValueField";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.StringValueField"/></summary>
        public const string StringValueField = "StringValueField";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.ExtensionData"/></summary>
        public const string ExtensionData = "ExtensionData";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.BoolValue"/></summary>
        public const string BoolValue = "BoolValue";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.StringValue"/></summary>
        public const string StringValue = "StringValue";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.RaisePropertyChanged"/></summary>
        public const string RaisePropertyChanged = "RaisePropertyChanged";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.ExtensionData"/></summary>
        public static PropertyPath ExtensionDataPath { get { return new PropertyPath("ExtensionData"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.BoolValue"/></summary>
        public static PropertyPath BoolValuePath { get { return new PropertyPath("BoolValue"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.TraderService.CompositeType.StringValue"/></summary>
        public static PropertyPath StringValuePath { get { return new PropertyPath("StringValue"); } }

    }

    /// <summary>Metadata for interface <see cref="HedgeHog.Alice.Client.TraderService.ITraderService"/></summary>
    public static class ITraderServiceMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.ITraderService.GetData"/></summary>
        public const string GetData = "GetData";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.ITraderService.GetDataUsingDataContract"/></summary>
        public const string GetDataUsingDataContract = "GetDataUsingDataContract";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.ITraderService.OpenNewAccount"/></summary>
        public const string OpenNewAccount = "OpenNewAccount";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.ITraderService.GetAccount"/></summary>
        public const string GetAccount = "GetAccount";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.ITraderService.CloseTrade"/></summary>
        public const string CloseTrade = "CloseTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.ITraderService.CloseTrades"/></summary>
        public const string CloseTrades = "CloseTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.ITraderService.CloseAllTrades"/></summary>
        public const string CloseAllTrades = "CloseAllTrades";


    }

    /// <summary>Metadata for interface <see cref="HedgeHog.Alice.Client.TraderService.ITraderServiceChannel"/></summary>
    public static class ITraderServiceChannelMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.TraderService.TraderServiceClient"/></summary>
    public static class TraderServiceClientMetadata
    {
                /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.TraderServiceClient.GetData"/></summary>
        public const string GetData = "GetData";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.TraderServiceClient.GetDataUsingDataContract"/></summary>
        public const string GetDataUsingDataContract = "GetDataUsingDataContract";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.TraderServiceClient.OpenNewAccount"/></summary>
        public const string OpenNewAccount = "OpenNewAccount";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.TraderServiceClient.GetAccount"/></summary>
        public const string GetAccount = "GetAccount";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.TraderServiceClient.CloseTrade"/></summary>
        public const string CloseTrade = "CloseTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.TraderServiceClient.CloseTrades"/></summary>
        public const string CloseTrades = "CloseTrades";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.TraderService.TraderServiceClient.CloseAllTrades"/></summary>
        public const string CloseAllTrades = "CloseAllTrades";


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Store.Metadata
{
    /// <summary>Metadata for File Alice.sdf</summary>
    public static class AliceSdf    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Store/Alice.sdf", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Store/Alice.sdf"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Store/Alice.sdf")); } }


    }

    /// <summary>Metadata for File Alice.xls</summary>
    public static class AliceXls    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Store/Alice.xls", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Store/Alice.xls"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Store/Alice.xls")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.Themes.Metadata
{
    /// <summary>Metadata for File DownArrow-32.png</summary>
    public static class DownArrow32Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Themes/DownArrow-32.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/DownArrow-32.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/DownArrow-32.png")); } }


    }

    /// <summary>Metadata for XAML Generic.xaml</summary>
    public static class GenericXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Themes/Generic.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/Generic.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/Generic.xaml")); } }

            /// <summary>Represents x:Key="BoolToColorConverter"/></summary>
            public static string BoolToColorConverterKey { get { return "BoolToColorConverter"; } }

            /// <summary>Represents x:Key="ProfitToColorConverter"/></summary>
            public static string ProfitToColorConverterKey { get { return "ProfitToColorConverter"; } }

            /// <summary>Represents x:Key="CombinedBalanceCellTemplate"/></summary>
            public static string CombinedBalanceCellTemplateKey { get { return "CombinedBalanceCellTemplate"; } }

            /// <summary>Represents x:Key="CombinedProfitCellTemplate"/></summary>
            public static string CombinedProfitCellTemplateKey { get { return "CombinedProfitCellTemplate"; } }


    }

    /// <summary>Metadata for File UpArrow-32.png</summary>
    public static class UpArrow32Png    {
            /// <summary>Resource pack URI for file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/Themes/UpArrow-32.png", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/UpArrow-32.png"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/Themes/UpArrow-32.png")); } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.UI.Metadata
{
    /// <summary>Metadata for XAML Alice.xaml</summary>
    public static class AliceXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Alice.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Alice.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Alice.xaml")); } }


    }

    /// <summary>Metadata for XAML TradesOnServer.xaml</summary>
    public static class TradesOnServerXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/TradesOnServer.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/TradesOnServer.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/TradesOnServer.xaml")); } }

            /// <summary>Represents x:Key="CloseLocalTradeTemplate"/></summary>
            public static string CloseLocalTradeTemplateKey { get { return "CloseLocalTradeTemplate"; } }

            /// <summary>Represents x:Key="CloseServerTradeTemplate"/></summary>
            public static string CloseServerTradeTemplateKey { get { return "CloseServerTradeTemplate"; } }

            /// <summary>Represents x:Key="SyncTradeTemplate"/></summary>
            public static string SyncTradeTemplateKey { get { return "SyncTradeTemplate"; } }

            /// <summary>Represents x:Key="TradesOnLocal"/></summary>
            public static string TradesOnLocalKey { get { return "TradesOnLocal"; } }

            /// <summary>Represents x:Key="TradesDifference"/></summary>
            public static string TradesDifferenceKey { get { return "TradesDifference"; } }


    }

}

namespace HedgeHog.Alice.Client.UI.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Alice"/></summary>
    public static class AliceMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.DataGrid_D"/></summary>
    public static class DataGrid_DMetadata
    {
        
    }

}

namespace HedgeHog.Alice.Client.FileMetadata.UI.Controls.Account.Metadata
{
    /// <summary>Metadata for XAML AccountLogin.xaml</summary>
    public static class AccountLoginXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Controls/Account/AccountLogin.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Controls/Account/AccountLogin.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Controls/Account/AccountLogin.xaml")); } }


    }

}

namespace HedgeHog.Alice.Client.UI.Controls.Metadata
{
    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView"/></summary>
    public static class AccountLoginViewMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.masterModel"/></summary>
        public const string masterModel = "masterModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.AccountLoginCommand"/></summary>
        public const string AccountLoginCommand = "AccountLoginCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.AccountLoginCommandProperty"/></summary>
        public const string AccountLoginCommandProperty = "AccountLoginCommandProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.OpenNewAccountCommand"/></summary>
        public const string OpenNewAccountCommand = "OpenNewAccountCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.OpenNewAccountCommandProperty"/></summary>
        public const string OpenNewAccountCommandProperty = "OpenNewAccountCommandProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingAccount"/></summary>
        public const string TradingAccount = "TradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingAccountProperty"/></summary>
        public const string TradingAccountProperty = "TradingAccountProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingPassword"/></summary>
        public const string TradingPassword = "TradingPassword";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingPasswordProperty"/></summary>
        public const string TradingPasswordProperty = "TradingPasswordProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingDemo"/></summary>
        public const string TradingDemo = "TradingDemo";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingDemoProperty"/></summary>
        public const string TradingDemoProperty = "TradingDemoProperty";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.Ligin_Click"/></summary>
        public const string Ligin_Click = "Ligin_Click";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.NewAccount_Click"/></summary>
        public const string NewAccount_Click = "NewAccount_Click";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.masterModel"/></summary>
        public static PropertyPath masterModelPath { get { return new PropertyPath("masterModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.AccountLoginCommand"/></summary>
        public static PropertyPath AccountLoginCommandPath { get { return new PropertyPath("AccountLoginCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.OpenNewAccountCommand"/></summary>
        public static PropertyPath OpenNewAccountCommandPath { get { return new PropertyPath("OpenNewAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingAccount"/></summary>
        public static PropertyPath TradingAccountPath { get { return new PropertyPath("TradingAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingPassword"/></summary>
        public static PropertyPath TradingPasswordPath { get { return new PropertyPath("TradingPassword"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginView.TradingDemo"/></summary>
        public static PropertyPath TradingDemoPath { get { return new PropertyPath("TradingDemo"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.OpenNewAccountRelayCommand"/></summary>
    public static class OpenNewAccountRelayCommandMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.AccountLoginRelayCommand"/></summary>
    public static class AccountLoginRelayCommandMetadata
    {
        
    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo"/></summary>
    public static class LoginInfoMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Account"/></summary>
        public const string Account = "Account";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Password"/></summary>
        public const string Password = "Password";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.IsDemo"/></summary>
        public const string IsDemo = "IsDemo";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Canceled"/></summary>
        public const string Canceled = "Canceled";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Account"/></summary>
        public static PropertyPath AccountPath { get { return new PropertyPath("Account"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Password"/></summary>
        public static PropertyPath PasswordPath { get { return new PropertyPath("Password"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.IsDemo"/></summary>
        public static PropertyPath IsDemoPath { get { return new PropertyPath("IsDemo"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.LoginInfo.Canceled"/></summary>
        public static PropertyPath CanceledPath { get { return new PropertyPath("Canceled"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount"/></summary>
    public static class SlaveAccountMetadata
    {
                /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.MasterModel"/></summary>
        public const string MasterModel = "MasterModel";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.MasterModelProperty"/></summary>
        public const string MasterModelProperty = "MasterModelProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.SlaveModel"/></summary>
        public const string SlaveModel = "SlaveModel";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.SlaveModelProperty"/></summary>
        public const string SlaveModelProperty = "SlaveModelProperty";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.SetModelDP{T}"/></summary>
        public const string SetModelDP = "SetModelDP";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradeRatio"/></summary>
        public const string TradeRatio = "TradeRatio";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradeRatioProperty"/></summary>
        public const string TradeRatioProperty = "TradeRatioProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingAccount"/></summary>
        public const string TradingAccount = "TradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingAccountProperty"/></summary>
        public const string TradingAccountProperty = "TradingAccountProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingPassword"/></summary>
        public const string TradingPassword = "TradingPassword";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingPasswordProperty"/></summary>
        public const string TradingPasswordProperty = "TradingPasswordProperty";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingDemo"/></summary>
        public const string TradingDemo = "TradingDemo";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingDemoProperty"/></summary>
        public const string TradingDemoProperty = "TradingDemoProperty";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.Login"/></summary>
        public const string Login = "Login";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.MasterModel"/></summary>
        public static PropertyPath MasterModelPath { get { return new PropertyPath("MasterModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.SlaveModel"/></summary>
        public static PropertyPath SlaveModelPath { get { return new PropertyPath("SlaveModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradeRatio"/></summary>
        public static PropertyPath TradeRatioPath { get { return new PropertyPath("TradeRatio"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingAccount"/></summary>
        public static PropertyPath TradingAccountPath { get { return new PropertyPath("TradingAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingPassword"/></summary>
        public static PropertyPath TradingPasswordPath { get { return new PropertyPath("TradingPassword"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccount.TradingDemo"/></summary>
        public static PropertyPath TradingDemoPath { get { return new PropertyPath("TradingDemo"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel"/></summary>
    public static class SlaveAccountModelMetadata
    {
                /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.secondsToWaitForTrade"/></summary>
        public const string secondsToWaitForTrade = "secondsToWaitForTrade";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.logFileName"/></summary>
        public const string logFileName = "logFileName";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.isInDesign"/></summary>
        public const string isInDesign = "isInDesign";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TargetInPips"/></summary>
        public const string TargetInPips = "TargetInPips";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.syncronizeScheduler"/></summary>
        public const string syncronizeScheduler = "syncronizeScheduler";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._accountModel"/></summary>
        public const string _accountModel = "_accountModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AccountModel"/></summary>
        public const string AccountModel = "AccountModel";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._masterModel"/></summary>
        public const string _masterModel = "_masterModel";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.MasterModel"/></summary>
        public const string MasterModel = "MasterModel";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.value_MasterTradeRemoved"/></summary>
        public const string value_MasterTradeRemoved = "value_MasterTradeRemoved";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.value_MasterTradeAdded"/></summary>
        public const string value_MasterTradeAdded = "value_MasterTradeAdded";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.value_SlaveLoginRequestEvent"/></summary>
        public const string value_SlaveLoginRequestEvent = "value_SlaveLoginRequestEvent";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.value_MasterListChangedEvent"/></summary>
        public const string value_MasterListChangedEvent = "value_MasterListChangedEvent";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerToLocalRatioValue"/></summary>
        public const string ServerToLocalRatioValue = "ServerToLocalRatioValue";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerToLocalRatio"/></summary>
        public const string ServerToLocalRatio = "ServerToLocalRatio";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._serverTime"/></summary>
        public const string _serverTime = "_serverTime";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerTime"/></summary>
        public const string ServerTime = "ServerTime";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AliceMode"/></summary>
        public const string AliceMode = "AliceMode";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsAliceActive"/></summary>
        public const string IsAliceActive = "IsAliceActive";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LocalTrades"/></summary>
        public const string LocalTrades = "LocalTrades";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LocalTradesList"/></summary>
        public const string LocalTradesList = "LocalTradesList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AbsentTrades"/></summary>
        public const string AbsentTrades = "AbsentTrades";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AbsentTradesList"/></summary>
        public const string AbsentTradesList = "AbsentTradesList";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.masterTradesPending"/></summary>
        public const string masterTradesPending = "masterTradesPending";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.masterTradesSynced"/></summary>
        public const string masterTradesSynced = "masterTradesSynced";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._masterList"/></summary>
        public const string _masterList = "_masterList";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.MasterList"/></summary>
        public const string MasterList = "MasterList";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.InvokeSyncronize"/></summary>
        public const string InvokeSyncronize = "InvokeSyncronize";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.Syncronize"/></summary>
        public const string Syncronize = "Syncronize";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsStopOk"/></summary>
        public const string IsStopOk = "IsStopOk";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsLimitOk"/></summary>
        public const string IsLimitOk = "IsLimitOk";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncTrade"/></summary>
        public const string SyncTrade = "SyncTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.GetLocalBuyFromMaster"/></summary>
        public const string GetLocalBuyFromMaster = "GetLocalBuyFromMaster";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.GetMasterStop"/></summary>
        public const string GetMasterStop = "GetMasterStop";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.GetMasterLimit"/></summary>
        public const string GetMasterLimit = "GetMasterLimit";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.OpenTradeSchedulers"/></summary>
        public const string OpenTradeSchedulers = "OpenTradeSchedulers";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.OpenTrade"/></summary>
        public const string OpenTrade = "OpenTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.fwLocal_Error"/></summary>
        public const string fwLocal_Error = "fwLocal_Error";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ShowTrades"/></summary>
        public const string ShowTrades = "ShowTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.tradeRequestManager"/></summary>
        public const string tradeRequestManager = "tradeRequestManager";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.DoOrderRemoved"/></summary>
        public const string DoOrderRemoved = "DoOrderRemoved";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingAccountModel"/></summary>
        public const string TradingAccountModel = "TradingAccountModel";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._coreFX"/></summary>
        public const string _coreFX = "_coreFX";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CoreFX"/></summary>
        public const string CoreFX = "CoreFX";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.fwLocal"/></summary>
        public const string fwLocal = "fwLocal";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsLoggedIn"/></summary>
        public const string IsLoggedIn = "IsLoggedIn";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.fwLocal_PriceChanged"/></summary>
        public const string fwLocal_PriceChanged = "fwLocal_PriceChanged";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.resubmitMasterPendingTrade"/></summary>
        public const string resubmitMasterPendingTrade = "resubmitMasterPendingTrade";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.fw_TradeAded"/></summary>
        public const string fw_TradeAded = "fw_TradeAded";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._AccountLoginCommand"/></summary>
        public const string _AccountLoginCommand = "_AccountLoginCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AccountLoginCommand"/></summary>
        public const string AccountLoginCommand = "AccountLoginCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AccountLogin"/></summary>
        public const string AccountLogin = "AccountLogin";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.Login"/></summary>
        public const string Login = "Login";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._SyncTradeCommand"/></summary>
        public const string _SyncTradeCommand = "_SyncTradeCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncTradeCommand"/></summary>
        public const string SyncTradeCommand = "SyncTradeCommand";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.syncTradeCount"/></summary>
        public const string syncTradeCount = "syncTradeCount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.syncAll"/></summary>
        public const string syncAll = "syncAll";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._SyncAllTradeCommand"/></summary>
        public const string _SyncAllTradeCommand = "_SyncAllTradeCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncAllTradeCommand"/></summary>
        public const string SyncAllTradeCommand = "SyncAllTradeCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncAllTrades"/></summary>
        public const string SyncAllTrades = "SyncAllTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._OpenNewLocalAccountCommand"/></summary>
        public const string _OpenNewLocalAccountCommand = "_OpenNewLocalAccountCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.OpenNewLocalAccountCommand"/></summary>
        public const string OpenNewLocalAccountCommand = "OpenNewLocalAccountCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.OpenNewLocalAccount"/></summary>
        public const string OpenNewLocalAccount = "OpenNewLocalAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._CloseLocalTradeCommand"/></summary>
        public const string _CloseLocalTradeCommand = "_CloseLocalTradeCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseLocalTradeCommand"/></summary>
        public const string CloseLocalTradeCommand = "CloseLocalTradeCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseLocalTrade"/></summary>
        public const string CloseLocalTrade = "CloseLocalTrade";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._CloseAllLocalTradesCommand"/></summary>
        public const string _CloseAllLocalTradesCommand = "_CloseAllLocalTradesCommand";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseAllLocalTradesCommand"/></summary>
        public const string CloseAllLocalTradesCommand = "CloseAllLocalTradesCommand";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseAllLocalTrades"/></summary>
        public const string CloseAllLocalTrades = "CloseAllLocalTrades";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._TradingAccount"/></summary>
        public const string _TradingAccount = "_TradingAccount";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingAccount"/></summary>
        public const string TradingAccount = "TradingAccount";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._TradingPassword"/></summary>
        public const string _TradingPassword = "_TradingPassword";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingPassword"/></summary>
        public const string TradingPassword = "TradingPassword";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._TradingDemo"/></summary>
        public const string _TradingDemo = "_TradingDemo";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingDemo"/></summary>
        public const string TradingDemo = "TradingDemo";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.lastLogTime"/></summary>
        public const string lastLogTime = "lastLogTime";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LogText"/></summary>
        public const string LogText = "LogText";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._logQueue"/></summary>
        public const string _logQueue = "_logQueue";

        /// <summary>Refers to field <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel._log"/></summary>
        public const string _log = "_log";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.Log"/></summary>
        public const string Log = "Log";

        /// <summary>Refers to method <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.GetExceptionShort"/></summary>
        public const string GetExceptionShort = "GetExceptionShort";

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsLogExpanded"/></summary>
        public const string IsLogExpanded = "IsLogExpanded";


        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.isInDesign"/></summary>
        public static PropertyPath isInDesignPath { get { return new PropertyPath("isInDesign"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TargetInPips"/></summary>
        public static PropertyPath TargetInPipsPath { get { return new PropertyPath("TargetInPips"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AccountModel"/></summary>
        public static PropertyPath AccountModelPath { get { return new PropertyPath("AccountModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.MasterModel"/></summary>
        public static PropertyPath MasterModelPath { get { return new PropertyPath("MasterModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerToLocalRatioValue"/></summary>
        public static PropertyPath ServerToLocalRatioValuePath { get { return new PropertyPath("ServerToLocalRatioValue"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerToLocalRatio"/></summary>
        public static PropertyPath ServerToLocalRatioPath { get { return new PropertyPath("ServerToLocalRatio"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.ServerTime"/></summary>
        public static PropertyPath ServerTimePath { get { return new PropertyPath("ServerTime"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AliceMode"/></summary>
        public static PropertyPath AliceModePath { get { return new PropertyPath("AliceMode"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsAliceActive"/></summary>
        public static PropertyPath IsAliceActivePath { get { return new PropertyPath("IsAliceActive"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LocalTrades"/></summary>
        public static PropertyPath LocalTradesPath { get { return new PropertyPath("LocalTrades"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LocalTradesList"/></summary>
        public static PropertyPath LocalTradesListPath { get { return new PropertyPath("LocalTradesList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AbsentTrades"/></summary>
        public static PropertyPath AbsentTradesPath { get { return new PropertyPath("AbsentTrades"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AbsentTradesList"/></summary>
        public static PropertyPath AbsentTradesListPath { get { return new PropertyPath("AbsentTradesList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.MasterList"/></summary>
        public static PropertyPath MasterListPath { get { return new PropertyPath("MasterList"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingAccountModel"/></summary>
        public static PropertyPath TradingAccountModelPath { get { return new PropertyPath("TradingAccountModel"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CoreFX"/></summary>
        public static PropertyPath CoreFXPath { get { return new PropertyPath("CoreFX"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsLoggedIn"/></summary>
        public static PropertyPath IsLoggedInPath { get { return new PropertyPath("IsLoggedIn"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.AccountLoginCommand"/></summary>
        public static PropertyPath AccountLoginCommandPath { get { return new PropertyPath("AccountLoginCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncTradeCommand"/></summary>
        public static PropertyPath SyncTradeCommandPath { get { return new PropertyPath("SyncTradeCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.SyncAllTradeCommand"/></summary>
        public static PropertyPath SyncAllTradeCommandPath { get { return new PropertyPath("SyncAllTradeCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.OpenNewLocalAccountCommand"/></summary>
        public static PropertyPath OpenNewLocalAccountCommandPath { get { return new PropertyPath("OpenNewLocalAccountCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseLocalTradeCommand"/></summary>
        public static PropertyPath CloseLocalTradeCommandPath { get { return new PropertyPath("CloseLocalTradeCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.CloseAllLocalTradesCommand"/></summary>
        public static PropertyPath CloseAllLocalTradesCommandPath { get { return new PropertyPath("CloseAllLocalTradesCommand"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingAccount"/></summary>
        public static PropertyPath TradingAccountPath { get { return new PropertyPath("TradingAccount"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingPassword"/></summary>
        public static PropertyPath TradingPasswordPath { get { return new PropertyPath("TradingPassword"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.TradingDemo"/></summary>
        public static PropertyPath TradingDemoPath { get { return new PropertyPath("TradingDemo"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.LogText"/></summary>
        public static PropertyPath LogTextPath { get { return new PropertyPath("LogText"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.Log"/></summary>
        public static PropertyPath LogPath { get { return new PropertyPath("Log"); } }

        /// <summary>Refers to property <see cref="HedgeHog.Alice.Client.UI.Controls.SlaveAccountModel.IsLogExpanded"/></summary>
        public static PropertyPath IsLogExpandedPath { get { return new PropertyPath("IsLogExpanded"); } }

    }

    /// <summary>Metadata for class <see cref="HedgeHog.Alice.Client.UI.Controls.AccountInfo"/></summary>
    public static class AccountInfoMetadata
    {
        
    }

}

namespace HedgeHog.Alice.Client.FileMetadata.UI.Controls.Account.View.Metadata
{
    /// <summary>Metadata for XAML SlaveAccount.xaml</summary>
    public static class SlaveAccountXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Controls/Account/View/SlaveAccount.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Controls/Account/View/SlaveAccount.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Controls/Account/View/SlaveAccount.xaml")); } }

            /// <summary>Represents x:Key="CloseLocalTradeTemplate"/></summary>
            public static string CloseLocalTradeTemplateKey { get { return "CloseLocalTradeTemplate"; } }

            /// <summary>Represents x:Key="SyncTradeTemplate"/></summary>
            public static string SyncTradeTemplateKey { get { return "SyncTradeTemplate"; } }


    }

}

namespace HedgeHog.Alice.Client.FileMetadata.UI.Style.Metadata
{
    /// <summary>Metadata for XAML WhistlerBlue.xaml</summary>
    public static class WhistlerBlueXaml    {
            /// <summary>Resource pack URI for XAML file.</summary>
            public static Uri RelativePackUri { get { return new Uri(@"/HedgeHog.Alice.Client;component/UI/Style/WhistlerBlue.xaml", UriKind.Relative); } }

            /// <summary>Relative resource pack URI for the file.</summary>
            public static Uri PackUri { get { return new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/WhistlerBlue.xaml"); } }

            /// <summary>BitmapImage for the file.</summary>
            public static BitmapImage Source { get { return new BitmapImage(new Uri(@"pack://application:,,,/HedgeHog.Alice.Client;component/UI/Style/WhistlerBlue.xaml")); } }

            /// <summary>Represents x:Key="OutsideFontColor"/></summary>
            public static string OutsideFontColorKey { get { return "OutsideFontColor"; } }

            /// <summary>Represents x:Key="ButtonFontColor"/></summary>
            public static string ButtonFontColorKey { get { return "ButtonFontColor"; } }

            /// <summary>Represents x:Key="Focus"/></summary>
            public static string FocusKey { get { return "Focus"; } }

            /// <summary>Represents x:Key="HyperlinkFocus"/></summary>
            public static string HyperlinkFocusKey { get { return "HyperlinkFocus"; } }

            /// <summary>Represents x:Key="Calendar"/></summary>
            public static string CalendarKey { get { return "Calendar"; } }

            /// <summary>Represents x:Key="PressStroke1"/></summary>
            public static string PressStroke1Key { get { return "PressStroke1"; } }

            /// <summary>Represents x:Key="PressStroke2"/></summary>
            public static string PressStroke2Key { get { return "PressStroke2"; } }

            /// <summary>Represents x:Key="TabStroke"/></summary>
            public static string TabStrokeKey { get { return "TabStroke"; } }

            /// <summary>Represents x:Key="DataSortArrow"/></summary>
            public static string DataSortArrowKey { get { return "DataSortArrow"; } }

            /// <summary>Represents x:Key="DropLocate"/></summary>
            public static string DropLocateKey { get { return "DropLocate"; } }

            /// <summary>Represents x:Key="TreeviewArrowNorm"/></summary>
            public static string TreeviewArrowNormKey { get { return "TreeviewArrowNorm"; } }

            /// <summary>Represents x:Key="TreeviewArrowOver"/></summary>
            public static string TreeviewArrowOverKey { get { return "TreeviewArrowOver"; } }

            /// <summary>Represents x:Key="TreeviewArrowCheck"/></summary>
            public static string TreeviewArrowCheckKey { get { return "TreeviewArrowCheck"; } }

            /// <summary>Represents x:Key="ExpandArrowStroke"/></summary>
            public static string ExpandArrowStrokeKey { get { return "ExpandArrowStroke"; } }

            /// <summary>Represents x:Key="Arrow"/></summary>
            public static string ArrowKey { get { return "Arrow"; } }

            /// <summary>Represents x:Key="Arrow2"/></summary>
            public static string Arrow2Key { get { return "Arrow2"; } }

            /// <summary>Represents x:Key="TextBkgSelection"/></summary>
            public static string TextBkgSelectionKey { get { return "TextBkgSelection"; } }

            /// <summary>Represents x:Key="TextboxOver1"/></summary>
            public static string TextboxOver1Key { get { return "TextboxOver1"; } }

            /// <summary>Represents x:Key="TextboxOver2"/></summary>
            public static string TextboxOver2Key { get { return "TextboxOver2"; } }

            /// <summary>Represents x:Key="TextboxPress1"/></summary>
            public static string TextboxPress1Key { get { return "TextboxPress1"; } }

            /// <summary>Represents x:Key="TextboxPress2"/></summary>
            public static string TextboxPress2Key { get { return "TextboxPress2"; } }

            /// <summary>Represents x:Key="ItemOver1"/></summary>
            public static string ItemOver1Key { get { return "ItemOver1"; } }

            /// <summary>Represents x:Key="ItemOver2"/></summary>
            public static string ItemOver2Key { get { return "ItemOver2"; } }

            /// <summary>Represents x:Key="ItemOverStroke"/></summary>
            public static string ItemOverStrokeKey { get { return "ItemOverStroke"; } }

            /// <summary>Represents x:Key="ItemSelectStroke"/></summary>
            public static string ItemSelectStrokeKey { get { return "ItemSelectStroke"; } }

            /// <summary>Represents x:Key="Over1"/></summary>
            public static string Over1Key { get { return "Over1"; } }

            /// <summary>Represents x:Key="Over2"/></summary>
            public static string Over2Key { get { return "Over2"; } }

            /// <summary>Represents x:Key="Over3"/></summary>
            public static string Over3Key { get { return "Over3"; } }

            /// <summary>Represents x:Key="Press1"/></summary>
            public static string Press1Key { get { return "Press1"; } }

            /// <summary>Represents x:Key="Press2"/></summary>
            public static string Press2Key { get { return "Press2"; } }

            /// <summary>Represents x:Key="Press3"/></summary>
            public static string Press3Key { get { return "Press3"; } }

            /// <summary>Represents x:Key="PressHighlight"/></summary>
            public static string PressHighlightKey { get { return "PressHighlight"; } }

            /// <summary>Represents x:Key="ButtonHighlightMid"/></summary>
            public static string ButtonHighlightMidKey { get { return "ButtonHighlightMid"; } }

            /// <summary>Represents x:Key="ButtonHighlightMid2"/></summary>
            public static string ButtonHighlightMid2Key { get { return "ButtonHighlightMid2"; } }

            /// <summary>Represents x:Key="ButtonHighlightMid3"/></summary>
            public static string ButtonHighlightMid3Key { get { return "ButtonHighlightMid3"; } }

            /// <summary>Represents x:Key="RadioIcon1"/></summary>
            public static string RadioIcon1Key { get { return "RadioIcon1"; } }

            /// <summary>Represents x:Key="RadioIcon2"/></summary>
            public static string RadioIcon2Key { get { return "RadioIcon2"; } }

            /// <summary>Represents x:Key="RadioIcon3"/></summary>
            public static string RadioIcon3Key { get { return "RadioIcon3"; } }

            /// <summary>Represents x:Key="RadioIcon4"/></summary>
            public static string RadioIcon4Key { get { return "RadioIcon4"; } }

            /// <summary>Represents x:Key="RadioIconOver1"/></summary>
            public static string RadioIconOver1Key { get { return "RadioIconOver1"; } }

            /// <summary>Represents x:Key="RadioIconOver2"/></summary>
            public static string RadioIconOver2Key { get { return "RadioIconOver2"; } }

            /// <summary>Represents x:Key="RadioIconPress1"/></summary>
            public static string RadioIconPress1Key { get { return "RadioIconPress1"; } }

            /// <summary>Represents x:Key="RadioIconPress2"/></summary>
            public static string RadioIconPress2Key { get { return "RadioIconPress2"; } }

            /// <summary>Represents x:Key="RadioStroke"/></summary>
            public static string RadioStrokeKey { get { return "RadioStroke"; } }

            /// <summary>Represents x:Key="CheckInnerOver"/></summary>
            public static string CheckInnerOverKey { get { return "CheckInnerOver"; } }

            /// <summary>Represents x:Key="CheckInnerOver2"/></summary>
            public static string CheckInnerOver2Key { get { return "CheckInnerOver2"; } }

            /// <summary>Represents x:Key="CheckInnerPress"/></summary>
            public static string CheckInnerPressKey { get { return "CheckInnerPress"; } }

            /// <summary>Represents x:Key="CheckInnerPress2"/></summary>
            public static string CheckInnerPress2Key { get { return "CheckInnerPress2"; } }

            /// <summary>Represents x:Key="CheckOutterOver"/></summary>
            public static string CheckOutterOverKey { get { return "CheckOutterOver"; } }

            /// <summary>Represents x:Key="CheckOutterOver2"/></summary>
            public static string CheckOutterOver2Key { get { return "CheckOutterOver2"; } }

            /// <summary>Represents x:Key="ThumbPress1"/></summary>
            public static string ThumbPress1Key { get { return "ThumbPress1"; } }

            /// <summary>Represents x:Key="ThumbPress2"/></summary>
            public static string ThumbPress2Key { get { return "ThumbPress2"; } }

            /// <summary>Represents x:Key="ExpanderOver1"/></summary>
            public static string ExpanderOver1Key { get { return "ExpanderOver1"; } }

            /// <summary>Represents x:Key="ExpanderOver2"/></summary>
            public static string ExpanderOver2Key { get { return "ExpanderOver2"; } }

            /// <summary>Represents x:Key="ExpanderOver3"/></summary>
            public static string ExpanderOver3Key { get { return "ExpanderOver3"; } }

            /// <summary>Represents x:Key="ExpanderMid"/></summary>
            public static string ExpanderMidKey { get { return "ExpanderMid"; } }

            /// <summary>Represents x:Key="ExpanderPress1"/></summary>
            public static string ExpanderPress1Key { get { return "ExpanderPress1"; } }

            /// <summary>Represents x:Key="ExpanderPress2"/></summary>
            public static string ExpanderPress2Key { get { return "ExpanderPress2"; } }

            /// <summary>Represents x:Key="ThumbDivetOver"/></summary>
            public static string ThumbDivetOverKey { get { return "ThumbDivetOver"; } }

            /// <summary>Represents x:Key="ThumbDivetFill1"/></summary>
            public static string ThumbDivetFill1Key { get { return "ThumbDivetFill1"; } }

            /// <summary>Represents x:Key="ThumbDivetFill2"/></summary>
            public static string ThumbDivetFill2Key { get { return "ThumbDivetFill2"; } }

            /// <summary>Represents x:Key="btnFocus"/></summary>
            public static string btnFocusKey { get { return "btnFocus"; } }

            /// <summary>Represents x:Key="btnPressStroke1"/></summary>
            public static string btnPressStroke1Key { get { return "btnPressStroke1"; } }

            /// <summary>Represents x:Key="btnPressStroke2"/></summary>
            public static string btnPressStroke2Key { get { return "btnPressStroke2"; } }

            /// <summary>Represents x:Key="btnPressBorder"/></summary>
            public static string btnPressBorderKey { get { return "btnPressBorder"; } }

            /// <summary>Represents x:Key="hyperlinkPress"/></summary>
            public static string hyperlinkPressKey { get { return "hyperlinkPress"; } }

            /// <summary>Represents x:Key="calendarBtnFill"/></summary>
            public static string calendarBtnFillKey { get { return "calendarBtnFill"; } }

            /// <summary>Represents x:Key="calendarTodayStroke"/></summary>
            public static string calendarTodayStrokeKey { get { return "calendarTodayStroke"; } }

            /// <summary>Represents x:Key="treeviewArrowUnchecked"/></summary>
            public static string treeviewArrowUncheckedKey { get { return "treeviewArrowUnchecked"; } }

            /// <summary>Represents x:Key="treeviewArrowHover"/></summary>
            public static string treeviewArrowHoverKey { get { return "treeviewArrowHover"; } }

            /// <summary>Represents x:Key="treeviewArrowChecked"/></summary>
            public static string treeviewArrowCheckedKey { get { return "treeviewArrowChecked"; } }

            /// <summary>Represents x:Key="TextBackgroundSelection"/></summary>
            public static string TextBackgroundSelectionKey { get { return "TextBackgroundSelection"; } }

            /// <summary>Represents x:Key="TextBoxOverBrush"/></summary>
            public static string TextBoxOverBrushKey { get { return "TextBoxOverBrush"; } }

            /// <summary>Represents x:Key="TextBoxPressBrush"/></summary>
            public static string TextBoxPressBrushKey { get { return "TextBoxPressBrush"; } }

            /// <summary>Represents x:Key="TextBoxOver"/></summary>
            public static string TextBoxOverKey { get { return "TextBoxOver"; } }

            /// <summary>Represents x:Key="TextBoxFocus"/></summary>
            public static string TextBoxFocusKey { get { return "TextBoxFocus"; } }

            /// <summary>Represents x:Key="TextBoxNorm"/></summary>
            public static string TextBoxNormKey { get { return "TextBoxNorm"; } }

            /// <summary>Represents x:Key="grayGradient"/></summary>
            public static string grayGradientKey { get { return "grayGradient"; } }

            /// <summary>Represents x:Key="hoverStroke"/></summary>
            public static string hoverStrokeKey { get { return "hoverStroke"; } }

            /// <summary>Represents x:Key="selectedStroke"/></summary>
            public static string selectedStrokeKey { get { return "selectedStroke"; } }

            /// <summary>Represents x:Key="hoverGradient"/></summary>
            public static string hoverGradientKey { get { return "hoverGradient"; } }

            /// <summary>Represents x:Key="hoverGradientVertical"/></summary>
            public static string hoverGradientVerticalKey { get { return "hoverGradientVertical"; } }

            /// <summary>Represents x:Key="BtnOverFill"/></summary>
            public static string BtnOverFillKey { get { return "BtnOverFill"; } }

            /// <summary>Represents x:Key="BtnPressFill"/></summary>
            public static string BtnPressFillKey { get { return "BtnPressFill"; } }

            /// <summary>Represents x:Key="btnOverFillHighlight"/></summary>
            public static string btnOverFillHighlightKey { get { return "btnOverFillHighlight"; } }

            /// <summary>Represents x:Key="btnPressFillHighlight"/></summary>
            public static string btnPressFillHighlightKey { get { return "btnPressFillHighlight"; } }

            /// <summary>Represents x:Key="checkOverStroke"/></summary>
            public static string checkOverStrokeKey { get { return "checkOverStroke"; } }

            /// <summary>Represents x:Key="checkOverFill"/></summary>
            public static string checkOverFillKey { get { return "checkOverFill"; } }

            /// <summary>Represents x:Key="checkPressFill"/></summary>
            public static string checkPressFillKey { get { return "checkPressFill"; } }

            /// <summary>Represents x:Key="checkInnerOverFill"/></summary>
            public static string checkInnerOverFillKey { get { return "checkInnerOverFill"; } }

            /// <summary>Represents x:Key="checkInnerPressFill"/></summary>
            public static string checkInnerPressFillKey { get { return "checkInnerPressFill"; } }

            /// <summary>Represents x:Key="checkIconStroke"/></summary>
            public static string checkIconStrokeKey { get { return "checkIconStroke"; } }

            /// <summary>Represents x:Key="radioIconStroke"/></summary>
            public static string radioIconStrokeKey { get { return "radioIconStroke"; } }

            /// <summary>Represents x:Key="radioIconFill"/></summary>
            public static string radioIconFillKey { get { return "radioIconFill"; } }

            /// <summary>Represents x:Key="radioIconFillOver"/></summary>
            public static string radioIconFillOverKey { get { return "radioIconFillOver"; } }

            /// <summary>Represents x:Key="radioIconFillPress"/></summary>
            public static string radioIconFillPressKey { get { return "radioIconFillPress"; } }

            /// <summary>Represents x:Key="checkInnerOverStroke"/></summary>
            public static string checkInnerOverStrokeKey { get { return "checkInnerOverStroke"; } }

            /// <summary>Represents x:Key="checkInnerPressStroke"/></summary>
            public static string checkInnerPressStrokeKey { get { return "checkInnerPressStroke"; } }

            /// <summary>Represents x:Key="ThumbOver"/></summary>
            public static string ThumbOverKey { get { return "ThumbOver"; } }

            /// <summary>Represents x:Key="ThumbPress"/></summary>
            public static string ThumbPressKey { get { return "ThumbPress"; } }

            /// <summary>Represents x:Key="HeaderSeparator"/></summary>
            public static string HeaderSeparatorKey { get { return "HeaderSeparator"; } }

            /// <summary>Represents x:Key="GridBorder"/></summary>
            public static string GridBorderKey { get { return "GridBorder"; } }

            /// <summary>Represents x:Key="dropLocator"/></summary>
            public static string dropLocatorKey { get { return "dropLocator"; } }

            /// <summary>Represents x:Key="sortArrow"/></summary>
            public static string sortArrowKey { get { return "sortArrow"; } }

            /// <summary>Represents x:Key="ComboTogglePressHighlight"/></summary>
            public static string ComboTogglePressHighlightKey { get { return "ComboTogglePressHighlight"; } }

            /// <summary>Represents x:Key="expanderArrowStroke"/></summary>
            public static string expanderArrowStrokeKey { get { return "expanderArrowStroke"; } }

            /// <summary>Represents x:Key="ExpanderArrowHoverFill1"/></summary>
            public static string ExpanderArrowHoverFill1Key { get { return "ExpanderArrowHoverFill1"; } }

            /// <summary>Represents x:Key="ExpanderArrowHoverFill2"/></summary>
            public static string ExpanderArrowHoverFill2Key { get { return "ExpanderArrowHoverFill2"; } }

            /// <summary>Represents x:Key="ExpanderArrowHoverFill3"/></summary>
            public static string ExpanderArrowHoverFill3Key { get { return "ExpanderArrowHoverFill3"; } }

            /// <summary>Represents x:Key="ExpanderArrowPressedFill1"/></summary>
            public static string ExpanderArrowPressedFill1Key { get { return "ExpanderArrowPressedFill1"; } }

            /// <summary>Represents x:Key="ExpanderArrowPressedFill2"/></summary>
            public static string ExpanderArrowPressedFill2Key { get { return "ExpanderArrowPressedFill2"; } }

            /// <summary>Represents x:Key="ExpanderArrowPressedFill3"/></summary>
            public static string ExpanderArrowPressedFill3Key { get { return "ExpanderArrowPressedFill3"; } }

            /// <summary>Represents x:Key="TabOverStroke"/></summary>
            public static string TabOverStrokeKey { get { return "TabOverStroke"; } }

            /// <summary>Represents x:Key="VTabOverGradient"/></summary>
            public static string VTabOverGradientKey { get { return "VTabOverGradient"; } }

            /// <summary>Represents x:Key="ScrollbarBkgNormStroke"/></summary>
            public static string ScrollbarBkgNormStrokeKey { get { return "ScrollbarBkgNormStroke"; } }

            /// <summary>Represents x:Key="HScrollbarBkgNormFill"/></summary>
            public static string HScrollbarBkgNormFillKey { get { return "HScrollbarBkgNormFill"; } }

            /// <summary>Represents x:Key="HScrollbarBkgOverFill"/></summary>
            public static string HScrollbarBkgOverFillKey { get { return "HScrollbarBkgOverFill"; } }

            /// <summary>Represents x:Key="HScrollbarBkgPressFill"/></summary>
            public static string HScrollbarBkgPressFillKey { get { return "HScrollbarBkgPressFill"; } }

            /// <summary>Represents x:Key="VScrollbarBkgNormFill"/></summary>
            public static string VScrollbarBkgNormFillKey { get { return "VScrollbarBkgNormFill"; } }

            /// <summary>Represents x:Key="VScrollbarBkgOverFill"/></summary>
            public static string VScrollbarBkgOverFillKey { get { return "VScrollbarBkgOverFill"; } }

            /// <summary>Represents x:Key="VScrollbarBkgPressFill"/></summary>
            public static string VScrollbarBkgPressFillKey { get { return "VScrollbarBkgPressFill"; } }

            /// <summary>Represents x:Key="HThumbDivetNormFill"/></summary>
            public static string HThumbDivetNormFillKey { get { return "HThumbDivetNormFill"; } }

            /// <summary>Represents x:Key="HThumbDivetNormStroke"/></summary>
            public static string HThumbDivetNormStrokeKey { get { return "HThumbDivetNormStroke"; } }

            /// <summary>Represents x:Key="HThumbDivetOverFill"/></summary>
            public static string HThumbDivetOverFillKey { get { return "HThumbDivetOverFill"; } }

            /// <summary>Represents x:Key="HThumbDivetOverStroke"/></summary>
            public static string HThumbDivetOverStrokeKey { get { return "HThumbDivetOverStroke"; } }

            /// <summary>Represents x:Key="HThumbDivetPressFill"/></summary>
            public static string HThumbDivetPressFillKey { get { return "HThumbDivetPressFill"; } }

            /// <summary>Represents x:Key="HThumbDivetPressStroke"/></summary>
            public static string HThumbDivetPressStrokeKey { get { return "HThumbDivetPressStroke"; } }

            /// <summary>Represents x:Key="VThumbDivetNormFill"/></summary>
            public static string VThumbDivetNormFillKey { get { return "VThumbDivetNormFill"; } }

            /// <summary>Represents x:Key="VThumbDivetNormStroke"/></summary>
            public static string VThumbDivetNormStrokeKey { get { return "VThumbDivetNormStroke"; } }

            /// <summary>Represents x:Key="VThumbDivetOverFill"/></summary>
            public static string VThumbDivetOverFillKey { get { return "VThumbDivetOverFill"; } }

            /// <summary>Represents x:Key="VThumbDivetOverStroke"/></summary>
            public static string VThumbDivetOverStrokeKey { get { return "VThumbDivetOverStroke"; } }

            /// <summary>Represents x:Key="VThumbDivetPressFill"/></summary>
            public static string VThumbDivetPressFillKey { get { return "VThumbDivetPressFill"; } }

            /// <summary>Represents x:Key="VThumbDivetPressStroke"/></summary>
            public static string VThumbDivetPressStrokeKey { get { return "VThumbDivetPressStroke"; } }

            /// <summary>Represents x:Key="BlackColor"/></summary>
            public static string BlackColorKey { get { return "BlackColor"; } }

            /// <summary>Represents x:Key="WhiteColor"/></summary>
            public static string WhiteColorKey { get { return "WhiteColor"; } }

            /// <summary>Represents x:Key="DisabledForegroundBrush"/></summary>
            public static string DisabledForegroundBrushKey { get { return "DisabledForegroundBrush"; } }

            /// <summary>Represents x:Key="WindowBackgroundBrush"/></summary>
            public static string WindowBackgroundBrushKey { get { return "WindowBackgroundBrush"; } }

            /// <summary>Represents x:Key="NuclearButtonFocusVisual"/></summary>
            public static string NuclearButtonFocusVisualKey { get { return "NuclearButtonFocusVisual"; } }

            /// <summary>Represents x:Key="ButtonTemplate"/></summary>
            public static string ButtonTemplateKey { get { return "ButtonTemplate"; } }

            /// <summary>Represents x:Key="HoverOn"/></summary>
            public static string HoverOnKey { get { return "HoverOn"; } }

            /// <summary>Represents x:Key="HoverOff"/></summary>
            public static string HoverOffKey { get { return "HoverOff"; } }

            /// <summary>Represents x:Key="PressedOn"/></summary>
            public static string PressedOnKey { get { return "PressedOn"; } }

            /// <summary>Represents x:Key="PressedOff"/></summary>
            public static string PressedOffKey { get { return "PressedOff"; } }

            /// <summary>Represents x:Key="FocusedOn"/></summary>
            public static string FocusedOnKey { get { return "FocusedOn"; } }

            /// <summary>Represents x:Key="FocusedOff"/></summary>
            public static string FocusedOffKey { get { return "FocusedOff"; } }

            /// <summary>Represents x:Key="RadioButtonFocusVisual"/></summary>
            public static string RadioButtonFocusVisualKey { get { return "RadioButtonFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxFocusVisual"/></summary>
            public static string CheckBoxFocusVisualKey { get { return "CheckBoxFocusVisual"; } }

            /// <summary>Represents x:Key="CheckBoxTemplate"/></summary>
            public static string CheckBoxTemplateKey { get { return "CheckBoxTemplate"; } }

            /// <summary>Represents x:Key="CheckedOn"/></summary>
            public static string CheckedOnKey { get { return "CheckedOn"; } }

            /// <summary>Represents x:Key="CheckedOff"/></summary>
            public static string CheckedOffKey { get { return "CheckedOff"; } }

            /// <summary>Represents x:Key="IndeterminateOn"/></summary>
            public static string IndeterminateOnKey { get { return "IndeterminateOn"; } }

            /// <summary>Represents x:Key="IndeterminateOff"/></summary>
            public static string IndeterminateOffKey { get { return "IndeterminateOff"; } }

            /// <summary>Represents x:Key="RadioButtonTemplate"/></summary>
            public static string RadioButtonTemplateKey { get { return "RadioButtonTemplate"; } }

            /// <summary>Represents x:Key="NuclearRepeatButton"/></summary>
            public static string NuclearRepeatButtonKey { get { return "NuclearRepeatButton"; } }

            /// <summary>Represents x:Key="NuclearThumbStyle"/></summary>
            public static string NuclearThumbStyleKey { get { return "NuclearThumbStyle"; } }

            /// <summary>Represents x:Key="NuclearScrollRepeatButtonStyle"/></summary>
            public static string NuclearScrollRepeatButtonStyleKey { get { return "NuclearScrollRepeatButtonStyle"; } }

            /// <summary>Represents x:Key="SelectedOn"/></summary>
            public static string SelectedOnKey { get { return "SelectedOn"; } }

            /// <summary>Represents x:Key="SelectedOff"/></summary>
            public static string SelectedOffKey { get { return "SelectedOff"; } }

            /// <summary>Represents x:Key="ExpanderHeaderFocusVisual"/></summary>
            public static string ExpanderHeaderFocusVisualKey { get { return "ExpanderHeaderFocusVisual"; } }

            /// <summary>Represents x:Key="ExpanderDownHeaderStyle"/></summary>
            public static string ExpanderDownHeaderStyleKey { get { return "ExpanderDownHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderRightHeaderStyle"/></summary>
            public static string ExpanderRightHeaderStyleKey { get { return "ExpanderRightHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderUpHeaderStyle"/></summary>
            public static string ExpanderUpHeaderStyleKey { get { return "ExpanderUpHeaderStyle"; } }

            /// <summary>Represents x:Key="ExpanderLeftHeaderStyle"/></summary>
            public static string ExpanderLeftHeaderStyleKey { get { return "ExpanderLeftHeaderStyle"; } }

            /// <summary>Represents x:Key="ComboBoxToggleButton"/></summary>
            public static string ComboBoxToggleButtonKey { get { return "ComboBoxToggleButton"; } }

            /// <summary>Represents x:Key="ComboBoxTextBox"/></summary>
            public static string ComboBoxTextBoxKey { get { return "ComboBoxTextBox"; } }

            /// <summary>Represents x:Key="ComboBoxTemplate"/></summary>
            public static string ComboBoxTemplateKey { get { return "ComboBoxTemplate"; } }

            /// <summary>Represents x:Key="TextBoxTemplate"/></summary>
            public static string TextBoxTemplateKey { get { return "TextBoxTemplate"; } }

            /// <summary>Represents x:Key="PopupDropShadow"/></summary>
            public static string PopupDropShadowKey { get { return "PopupDropShadow"; } }

            /// <summary>Represents x:Key="HighlightOn"/></summary>
            public static string HighlightOnKey { get { return "HighlightOn"; } }

            /// <summary>Represents x:Key="HighlightOff"/></summary>
            public static string HighlightOffKey { get { return "HighlightOff"; } }

            /// <summary>Represents x:Key="NuclearSliderThumb"/></summary>
            public static string NuclearSliderThumbKey { get { return "NuclearSliderThumb"; } }

            /// <summary>Represents x:Key="NuclearTreeViewItemToggleButton"/></summary>
            public static string NuclearTreeViewItemToggleButtonKey { get { return "NuclearTreeViewItemToggleButton"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalBackground"/></summary>
            public static string ToolBarHorizontalBackgroundKey { get { return "ToolBarHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonHorizontalBackground"/></summary>
            public static string ToolBarToggleButtonHorizontalBackgroundKey { get { return "ToolBarToggleButtonHorizontalBackground"; } }

            /// <summary>Represents x:Key="ToolBarButtonHover"/></summary>
            public static string ToolBarButtonHoverKey { get { return "ToolBarButtonHover"; } }

            /// <summary>Represents x:Key="ToolBarGripper"/></summary>
            public static string ToolBarGripperKey { get { return "ToolBarGripper"; } }

            /// <summary>Represents x:Key="ToolBarHorizontalOverflowButtonStyle"/></summary>
            public static string ToolBarHorizontalOverflowButtonStyleKey { get { return "ToolBarHorizontalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarSubMenuBackground"/></summary>
            public static string ToolBarSubMenuBackgroundKey { get { return "ToolBarSubMenuBackground"; } }

            /// <summary>Represents x:Key="ToolBarMenuBorder"/></summary>
            public static string ToolBarMenuBorderKey { get { return "ToolBarMenuBorder"; } }

            /// <summary>Represents x:Key="ToolBarThumbStyle"/></summary>
            public static string ToolBarThumbStyleKey { get { return "ToolBarThumbStyle"; } }

            /// <summary>Represents x:Key="ToolBarToggleButtonVerticalBackground"/></summary>
            public static string ToolBarToggleButtonVerticalBackgroundKey { get { return "ToolBarToggleButtonVerticalBackground"; } }

            /// <summary>Represents x:Key="ToolBarVerticalOverflowButtonStyle"/></summary>
            public static string ToolBarVerticalOverflowButtonStyleKey { get { return "ToolBarVerticalOverflowButtonStyle"; } }

            /// <summary>Represents x:Key="ToolBarVerticalBackground"/></summary>
            public static string ToolBarVerticalBackgroundKey { get { return "ToolBarVerticalBackground"; } }

            /// <summary>Represents x:Key="BorderGapMaskConverter"/></summary>
            public static string BorderGapMaskConverterKey { get { return "BorderGapMaskConverter"; } }

            /// <summary>Represents x:Key="ListViewItemFocusVisual"/></summary>
            public static string ListViewItemFocusVisualKey { get { return "ListViewItemFocusVisual"; } }

            /// <summary>Represents x:Key="GridViewColumnHeaderGripper"/></summary>
            public static string GridViewColumnHeaderGripperKey { get { return "GridViewColumnHeaderGripper"; } }


    }

}

#pragma warning enable
// ReSharper restore PossibleNullReferenceException

