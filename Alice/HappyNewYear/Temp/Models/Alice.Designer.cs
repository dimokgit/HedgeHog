//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Temp.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AliceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AliceEntities object using the connection string found in the 'AliceEntities' section of the application configuration file.
        /// </summary>
        public AliceEntities() : base("name=AliceEntities", "AliceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AliceEntities object.
        /// </summary>
        public AliceEntities(string connectionString) : base(connectionString, "AliceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AliceEntities object.
        /// </summary>
        public AliceEntities(EntityConnection connection) : base(connection, "AliceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClosedTrade> ClosedTrades
        {
            get
            {
                if ((_ClosedTrades == null))
                {
                    _ClosedTrades = base.CreateObjectSet<ClosedTrade>("ClosedTrades");
                }
                return _ClosedTrades;
            }
        }
        private ObjectSet<ClosedTrade> _ClosedTrades;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClosedTrades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClosedTrades(ClosedTrade closedTrade)
        {
            base.AddObject("ClosedTrades", closedTrade);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AliceModel", Name="ClosedTrade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClosedTrade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClosedTrade object.
        /// </summary>
        /// <param name="buy">Initial value of the Buy property.</param>
        /// <param name="close">Initial value of the Close property.</param>
        /// <param name="closeInPips">Initial value of the CloseInPips property.</param>
        /// <param name="grossPL">Initial value of the GrossPL property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isBuy">Initial value of the IsBuy property.</param>
        /// <param name="isParsed">Initial value of the IsParsed property.</param>
        /// <param name="limit">Initial value of the Limit property.</param>
        /// <param name="limitAmount">Initial value of the LimitAmount property.</param>
        /// <param name="limitInPips">Initial value of the LimitInPips property.</param>
        /// <param name="lots">Initial value of the Lots property.</param>
        /// <param name="open">Initial value of the Open property.</param>
        /// <param name="openInPips">Initial value of the OpenInPips property.</param>
        /// <param name="openOrderID">Initial value of the OpenOrderID property.</param>
        /// <param name="openOrderReqID">Initial value of the OpenOrderReqID property.</param>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="pipValue">Initial value of the PipValue property.</param>
        /// <param name="pL">Initial value of the PL property.</param>
        /// <param name="pointSize">Initial value of the PointSize property.</param>
        /// <param name="pointSizeFormat">Initial value of the PointSizeFormat property.</param>
        /// <param name="remark">Initial value of the Remark property.</param>
        /// <param name="stop">Initial value of the Stop property.</param>
        /// <param name="stopAmount">Initial value of the StopAmount property.</param>
        /// <param name="stopInPips">Initial value of the StopInPips property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="timeClose">Initial value of the TimeClose property.</param>
        /// <param name="unKnown">Initial value of the UnKnown property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="commission">Initial value of the Commission property.</param>
        public static ClosedTrade CreateClosedTrade(global::System.Boolean buy, global::System.Double close, global::System.Double closeInPips, global::System.Double grossPL, global::System.String id, global::System.Boolean isBuy, global::System.Boolean isParsed, global::System.Double limit, global::System.Double limitAmount, global::System.Double limitInPips, global::System.Int32 lots, global::System.Double open, global::System.Double openInPips, global::System.String openOrderID, global::System.String openOrderReqID, global::System.String pair, global::System.Int32 pipValue, global::System.Double pL, global::System.Int32 pointSize, global::System.String pointSizeFormat, global::System.String remark, global::System.Double stop, global::System.Double stopAmount, global::System.Double stopInPips, global::System.DateTime time, global::System.DateTime timeClose, global::System.String unKnown, global::System.String accountId, global::System.Double commission)
        {
            ClosedTrade closedTrade = new ClosedTrade();
            closedTrade.Buy = buy;
            closedTrade.Close = close;
            closedTrade.CloseInPips = closeInPips;
            closedTrade.GrossPL = grossPL;
            closedTrade.Id = id;
            closedTrade.IsBuy = isBuy;
            closedTrade.IsParsed = isParsed;
            closedTrade.Limit = limit;
            closedTrade.LimitAmount = limitAmount;
            closedTrade.LimitInPips = limitInPips;
            closedTrade.Lots = lots;
            closedTrade.Open = open;
            closedTrade.OpenInPips = openInPips;
            closedTrade.OpenOrderID = openOrderID;
            closedTrade.OpenOrderReqID = openOrderReqID;
            closedTrade.Pair = pair;
            closedTrade.PipValue = pipValue;
            closedTrade.PL = pL;
            closedTrade.PointSize = pointSize;
            closedTrade.PointSizeFormat = pointSizeFormat;
            closedTrade.Remark = remark;
            closedTrade.Stop = stop;
            closedTrade.StopAmount = stopAmount;
            closedTrade.StopInPips = stopInPips;
            closedTrade.Time = time;
            closedTrade.TimeClose = timeClose;
            closedTrade.UnKnown = unKnown;
            closedTrade.AccountId = accountId;
            closedTrade.Commission = commission;
            return closedTrade;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Buy
        {
            get
            {
                return _Buy;
            }
            set
            {
                OnBuyChanging(value);
                ReportPropertyChanging("Buy");
                _Buy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Buy");
                OnBuyChanged();
            }
        }
        private global::System.Boolean _Buy;
        partial void OnBuyChanging(global::System.Boolean value);
        partial void OnBuyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Close
        {
            get
            {
                return _Close;
            }
            set
            {
                OnCloseChanging(value);
                ReportPropertyChanging("Close");
                _Close = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Close");
                OnCloseChanged();
            }
        }
        private global::System.Double _Close;
        partial void OnCloseChanging(global::System.Double value);
        partial void OnCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CloseInPips
        {
            get
            {
                return _CloseInPips;
            }
            set
            {
                OnCloseInPipsChanging(value);
                ReportPropertyChanging("CloseInPips");
                _CloseInPips = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseInPips");
                OnCloseInPipsChanged();
            }
        }
        private global::System.Double _CloseInPips;
        partial void OnCloseInPipsChanging(global::System.Double value);
        partial void OnCloseInPipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GrossPL
        {
            get
            {
                return _GrossPL;
            }
            set
            {
                OnGrossPLChanging(value);
                ReportPropertyChanging("GrossPL");
                _GrossPL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossPL");
                OnGrossPLChanged();
            }
        }
        private global::System.Double _GrossPL;
        partial void OnGrossPLChanging(global::System.Double value);
        partial void OnGrossPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBuy
        {
            get
            {
                return _IsBuy;
            }
            set
            {
                OnIsBuyChanging(value);
                ReportPropertyChanging("IsBuy");
                _IsBuy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBuy");
                OnIsBuyChanged();
            }
        }
        private global::System.Boolean _IsBuy;
        partial void OnIsBuyChanging(global::System.Boolean value);
        partial void OnIsBuyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsParsed
        {
            get
            {
                return _IsParsed;
            }
            set
            {
                OnIsParsedChanging(value);
                ReportPropertyChanging("IsParsed");
                _IsParsed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsParsed");
                OnIsParsedChanged();
            }
        }
        private global::System.Boolean _IsParsed;
        partial void OnIsParsedChanging(global::System.Boolean value);
        partial void OnIsParsedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Limit
        {
            get
            {
                return _Limit;
            }
            set
            {
                OnLimitChanging(value);
                ReportPropertyChanging("Limit");
                _Limit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Limit");
                OnLimitChanged();
            }
        }
        private global::System.Double _Limit;
        partial void OnLimitChanging(global::System.Double value);
        partial void OnLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LimitAmount
        {
            get
            {
                return _LimitAmount;
            }
            set
            {
                OnLimitAmountChanging(value);
                ReportPropertyChanging("LimitAmount");
                _LimitAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitAmount");
                OnLimitAmountChanged();
            }
        }
        private global::System.Double _LimitAmount;
        partial void OnLimitAmountChanging(global::System.Double value);
        partial void OnLimitAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LimitInPips
        {
            get
            {
                return _LimitInPips;
            }
            set
            {
                OnLimitInPipsChanging(value);
                ReportPropertyChanging("LimitInPips");
                _LimitInPips = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitInPips");
                OnLimitInPipsChanged();
            }
        }
        private global::System.Double _LimitInPips;
        partial void OnLimitInPipsChanging(global::System.Double value);
        partial void OnLimitInPipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Lots
        {
            get
            {
                return _Lots;
            }
            set
            {
                OnLotsChanging(value);
                ReportPropertyChanging("Lots");
                _Lots = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lots");
                OnLotsChanged();
            }
        }
        private global::System.Int32 _Lots;
        partial void OnLotsChanging(global::System.Int32 value);
        partial void OnLotsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Open
        {
            get
            {
                return _Open;
            }
            set
            {
                OnOpenChanging(value);
                ReportPropertyChanging("Open");
                _Open = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Open");
                OnOpenChanged();
            }
        }
        private global::System.Double _Open;
        partial void OnOpenChanging(global::System.Double value);
        partial void OnOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OpenInPips
        {
            get
            {
                return _OpenInPips;
            }
            set
            {
                OnOpenInPipsChanging(value);
                ReportPropertyChanging("OpenInPips");
                _OpenInPips = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenInPips");
                OnOpenInPipsChanged();
            }
        }
        private global::System.Double _OpenInPips;
        partial void OnOpenInPipsChanging(global::System.Double value);
        partial void OnOpenInPipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OpenOrderID
        {
            get
            {
                return _OpenOrderID;
            }
            set
            {
                OnOpenOrderIDChanging(value);
                ReportPropertyChanging("OpenOrderID");
                _OpenOrderID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OpenOrderID");
                OnOpenOrderIDChanged();
            }
        }
        private global::System.String _OpenOrderID;
        partial void OnOpenOrderIDChanging(global::System.String value);
        partial void OnOpenOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OpenOrderReqID
        {
            get
            {
                return _OpenOrderReqID;
            }
            set
            {
                OnOpenOrderReqIDChanging(value);
                ReportPropertyChanging("OpenOrderReqID");
                _OpenOrderReqID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OpenOrderReqID");
                OnOpenOrderReqIDChanged();
            }
        }
        private global::System.String _OpenOrderReqID;
        partial void OnOpenOrderReqIDChanging(global::System.String value);
        partial void OnOpenOrderReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PipValue
        {
            get
            {
                return _PipValue;
            }
            set
            {
                OnPipValueChanging(value);
                ReportPropertyChanging("PipValue");
                _PipValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PipValue");
                OnPipValueChanged();
            }
        }
        private global::System.Int32 _PipValue;
        partial void OnPipValueChanging(global::System.Int32 value);
        partial void OnPipValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PL
        {
            get
            {
                return _PL;
            }
            set
            {
                OnPLChanging(value);
                ReportPropertyChanging("PL");
                _PL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PL");
                OnPLChanged();
            }
        }
        private global::System.Double _PL;
        partial void OnPLChanging(global::System.Double value);
        partial void OnPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointSize
        {
            get
            {
                return _PointSize;
            }
            set
            {
                OnPointSizeChanging(value);
                ReportPropertyChanging("PointSize");
                _PointSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PointSize");
                OnPointSizeChanged();
            }
        }
        private global::System.Int32 _PointSize;
        partial void OnPointSizeChanging(global::System.Int32 value);
        partial void OnPointSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PointSizeFormat
        {
            get
            {
                return _PointSizeFormat;
            }
            set
            {
                OnPointSizeFormatChanging(value);
                ReportPropertyChanging("PointSizeFormat");
                _PointSizeFormat = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PointSizeFormat");
                OnPointSizeFormatChanged();
            }
        }
        private global::System.String _PointSizeFormat;
        partial void OnPointSizeFormatChanging(global::System.String value);
        partial void OnPointSizeFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Stop
        {
            get
            {
                return _Stop;
            }
            set
            {
                OnStopChanging(value);
                ReportPropertyChanging("Stop");
                _Stop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop");
                OnStopChanged();
            }
        }
        private global::System.Double _Stop;
        partial void OnStopChanging(global::System.Double value);
        partial void OnStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StopAmount
        {
            get
            {
                return _StopAmount;
            }
            set
            {
                OnStopAmountChanging(value);
                ReportPropertyChanging("StopAmount");
                _StopAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StopAmount");
                OnStopAmountChanged();
            }
        }
        private global::System.Double _StopAmount;
        partial void OnStopAmountChanging(global::System.Double value);
        partial void OnStopAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StopInPips
        {
            get
            {
                return _StopInPips;
            }
            set
            {
                OnStopInPipsChanging(value);
                ReportPropertyChanging("StopInPips");
                _StopInPips = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StopInPips");
                OnStopInPipsChanged();
            }
        }
        private global::System.Double _StopInPips;
        partial void OnStopInPipsChanging(global::System.Double value);
        partial void OnStopInPipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeClose
        {
            get
            {
                return _TimeClose;
            }
            set
            {
                OnTimeCloseChanging(value);
                ReportPropertyChanging("TimeClose");
                _TimeClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeClose");
                OnTimeCloseChanged();
            }
        }
        private global::System.DateTime _TimeClose;
        partial void OnTimeCloseChanging(global::System.DateTime value);
        partial void OnTimeCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnKnown
        {
            get
            {
                return _UnKnown;
            }
            set
            {
                OnUnKnownChanging(value);
                ReportPropertyChanging("UnKnown");
                _UnKnown = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UnKnown");
                OnUnKnownChanged();
            }
        }
        private global::System.String _UnKnown;
        partial void OnUnKnownChanging(global::System.String value);
        partial void OnUnKnownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.String _AccountId;
        partial void OnAccountIdChanging(global::System.String value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private global::System.Double _Commission;
        partial void OnCommissionChanging(global::System.Double value);
        partial void OnCommissionChanged();

        #endregion
    
    }

    #endregion
    
}
