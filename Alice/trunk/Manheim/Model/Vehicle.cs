//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Manheim.Model
{
    public partial class Vehicle
    {
        #region Primitive Properties
    
        public virtual string VIN
        {
            get;
            set;
        }
    
        public virtual int Year
        {
            get;
            set;
        }
    
        public virtual string Make
        {
            get;
            set;
        }
    
        public virtual string Model
        {
            get;
            set;
        }
    
        public virtual string BodyStyle
        {
            get;
            set;
        }
    
        public virtual string TrimLevel
        {
            get;
            set;
        }
    
        public virtual string VehicleType
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Doors
        {
            get;
            set;
        }
    
        public virtual string Color
        {
            get;
            set;
        }
    
        public virtual bool Salvage
        {
            get;
            set;
        }
    
        public virtual string TitleStatus
        {
            get;
            set;
        }
    
        public virtual string DriveTrain
        {
            get;
            set;
        }
    
        public virtual string InteriorType
        {
            get;
            set;
        }
    
        public virtual string TopType
        {
            get;
            set;
        }
    
        public virtual string Stereo
        {
            get;
            set;
        }
    
        public virtual string Airbags
        {
            get;
            set;
        }
    
        public virtual string Options
        {
            get;
            set;
        }
    
        public virtual int StatusId
        {
            get { return _statusId; }
            set
            {
                if (_statusId != value)
                {
                    if (VehicleStatus != null && VehicleStatus.Id != value)
                    {
                        VehicleStatus = null;
                    }
                    _statusId = value;
                }
            }
        }
        private int _statusId;
    
        public virtual Nullable<int> Odometer
        {
            get;
            set;
        }
    
        public virtual string InServiceDate
        {
            get;
            set;
        }
    
        public virtual string TitleState
        {
            get;
            set;
        }
    
        public virtual string FuelType
        {
            get;
            set;
        }
    
        public virtual string Engine
        {
            get;
            set;
        }
    
        public virtual string Displacement
        {
            get;
            set;
        }
    
        public virtual string Transmission
        {
            get;
            set;
        }
    
        public virtual string ExteriorColor
        {
            get;
            set;
        }
    
        public virtual string InteriorColor
        {
            get;
            set;
        }
    
        public virtual string WindowSticker
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Cylinders
        {
            get;
            set;
        }
    
        public virtual Nullable<int> MMR
        {
            get;
            set;
        }
    
        public virtual Nullable<double> Grade
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<PreSale> PreSales
        {
            get
            {
                if (_preSales == null)
                {
                    var newCollection = new FixupCollection<PreSale>();
                    newCollection.CollectionChanged += FixupPreSales;
                    _preSales = newCollection;
                }
                return _preSales;
            }
            set
            {
                if (!ReferenceEquals(_preSales, value))
                {
                    var previousValue = _preSales as FixupCollection<PreSale>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPreSales;
                    }
                    _preSales = value;
                    var newValue = value as FixupCollection<PreSale>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPreSales;
                    }
                }
            }
        }
        private ICollection<PreSale> _preSales;
    
        public virtual VehicleStatus VehicleStatus
        {
            get { return _vehicleStatus; }
            set
            {
                if (!ReferenceEquals(_vehicleStatus, value))
                {
                    var previousValue = _vehicleStatus;
                    _vehicleStatus = value;
                    FixupVehicleStatus(previousValue);
                }
            }
        }
        private VehicleStatus _vehicleStatus;

        #endregion
        #region Association Fixup
    
        private void FixupVehicleStatus(VehicleStatus previousValue)
        {
            if (VehicleStatus != null)
            {
                if (StatusId != VehicleStatus.Id)
                {
                    StatusId = VehicleStatus.Id;
                }
            }
        }
    
        private void FixupPreSales(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PreSale item in e.NewItems)
                {
                    item.Vehicle = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PreSale item in e.OldItems)
                {
                    if (ReferenceEquals(item.Vehicle, this))
                    {
                        item.Vehicle = null;
                    }
                }
            }
        }

        #endregion
    }
}
