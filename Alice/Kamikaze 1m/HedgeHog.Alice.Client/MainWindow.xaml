<Window x:Class="HedgeHog.Alice.Client.MainWindow"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:tlrkInput="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:hh="clr-namespace:HedgeHog;assembly=HedgeHog.Lib"
      xmlns:hhmu="clr-namespace:HedgeHog.Markup;assembly=HedgeHog.Lib"
      mc:Ignorable="d"

        xmlns:l="clr-namespace:HedgeHog.Alice.Client"
        xmlns:ui="clr-namespace:HedgeHog.Alice.Client.UI.Controls"
        xmlns:uic="clr-namespace:HedgeHog.UI;assembly=HedgeHog.UI"
        xmlns:uiAccounts="clr-namespace:HedgeHog.Alice.Client.UI.Controls"
        xmlns:u="clr-namespace:HedgeHog.UI;assembly=HedgeHog.UI"
        xmlns:state="clr-namespace:WpfPersist;assembly=Persistance"
        xmlns:gala="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight"
        xmlns:galaCmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras"
        Left="{state:UserSettings Default=100}"
    Top="{state:UserSettings Default=100}"
  Height="{state:UserSettings Default=200}" Width="{state:UserSettings Default=500}"
        Closed="Window_Closed"
        Loaded="Window_Loaded"
        Title="{Binding Title,StringFormat=Alice In: {0}}" xmlns:my="clr-namespace:HedgeHog.Alice.Client.Models">
  <!--<i:Interaction.Triggers>
    <i:EventTrigger EventName="Loaded">
      <galaCmd:EventToCommand Command="{Binding OpenDatabaseCommand}"></galaCmd:EventToCommand>
    </i:EventTrigger>
  </i:Interaction.Triggers>-->
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="UI/TradesOnServer.xaml"/>
      </ResourceDictionary.MergedDictionaries>
      <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
        <Setter Property="Padding" Value="0" />
      </Style>
      <DataTemplate x:Key="StopCellEditTemplate">
        <tlrkInput:RadNumericUpDown Value="{Binding Stop,Mode=TwoWay}" />
      </DataTemplate>
      <DataTemplate x:Key="GrossCellTemplate">
        <!--<Label Content="{Binding GrossPL,StringFormat=c0}" ContentStringFormat="c0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Background="{Binding GrossPL,Converter={StaticResource DoubleToColorConverter},ConverterParameter=Transparent|LightSalmon|LightGreen}" />-->
        <Label Content="{Binding GrossPL,StringFormat=c0}" ContentStringFormat="c0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
      </DataTemplate>

      <!--TradesOnServer-->
      <DataTemplate x:Key="TradesOnServer">
        <StackPanel>
          <StackPanel.Resources>
            <!--<Style TargetType="DataGrid" BasedOn="{StaticResource ReadOnlyDataGridStyle}"/>-->
          </StackPanel.Resources>
          <WrapPanel>
            <Button Command="{Binding CloseAllServerTradesCommand}" HorizontalAlignment="Left">Close All</Button>
          </WrapPanel>
          <!--Server Trades-->
          <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding ServerTradesList}" Style="{StaticResource ReadOnlyDataGridStyle}">
            <DataGrid.Columns>
              <DataGridTemplateColumn CellTemplate="{StaticResource CloseServerTradeTemplate}" Header="Id"/>
              <DataGridTextColumn Header="Pair" Binding="{Binding Pair}"/>
              <DataGridTextColumn Header="Time" Binding="{Binding Time,StringFormat='dd HH:mm:ss'}"/>
              <DataGridTextColumn Header="Lots" Binding="{Binding Lots}"/>
              <DataGridTextColumn Header="B/S"  Binding="{Binding Buy,Converter={StaticResource BoolToSrtingConverter},ConverterParameter=|S|B}">
                <DataGridTextColumn.ElementStyle>
                  <Style TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                  </Style>
                </DataGridTextColumn.ElementStyle>
              </DataGridTextColumn>
              <DataGridTemplateColumn Header="Stop" >
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
                        Command="{Binding DataContext.DecreaseStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                      <TextBlock Text="{Binding StopInPips,StringFormat=n1}" HorizontalAlignment="Stretch"/>
                      <TextBlock Text="{Binding StopToCloseInPips,StringFormat=/{0:n1}}" HorizontalAlignment="Stretch"/>
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
                        Command="{Binding DataContext.EncreaseStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                    </StackPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="S ∑" Binding="{Binding StopAmount,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="S ∑∑" Binding="{Binding UnKnown.BalanceOnStop,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTemplateColumn Header="Limit" >
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" 
                        Command="{Binding DataContext.DecreaseLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                      <TextBlock Text="{Binding LimitInPips,StringFormat=n1}" HorizontalAlignment="Stretch" />
                      <TextBlock Text="{Binding LimitToCloseInPips,StringFormat=/{0:n1}}" HorizontalAlignment="Stretch" />
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" 
                        Command="{Binding DataContext.IncreaseLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                    </StackPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="L ∑" Binding="{Binding LimitAmount,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="L ∑∑" Binding="{Binding UnKnown.BalanceOnLimit,StringFormat=c0}" IsReadOnly="True"/>
              <DataGridTextColumn Header="Pips" Binding="{Binding PL,StringFormat=n1}">
                <DataGridTextColumn.CellStyle>
                  <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background" Value="{Binding PL,Converter={StaticResource ProfitToColorConverter}}"/>
                  </Style>
                </DataGridTextColumn.CellStyle>
              </DataGridTextColumn>
              <DataGridTemplateColumn Header="$$$" CellTemplate="{StaticResource GrossCellTemplate}"/>
            </DataGrid.Columns>
          </DataGrid>
          <!--Server Orders-->
          <Label Content="Orders"/>
          <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding OrdersList}" Style="{StaticResource ReadOnlyDataGridStyle}" >
            <DataGrid.Columns>
              <DataGridTemplateColumn>
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Cancel Order" Content="X"
                        Command="{Binding DataContext.CancelEntryOrderCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="Pair" Binding="{Binding Pair}"/>
              <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
              <DataGridTextColumn Header="BS" Binding="{Binding BS}"/>
              <DataGridTemplateColumn Header="Rate">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <WrapPanel>
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
                        Command="{Binding DataContext.DecreaseEntryRateCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                      <ContentControl Content="{Binding PipsTillRate}" ContentStringFormat="n1"/>
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
                        Command="{Binding DataContext.IncreaseEntryRateCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                    </WrapPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTextColumn Header="Lot" Binding="{Binding Lot}"/>
              <DataGridTemplateColumn Header="Stop">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <WrapPanel Background="LightSalmon">
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
                        Command="{Binding DataContext.DecreaseEntryStopCommandCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>

                      <TextBlock Text="{Binding StopInPips,StringFormat=n1}"/>
                      <TextBlock Text="{Binding StopAmount,StringFormat=[{0:c1}}"/>
                      <!--<TextBlock Text="{Binding UnKnown.PercentOnStop,StringFormat=/{0:p1}}"/>
                      <TextBlock Text="{Binding UnKnown.BalanceOnStop,StringFormat=/{0:c0}]}"/>-->
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
                        Command="{Binding DataContext.IncreaseEntryStopCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                    </WrapPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn Header="L->$0">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <Button Content="{Binding UnKnown.NoLossLimit}" ContentStringFormat="n1"
                            CommandParameter="{Binding BindsDirectlyToSource=True}" 
                            Command="{Binding DataContext.SetOrderToNoLossCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridTemplateColumn Header="Limit">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <WrapPanel Background="LightGreen">
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Down"
                        Command="{Binding DataContext.DecreaseEntryLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="0.5" ScaleX="0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                      <TextBlock Text="{Binding LimitInPips,StringFormat=n1}"/>
                      <TextBlock Text="{Binding LimitAmount,StringFormat=[{0:c1}}"/>
                      <!--<TextBlock Text="{Binding UnKnown.PercentOnLimit,StringFormat=/{0:p1}}"/>
                      <TextBlock Text="{Binding UnKnown.BalanceOnLimit,StringFormat=/{0:c0}]}"/>-->
                      <Button CommandParameter="{Binding BindsDirectlyToSource=True}" ToolTip="Up"
                        Command="{Binding DataContext.IncreaseEntryLimitCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}">
                        <Image Source="/HedgeHog.Alice.Client;component/Images/DownArrow-32.png">
                          <Image.LayoutTransform>
                            <ScaleTransform ScaleY="-0.5" ScaleX="-0.5"/>
                          </Image.LayoutTransform>
                        </Image>
                      </Button>
                    </WrapPanel>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>

              <DataGridTextColumn Header="FixStatus" Binding="{Binding Status}" Visibility="Collapsed"/>
              <DataGridTextColumn Header="Type" Binding="{Binding Type}" Visibility="Collapsed"/>
              <DataGridTextColumn Header="Time" Binding="{Binding Time,StringFormat='dd HH:mm:ss'}"/>
              <DataGridTextColumn Header="OrderId" Binding="{Binding OrderID}"/>
              <DataGridTextColumn Header="QTXT" Binding="{Binding QTXT}" Visibility="Collapsed"/>
            </DataGrid.Columns>
          </DataGrid>
        </StackPanel>
      </DataTemplate>
      <DataTemplate x:Key="DeleteAccountCellTemplate">
        <Button Content="X" CommandParameter="{Binding BindsDirectlyToSource=True}" 
            Command="{Binding DataContext.DeleteTradingAccountCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
      </DataTemplate>

      <DataTemplate x:Key="CloseServerTradeTemplate">
        <Button Content="{Binding Id}" CommandParameter="{Binding Id}"
            Command="{Binding DataContext.CloseServerTradeCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
      </DataTemplate>

    </ResourceDictionary>
  </Window.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <StackPanel Background="{Binding IsLoggedIn,Converter={StaticResource ProfitToColorConverter}}">
      <WrapPanel>
        <!---->
        <u:TextBox2 Text2="{Binding DatabasePath,Mode=TwoWay}" Text="{state:UserSettings}" Name="DatabasePath" MinWidth="30" MaxWidth="100" />
        <Button Command="{Binding OpenDataBaseCommand}" Content="Database">
          <Button.ToolTip>
            <ToolTip>
              <TextBlock Text="{Binding DatabasePath}"/>
            </ToolTip>
          </Button.ToolTip>
        </Button>
        <ComboBox SelectedValue="{Binding TradingAccount}" SelectedIndex="{state:UserSettings}" Name="TradingAccount" ItemsSource="{Binding TradingAccounts}" />
        <Label ToolTip="Virtual Trading">VT:</Label>
        <u:CheckBox2 IsChecked2="{Binding IsInVirtualTrading,Mode=TwoWay}" IsChecked="{state:UserSettings}" Name="chkVT"/>
        <u:TextBox2 Text2="{Binding VirtualDateStart,Mode=TwoWay,FallbackValue='1/1/2000'}" Text="{state:UserSettings Default='1/1/2000'}" Name="VitrualDateStart" MinWidth="30" />
        <u:TextBox2 Text2="{Binding VirtualMonthsToTest,Mode=TwoWay,FallbackValue=0}" Text="{state:UserSettings Default=0}" Name="VitrualMonthsToTest" MinWidth="20" />
        <u:TextBox2 Text2="{Binding VirtualDelay,Mode=TwoWay,FallbackValue=0}" Text="{state:UserSettings Default=0}" Name="VitrualDekay" MinWidth="20" />
        <Button Command="{Binding StepBackCommand}" Content="_&lt;&lt;"></Button>
        <u:CheckBox2 IsChecked2="{Binding VirtualPause,Mode=TwoWay}" IsChecked="{state:UserSettings Default=true}" Name="chkVP" Content="_Pause"/>
        <Button Command="{Binding StepForwardCommand}" Content=">_>"></Button>
        <CheckBox IsChecked="{Binding VirtualClearTest,Mode=TwoWay}" Name="chkClearTest" ToolTip="Clear Previouse Test Results"/>
        <Button Command="{Binding BackTestCommand}">Test</Button>
        <Button Command="{Binding ReportCommand}">Report</Button>
        <Button Command="{Binding LoadHistoryCommand}">History</Button>
        <TextBlock>Status:</TextBlock>
        <TextBlock Text="{Binding SessionStatus}"/>
        
        <TextBlock Visibility="Collapsed">
        <TextBlock>Server:</TextBlock>
        <u:TextBox2 MinWidth="50" Text2="{Binding ServerAddress,Mode=TwoWay}" Text="{state:UserSettings Default=localhost:9200/}" x:Name="ServerAddress"/>
        <Label Content="{Binding ServerTime}" ContentStringFormat="HH:mm:ss" ToolTip="Server Time" VerticalContentAlignment="Center" VerticalAlignment="Center" BorderBrush="Gray" BorderThickness="1"/>
        <ComboBox SelectedValue="{Binding AliceMode,Mode=TwoWay}" SelectedIndex="{state:UserSettings Default=0}" ItemsSource="{hhmu:EnumValues l:AliceModes}" Name="AliceMode"/>
        <Button Command="{Binding OpenNewServerAccountCommand}">New Rabbit</Button>
        <Button Command="{Binding AddNewSlaveAccountCommand}">Add Alice</Button>
        </TextBlock>
        
      </WrapPanel>
      <ui:AccountLoginView AccountLoginCommand="{Binding AccountLoginCommand}" OpenNewAccountCommand="{Binding OpenNewLocalAccountCommand}"
                           IsEnabled="{Binding IsNotInLogin}"
        TradingAccount="{Binding TradingMaster.AccountId,Mode=TwoWay}" TradingPassword="{Binding TradingMaster.Password,Mode=TwoWay}" TradingDemo="{Binding TradingMaster.IsDemo,Mode=TwoWay}"/>
      <!--Account Manager-->
        <Expander Header="Accounts Manager" IsExpanded="{Binding IsAccountManagerExpanded}">
          <StackPanel>
            <!--Slave Account Infos-->
            <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding TradingAccountsList}">
              <DataGrid.Columns>
                <DataGridTemplateColumn CellTemplate="{StaticResource DeleteAccountCellTemplate}"></DataGridTemplateColumn>
                <DataGridTemplateColumn>
                  <DataGridTemplateColumn.Header>
                    <WrapPanel>
                      <TextBlock>Account</TextBlock>
                      <Button Content="{Binding DataContext.ShowAllAccountsFilter,RelativeSource={RelativeSource AncestorType=DataGrid},Converter={StaticResource BoolToSrtingConverter},ConverterParameter=x|x|-}" 
                              Command="{Binding DataContext.ToggleShowAllAccountsCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"
                              />
                    </WrapPanel>
                  </DataGridTemplateColumn.Header>
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <Button Content="{Binding AccountId}"
                              Command="{Binding DataContext.LoginCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}"
                              CommandParameter="{Binding BindsDirectlyToSource=True}"
                              />
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                  <DataGridTemplateColumn.CellEditingTemplate>
                    <DataTemplate>
                      <TextBox Text="{Binding AccountId}"/>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Path=Password}" Header="Password" Foreground="Transparent" />
                <DataGridCheckBoxColumn Binding="{Binding Path=IsDemo}" Header="Demo" Width="SizeToHeader" />
                <DataGridTextColumn Binding="{Binding Path=Commission}" Header="C$" />
                <DataGridTextColumn Binding="{Binding Path=TradeRatio}" Header="M:S" ToolTipService.ToolTip="Trade Ratio" />
                <DataGridCheckBoxColumn Binding="{Binding Path=IsMaster}" Header="Master" Width="SizeToHeader" />
                <DataGridCheckBoxColumn Binding="{Binding Path=IsActive}" Header="Active" Width="SizeToHeader" />
                <DataGridTemplateColumn Header="Case">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <ContentControl Content="{Binding TradingMacroName}"/>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                  <DataGridTemplateColumn.CellEditingTemplate>
                    <DataTemplate>
                      <ComboBox SelectedItem="{Binding Path=TradingMacroName}" ItemsSource="{Binding DataContext.TradingMacrosCases,RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Path=EntityState}" Header="State" />
                <DataGridTextColumn Binding="{Binding Path=Id}" Header="Id" />
              </DataGrid.Columns>
            </DataGrid>
            <Button Command="{Binding SaveTradingSlavesCommand}">Save</Button>
          </StackPanel>
        </Expander>
        <!--<DataGrid AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource tradingAccountsViewSource}}" Name="tradingAccountsDataGrid" RowDetailsVisibilityMode="VisibleWhenSelected"><DataGrid.Columns><DataGridTextColumn x:Name="idColumn" Binding="{Binding Path=Id}" Header="Id" /><DataGridTextColumn x:Name="passwordColumn" Binding="{Binding Path=Password}" Header="Password" /><DataGridTextColumn x:Name="masterIdColumn" Binding="{Binding Path=MasterId}" Header="Master Id" /><DataGridCheckBoxColumn x:Name="isDemoColumn" Binding="{Binding Path=IsDemo}" Header="Is Demo" Width="SizeToHeader" /></DataGrid.Columns></DataGrid></Expander>-->
        <l:RemoteControlView />
        <Expander Header="Order Templates" IsExpanded="False">
          <l:OrderTemplatesView />
        </Expander>
    </StackPanel>

    <!--Master Account-->
    <Expander Grid.Row="1" ContentTemplate="{StaticResource TradesOnServer}" IsExpanded="True" Content="{Binding}">
      <Expander.Header>
        <StackPanel>
          <TextBlock>Master Account</TextBlock>
          <ui:AccountInfo DataContext="{Binding ServerAccountRow}"/>
        </StackPanel>
      </Expander.Header>
    </Expander>

    <!--Slave Accounts-->
    <DataGrid Grid.Row="2" ItemsSource="{Binding SlaveModels}" AutoGenerateColumns="False" EnableRowVirtualization="False" HorizontalAlignment="Left" RowDetailsVisibilityMode="VisibleWhenSelected" VerticalAlignment="Top" CanUserAddRows="False" CanUserDeleteRows="False" KeyDown="SlaveModelGrid_KeyDown" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" FontWeight="Bold" Style="{StaticResource ReadOnlyDataGridStyle}" Visibility="Collapsed">
      <DataGrid.Columns>
        <DataGridTextColumn Header="Account" Binding="{Binding AccountModel.ID,Mode=OneWay}" IsReadOnly="True"/>
        <DataGridTemplateColumn Header="Balance" IsReadOnly="True" SortMemberPath="AccountModel.Equity">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <WrapPanel>
                <TextBlock Text="{Binding AccountModel.Equity,StringFormat=c0}"/>
                <TextBlock Text="{Binding AccountModel.Balance,StringFormat=/{0:c0}}"/>
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Profit" IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <WrapPanel Background="{Binding AccountModel.Gross,Converter={StaticResource ProfitToColorConverter}}">
                <TextBlock Text="{Binding AccountModel.Gross,StringFormat=c0}"/>
                <TextBlock Text="{Binding AccountModel.ProfitPercent,StringFormat=/{0:p1}}"/>
              </WrapPanel>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTextColumn Header="Pos" Binding="{Binding AccountModel.Trades.Length,Mode=OneWay}" IsReadOnly="True" ToolTipService.ToolTip="Total Positions"/>
        <DataGridTextColumn Binding="{Binding AccountModel.PipsToMC}" IsReadOnly="True">
          <DataGridTextColumn.HeaderTemplate>
            <DataTemplate>
              <TextBlock Text="PMC" ToolTip="Pips to Margin Call"/>
            </DataTemplate>
          </DataGridTextColumn.HeaderTemplate>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Pips" Binding="{Binding AccountModel.PL,StringFormat=n1}" IsReadOnly="True"/>
        <DataGridTextColumn Header="Ratio" Binding="{Binding AccountModel.TradingRatio,StringFormat=p0}"/>
        <DataGridTextColumn Header="Margin" Binding="{Binding AccountModel.UsableMargin,StringFormat=c0}" IsReadOnly="True"/>
      </DataGrid.Columns>
      <DataGrid.RowDetailsTemplate>
        <DataTemplate>
          <uiAccounts:SlaveAccount
                  SlaveModel="{Binding BindsDirectlyToSource=True}"
                  MasterModel="{Binding DataContext,RelativeSource={RelativeSource AncestorType=Grid}}"
                               TradingAccount="{Binding TradingAccount,Mode=TwoWay}"
                               TradingPassword="{Binding TradingPassword,Mode=TwoWay}"
                               TradingDemo="{Binding TradingDemo,Mode=TwoWay}" 
                               TradeRatio="{Binding ServerToLocalRatioValue,Mode=TwoWay}"
                               Background="BlanchedAlmond"/>
        </DataTemplate>
      </DataGrid.RowDetailsTemplate>
    </DataGrid>
    <Expander Header="Log" Grid.Row="10" IsExpanded="{Binding IsLogExpanded,Mode=OneWay}" Padding="0" Grid.RowSpan="2">
      <Label Content="{Binding LogText}" BorderBrush="Gray" BorderThickness="1"></Label>
    </Expander>
  </Grid>
</Window>
