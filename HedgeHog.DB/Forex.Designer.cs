//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ForexModel", "FK_Event_EventLevel", "EventLevel", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(HedgeHog.DB.EventLevel__News), "Event", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HedgeHog.DB.Event__News), true)]

#endregion

namespace HedgeHog.DB
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ForexEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ForexEntities object using the connection string found in the 'ForexEntities' section of the application configuration file.
        /// </summary>
        public ForexEntities() : base("name=ForexEntities", "ForexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForexEntities object.
        /// </summary>
        public ForexEntities(string connectionString) : base(connectionString, "ForexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForexEntities object.
        /// </summary>
        public ForexEntities(EntityConnection connection) : base(connection, "ForexEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<v_Pair> v_Pair
        {
            get
            {
                if ((_v_Pair == null))
                {
                    _v_Pair = base.CreateObjectSet<v_Pair>("v_Pair");
                }
                return _v_Pair;
            }
        }
        private ObjectSet<v_Pair> _v_Pair;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Offer> t_Offer
        {
            get
            {
                if ((_t_Offer == null))
                {
                    _t_Offer = base.CreateObjectSet<t_Offer>("t_Offer");
                }
                return _t_Offer;
            }
        }
        private ObjectSet<t_Offer> _t_Offer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Stat> t_Stat
        {
            get
            {
                if ((_t_Stat == null))
                {
                    _t_Stat = base.CreateObjectSet<t_Stat>("t_Stat");
                }
                return _t_Stat;
            }
        }
        private ObjectSet<t_Stat> _t_Stat;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Bar> t_Bar
        {
            get
            {
                if ((_t_Bar == null))
                {
                    _t_Bar = base.CreateObjectSet<t_Bar>("t_Bar");
                }
                return _t_Bar;
            }
        }
        private ObjectSet<t_Bar> _t_Bar;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Trade> t_Trade
        {
            get
            {
                if ((_t_Trade == null))
                {
                    _t_Trade = base.CreateObjectSet<t_Trade>("t_Trade");
                }
                return _t_Trade;
            }
        }
        private ObjectSet<t_Trade> _t_Trade;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_BarHeight> t_BarHeight
        {
            get
            {
                if ((_t_BarHeight == null))
                {
                    _t_BarHeight = base.CreateObjectSet<t_BarHeight>("t_BarHeight");
                }
                return _t_BarHeight;
            }
        }
        private ObjectSet<t_BarHeight> _t_BarHeight;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Report> t_Report
        {
            get
            {
                if ((_t_Report == null))
                {
                    _t_Report = base.CreateObjectSet<t_Report>("t_Report");
                }
                return _t_Report;
            }
        }
        private ObjectSet<t_Report> _t_Report;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<v_BlackoutTime> v_BlackoutTime
        {
            get
            {
                if ((_v_BlackoutTime == null))
                {
                    _v_BlackoutTime = base.CreateObjectSet<v_BlackoutTime>("v_BlackoutTime");
                }
                return _v_BlackoutTime;
            }
        }
        private ObjectSet<v_BlackoutTime> _v_BlackoutTime;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<t_Session> t_Session
        {
            get
            {
                if ((_t_Session == null))
                {
                    _t_Session = base.CreateObjectSet<t_Session>("t_Session");
                }
                return _t_Session;
            }
        }
        private ObjectSet<t_Session> _t_Session;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<v_TradeSession> v_TradeSession
        {
            get
            {
                if ((_v_TradeSession == null))
                {
                    _v_TradeSession = base.CreateObjectSet<v_TradeSession>("v_TradeSession");
                }
                return _v_TradeSession;
            }
        }
        private ObjectSet<v_TradeSession> _v_TradeSession;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MonthlyStat__Stats> MonthlyStat__Stats
        {
            get
            {
                if ((_MonthlyStat__Stats == null))
                {
                    _MonthlyStat__Stats = base.CreateObjectSet<MonthlyStat__Stats>("MonthlyStat__Stats");
                }
                return _MonthlyStat__Stats;
            }
        }
        private ObjectSet<MonthlyStat__Stats> _MonthlyStat__Stats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event__News> Event__News
        {
            get
            {
                if ((_Event__News == null))
                {
                    _Event__News = base.CreateObjectSet<Event__News>("Event__News");
                }
                return _Event__News;
            }
        }
        private ObjectSet<Event__News> _Event__News;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventLevel__News> EventLevel__News
        {
            get
            {
                if ((_EventLevel__News == null))
                {
                    _EventLevel__News = base.CreateObjectSet<EventLevel__News>("EventLevel__News");
                }
                return _EventLevel__News;
            }
        }
        private ObjectSet<EventLevel__News> _EventLevel__News;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the v_Pair EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTov_Pair(v_Pair v_Pair)
        {
            base.AddObject("v_Pair", v_Pair);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Offer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Offer(t_Offer t_Offer)
        {
            base.AddObject("t_Offer", t_Offer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Stat EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Stat(t_Stat t_Stat)
        {
            base.AddObject("t_Stat", t_Stat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Bar EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Bar(t_Bar t_Bar)
        {
            base.AddObject("t_Bar", t_Bar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Trade EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Trade(t_Trade t_Trade)
        {
            base.AddObject("t_Trade", t_Trade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_BarHeight EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_BarHeight(t_BarHeight t_BarHeight)
        {
            base.AddObject("t_BarHeight", t_BarHeight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Report EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Report(t_Report t_Report)
        {
            base.AddObject("t_Report", t_Report);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the v_BlackoutTime EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTov_BlackoutTime(v_BlackoutTime v_BlackoutTime)
        {
            base.AddObject("v_BlackoutTime", v_BlackoutTime);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the t_Session EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTot_Session(t_Session t_Session)
        {
            base.AddObject("t_Session", t_Session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the v_TradeSession EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTov_TradeSession(v_TradeSession v_TradeSession)
        {
            base.AddObject("v_TradeSession", v_TradeSession);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MonthlyStat__Stats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonthlyStat__Stats(MonthlyStat__Stats monthlyStat__Stats)
        {
            base.AddObject("MonthlyStat__Stats", monthlyStat__Stats);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Event__News EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvent__News(Event__News event__News)
        {
            base.AddObject("Event__News", event__News);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventLevel__News EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventLevel__News(EventLevel__News eventLevel__News)
        {
            base.AddObject("EventLevel__News", eventLevel__News);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pair">No Metadata Documentation available.</param>
        /// <param name="period">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="spreadPeriod">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Single>> GetCorridor(global::System.String pair, Nullable<global::System.Byte> period, Nullable<global::System.DateTime> date, Nullable<global::System.Int32> spreadPeriod)
        {
            ObjectParameter pairParameter;
            if (pair != null)
            {
                pairParameter = new ObjectParameter("Pair", pair);
            }
            else
            {
                pairParameter = new ObjectParameter("Pair", typeof(global::System.String));
            }
    
            ObjectParameter periodParameter;
            if (period.HasValue)
            {
                periodParameter = new ObjectParameter("Period", period);
            }
            else
            {
                periodParameter = new ObjectParameter("Period", typeof(global::System.Byte));
            }
    
            ObjectParameter dateParameter;
            if (date.HasValue)
            {
                dateParameter = new ObjectParameter("Date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("Date", typeof(global::System.DateTime));
            }
    
            ObjectParameter spreadPeriodParameter;
            if (spreadPeriod.HasValue)
            {
                spreadPeriodParameter = new ObjectParameter("SpreadPeriod", spreadPeriod);
            }
            else
            {
                spreadPeriodParameter = new ObjectParameter("SpreadPeriod", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Single>>("GetCorridor", pairParameter, periodParameter, dateParameter, spreadPeriodParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pair">No Metadata Documentation available.</param>
        /// <param name="period">No Metadata Documentation available.</param>
        /// <param name="corridorDate">No Metadata Documentation available.</param>
        /// <param name="corridorPeriods">No Metadata Documentation available.</param>
        /// <param name="barMinutes">No Metadata Documentation available.</param>
        public ObjectResult<GetCorridorAverage_Result> GetCorridorAverage(global::System.String pair, Nullable<global::System.Byte> period, Nullable<global::System.DateTime> corridorDate, Nullable<global::System.Int32> corridorPeriods, Nullable<global::System.Int32> barMinutes)
        {
            ObjectParameter pairParameter;
            if (pair != null)
            {
                pairParameter = new ObjectParameter("Pair", pair);
            }
            else
            {
                pairParameter = new ObjectParameter("Pair", typeof(global::System.String));
            }
    
            ObjectParameter periodParameter;
            if (period.HasValue)
            {
                periodParameter = new ObjectParameter("Period", period);
            }
            else
            {
                periodParameter = new ObjectParameter("Period", typeof(global::System.Byte));
            }
    
            ObjectParameter corridorDateParameter;
            if (corridorDate.HasValue)
            {
                corridorDateParameter = new ObjectParameter("CorridorDate", corridorDate);
            }
            else
            {
                corridorDateParameter = new ObjectParameter("CorridorDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter corridorPeriodsParameter;
            if (corridorPeriods.HasValue)
            {
                corridorPeriodsParameter = new ObjectParameter("CorridorPeriods", corridorPeriods);
            }
            else
            {
                corridorPeriodsParameter = new ObjectParameter("CorridorPeriods", typeof(global::System.Int32));
            }
    
            ObjectParameter barMinutesParameter;
            if (barMinutes.HasValue)
            {
                barMinutesParameter = new ObjectParameter("BarMinutes", barMinutes);
            }
            else
            {
                barMinutesParameter = new ObjectParameter("BarMinutes", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetCorridorAverage_Result>("GetCorridorAverage", pairParameter, periodParameter, corridorDateParameter, corridorPeriodsParameter, barMinutesParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pair">No Metadata Documentation available.</param>
        /// <param name="period">No Metadata Documentation available.</param>
        /// <param name="dateEnd">No Metadata Documentation available.</param>
        /// <param name="barMinutes">No Metadata Documentation available.</param>
        /// <param name="barsCount">No Metadata Documentation available.</param>
        public ObjectResult<BarsByMinutes_Result> BarsByMinutes(global::System.String pair, Nullable<global::System.Byte> period, Nullable<global::System.DateTime> dateEnd, Nullable<global::System.Int32> barMinutes, Nullable<global::System.Int32> barsCount)
        {
            ObjectParameter pairParameter;
            if (pair != null)
            {
                pairParameter = new ObjectParameter("Pair", pair);
            }
            else
            {
                pairParameter = new ObjectParameter("Pair", typeof(global::System.String));
            }
    
            ObjectParameter periodParameter;
            if (period.HasValue)
            {
                periodParameter = new ObjectParameter("Period", period);
            }
            else
            {
                periodParameter = new ObjectParameter("Period", typeof(global::System.Byte));
            }
    
            ObjectParameter dateEndParameter;
            if (dateEnd.HasValue)
            {
                dateEndParameter = new ObjectParameter("DateEnd", dateEnd);
            }
            else
            {
                dateEndParameter = new ObjectParameter("DateEnd", typeof(global::System.DateTime));
            }
    
            ObjectParameter barMinutesParameter;
            if (barMinutes.HasValue)
            {
                barMinutesParameter = new ObjectParameter("BarMinutes", barMinutes);
            }
            else
            {
                barMinutesParameter = new ObjectParameter("BarMinutes", typeof(global::System.Int32));
            }
    
            ObjectParameter barsCountParameter;
            if (barsCount.HasValue)
            {
                barsCountParameter = new ObjectParameter("BarsCount", barsCount);
            }
            else
            {
                barsCountParameter = new ObjectParameter("BarsCount", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<BarsByMinutes_Result>("BarsByMinutes", pairParameter, periodParameter, dateEndParameter, barMinutesParameter, barsCountParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pair">No Metadata Documentation available.</param>
        /// <param name="period">No Metadata Documentation available.</param>
        /// <param name="length">No Metadata Documentation available.</param>
        /// <param name="startDate">No Metadata Documentation available.</param>
        public ObjectResult<s_GetBarStats_Result> s_GetBarStats(global::System.String pair, Nullable<global::System.Int32> period, Nullable<global::System.Int32> length, Nullable<global::System.DateTime> startDate)
        {
            ObjectParameter pairParameter;
            if (pair != null)
            {
                pairParameter = new ObjectParameter("Pair", pair);
            }
            else
            {
                pairParameter = new ObjectParameter("Pair", typeof(global::System.String));
            }
    
            ObjectParameter periodParameter;
            if (period.HasValue)
            {
                periodParameter = new ObjectParameter("Period", period);
            }
            else
            {
                periodParameter = new ObjectParameter("Period", typeof(global::System.Int32));
            }
    
            ObjectParameter lengthParameter;
            if (length.HasValue)
            {
                lengthParameter = new ObjectParameter("Length", length);
            }
            else
            {
                lengthParameter = new ObjectParameter("Length", typeof(global::System.Int32));
            }
    
            ObjectParameter startDateParameter;
            if (startDate.HasValue)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<s_GetBarStats_Result>("s_GetBarStats", pairParameter, periodParameter, lengthParameter, startDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="dateStart">No Metadata Documentation available.</param>
        /// <param name="frameInPeriods">No Metadata Documentation available.</param>
        /// <param name="weeks">No Metadata Documentation available.</param>
        public ObjectResult<sGetStats_Result> sGetStats(Nullable<global::System.DateTime> dateStart, Nullable<global::System.Int32> frameInPeriods, Nullable<global::System.Int32> weeks)
        {
            ObjectParameter dateStartParameter;
            if (dateStart.HasValue)
            {
                dateStartParameter = new ObjectParameter("DateStart", dateStart);
            }
            else
            {
                dateStartParameter = new ObjectParameter("DateStart", typeof(global::System.DateTime));
            }
    
            ObjectParameter frameInPeriodsParameter;
            if (frameInPeriods.HasValue)
            {
                frameInPeriodsParameter = new ObjectParameter("FrameInPeriods", frameInPeriods);
            }
            else
            {
                frameInPeriodsParameter = new ObjectParameter("FrameInPeriods", typeof(global::System.Int32));
            }
    
            ObjectParameter weeksParameter;
            if (weeks.HasValue)
            {
                weeksParameter = new ObjectParameter("Weeks", weeks);
            }
            else
            {
                weeksParameter = new ObjectParameter("Weeks", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<sGetStats_Result>("sGetStats", dateStartParameter, frameInPeriodsParameter, weeksParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="Event__News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event__News : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event__News object.
        /// </summary>
        /// <param name="level">Initial value of the Level property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static Event__News CreateEvent__News(global::System.String level, global::System.String name, global::System.DateTimeOffset time, global::System.String country)
        {
            Event__News event__News = new Event__News();
            event__News.Level = level;
            event__News.Name = name;
            event__News.Time = time;
            event__News.Country = country;
            return event__News;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, false, "Level");
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false, "Name");
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset Time
        {
            get
            {
                return _Time;
            }
            set
            {
                if (_Time != value)
                {
                    OnTimeChanging(value);
                    ReportPropertyChanging("Time");
                    _Time = StructuralObject.SetValidValue(value, "Time");
                    ReportPropertyChanged("Time");
                    OnTimeChanged();
                }
            }
        }
        private global::System.DateTimeOffset _Time;
        partial void OnTimeChanging(global::System.DateTimeOffset value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                if (_Country != value)
                {
                    OnCountryChanging(value);
                    ReportPropertyChanging("Country");
                    _Country = StructuralObject.SetValidValue(value, false, "Country");
                    ReportPropertyChanged("Country");
                    OnCountryChanged();
                }
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForexModel", "FK_Event_EventLevel", "EventLevel")]
        public EventLevel__News EventLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventLevel__News>("ForexModel.FK_Event_EventLevel", "EventLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventLevel__News>("ForexModel.FK_Event_EventLevel", "EventLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventLevel__News> EventLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventLevel__News>("ForexModel.FK_Event_EventLevel", "EventLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventLevel__News>("ForexModel.FK_Event_EventLevel", "EventLevel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="EventLevel__News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventLevel__News : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventLevel__News object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        public static EventLevel__News CreateEventLevel__News(global::System.String id, global::System.String name, global::System.Int32 level)
        {
            EventLevel__News eventLevel__News = new EventLevel__News();
            eventLevel__News.Id = id;
            eventLevel__News.Name = name;
            eventLevel__News.Level = level;
            return eventLevel__News;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, "Level");
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForexModel", "FK_Event_EventLevel", "Event")]
        public EntityCollection<Event__News> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event__News>("ForexModel.FK_Event_EventLevel", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event__News>("ForexModel.FK_Event_EventLevel", "Event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="MonthlyStat__Stats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MonthlyStat__Stats : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MonthlyStat__Stats object.
        /// </summary>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="stDevAvg">Initial value of the StDevAvg property.</param>
        /// <param name="stDevStDev">Initial value of the StDevStDev property.</param>
        /// <param name="count">Initial value of the Count property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static MonthlyStat__Stats CreateMonthlyStat__Stats(global::System.Int32 month, global::System.String pair, global::System.Int32 period, global::System.Double stDevAvg, global::System.Double stDevStDev, global::System.Int32 count, global::System.DateTime date)
        {
            MonthlyStat__Stats monthlyStat__Stats = new MonthlyStat__Stats();
            monthlyStat__Stats.Month = month;
            monthlyStat__Stats.Pair = pair;
            monthlyStat__Stats.Period = period;
            monthlyStat__Stats.StDevAvg = stDevAvg;
            monthlyStat__Stats.StDevStDev = stDevStDev;
            monthlyStat__Stats.Count = count;
            monthlyStat__Stats.Date = date;
            return monthlyStat__Stats;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value, "Month");
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                if (_Pair != value)
                {
                    OnPairChanging(value);
                    ReportPropertyChanging("Pair");
                    _Pair = StructuralObject.SetValidValue(value, false, "Pair");
                    ReportPropertyChanged("Pair");
                    OnPairChanged();
                }
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period
        {
            get
            {
                return _Period;
            }
            set
            {
                if (_Period != value)
                {
                    OnPeriodChanging(value);
                    ReportPropertyChanging("Period");
                    _Period = StructuralObject.SetValidValue(value, "Period");
                    ReportPropertyChanged("Period");
                    OnPeriodChanged();
                }
            }
        }
        private global::System.Int32 _Period;
        partial void OnPeriodChanging(global::System.Int32 value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StDevAvg
        {
            get
            {
                return _StDevAvg;
            }
            set
            {
                OnStDevAvgChanging(value);
                ReportPropertyChanging("StDevAvg");
                _StDevAvg = StructuralObject.SetValidValue(value, "StDevAvg");
                ReportPropertyChanged("StDevAvg");
                OnStDevAvgChanged();
            }
        }
        private global::System.Double _StDevAvg;
        partial void OnStDevAvgChanging(global::System.Double value);
        partial void OnStDevAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StDevStDev
        {
            get
            {
                return _StDevStDev;
            }
            set
            {
                OnStDevStDevChanging(value);
                ReportPropertyChanging("StDevStDev");
                _StDevStDev = StructuralObject.SetValidValue(value, "StDevStDev");
                ReportPropertyChanged("StDevStDev");
                OnStDevStDevChanged();
            }
        }
        private global::System.Double _StDevStDev;
        partial void OnStDevStDevChanging(global::System.Double value);
        partial void OnStDevStDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value, "Count");
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value, "Date");
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Bar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Bar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Bar object.
        /// </summary>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="askHigh">Initial value of the AskHigh property.</param>
        /// <param name="askLow">Initial value of the AskLow property.</param>
        /// <param name="askOpen">Initial value of the AskOpen property.</param>
        /// <param name="askClose">Initial value of the AskClose property.</param>
        /// <param name="bidHigh">Initial value of the BidHigh property.</param>
        /// <param name="bidLow">Initial value of the BidLow property.</param>
        /// <param name="bidOpen">Initial value of the BidOpen property.</param>
        /// <param name="bidClose">Initial value of the BidClose property.</param>
        /// <param name="volume">Initial value of the Volume property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static t_Bar Createt_Bar(global::System.String pair, global::System.Int32 period, global::System.DateTimeOffset startDate, global::System.Single askHigh, global::System.Single askLow, global::System.Single askOpen, global::System.Single askClose, global::System.Single bidHigh, global::System.Single bidLow, global::System.Single bidOpen, global::System.Single bidClose, global::System.Int32 volume, global::System.Int32 id)
        {
            t_Bar t_Bar = new t_Bar();
            t_Bar.Pair = pair;
            t_Bar.Period = period;
            t_Bar.StartDate = startDate;
            t_Bar.AskHigh = askHigh;
            t_Bar.AskLow = askLow;
            t_Bar.AskOpen = askOpen;
            t_Bar.AskClose = askClose;
            t_Bar.BidHigh = bidHigh;
            t_Bar.BidLow = bidLow;
            t_Bar.BidOpen = bidOpen;
            t_Bar.BidClose = bidClose;
            t_Bar.Volume = volume;
            t_Bar.ID = id;
            return t_Bar;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, false, "Pair");
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, "Period");
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Int32 _Period;
        partial void OnPeriodChanging(global::System.Int32 value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTimeOffset _StartDate;
        partial void OnStartDateChanging(global::System.DateTimeOffset value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single AskHigh
        {
            get
            {
                return _AskHigh;
            }
            set
            {
                OnAskHighChanging(value);
                ReportPropertyChanging("AskHigh");
                _AskHigh = StructuralObject.SetValidValue(value, "AskHigh");
                ReportPropertyChanged("AskHigh");
                OnAskHighChanged();
            }
        }
        private global::System.Single _AskHigh;
        partial void OnAskHighChanging(global::System.Single value);
        partial void OnAskHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single AskLow
        {
            get
            {
                return _AskLow;
            }
            set
            {
                OnAskLowChanging(value);
                ReportPropertyChanging("AskLow");
                _AskLow = StructuralObject.SetValidValue(value, "AskLow");
                ReportPropertyChanged("AskLow");
                OnAskLowChanged();
            }
        }
        private global::System.Single _AskLow;
        partial void OnAskLowChanging(global::System.Single value);
        partial void OnAskLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single AskOpen
        {
            get
            {
                return _AskOpen;
            }
            set
            {
                OnAskOpenChanging(value);
                ReportPropertyChanging("AskOpen");
                _AskOpen = StructuralObject.SetValidValue(value, "AskOpen");
                ReportPropertyChanged("AskOpen");
                OnAskOpenChanged();
            }
        }
        private global::System.Single _AskOpen;
        partial void OnAskOpenChanging(global::System.Single value);
        partial void OnAskOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single AskClose
        {
            get
            {
                return _AskClose;
            }
            set
            {
                OnAskCloseChanging(value);
                ReportPropertyChanging("AskClose");
                _AskClose = StructuralObject.SetValidValue(value, "AskClose");
                ReportPropertyChanged("AskClose");
                OnAskCloseChanged();
            }
        }
        private global::System.Single _AskClose;
        partial void OnAskCloseChanging(global::System.Single value);
        partial void OnAskCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single BidHigh
        {
            get
            {
                return _BidHigh;
            }
            set
            {
                OnBidHighChanging(value);
                ReportPropertyChanging("BidHigh");
                _BidHigh = StructuralObject.SetValidValue(value, "BidHigh");
                ReportPropertyChanged("BidHigh");
                OnBidHighChanged();
            }
        }
        private global::System.Single _BidHigh;
        partial void OnBidHighChanging(global::System.Single value);
        partial void OnBidHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single BidLow
        {
            get
            {
                return _BidLow;
            }
            set
            {
                OnBidLowChanging(value);
                ReportPropertyChanging("BidLow");
                _BidLow = StructuralObject.SetValidValue(value, "BidLow");
                ReportPropertyChanged("BidLow");
                OnBidLowChanged();
            }
        }
        private global::System.Single _BidLow;
        partial void OnBidLowChanging(global::System.Single value);
        partial void OnBidLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single BidOpen
        {
            get
            {
                return _BidOpen;
            }
            set
            {
                OnBidOpenChanging(value);
                ReportPropertyChanging("BidOpen");
                _BidOpen = StructuralObject.SetValidValue(value, "BidOpen");
                ReportPropertyChanged("BidOpen");
                OnBidOpenChanged();
            }
        }
        private global::System.Single _BidOpen;
        partial void OnBidOpenChanging(global::System.Single value);
        partial void OnBidOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single BidClose
        {
            get
            {
                return _BidClose;
            }
            set
            {
                OnBidCloseChanging(value);
                ReportPropertyChanging("BidClose");
                _BidClose = StructuralObject.SetValidValue(value, "BidClose");
                ReportPropertyChanged("BidClose");
                OnBidCloseChanged();
            }
        }
        private global::System.Single _BidClose;
        partial void OnBidCloseChanging(global::System.Single value);
        partial void OnBidCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value, "Volume");
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.Int32 _Volume;
        partial void OnVolumeChanging(global::System.Int32 value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDateLocal
        {
            get
            {
                return _StartDateLocal;
            }
            set
            {
                OnStartDateLocalChanging(value);
                ReportPropertyChanging("StartDateLocal");
                _StartDateLocal = StructuralObject.SetValidValue(value, "StartDateLocal");
                ReportPropertyChanged("StartDateLocal");
                OnStartDateLocalChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDateLocal;
        partial void OnStartDateLocalChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateLocalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Row
        {
            get
            {
                return _Row;
            }
            set
            {
                OnRowChanging(value);
                ReportPropertyChanging("Row");
                _Row = StructuralObject.SetValidValue(value, "Row");
                ReportPropertyChanged("Row");
                OnRowChanged();
            }
        }
        private Nullable<global::System.Int32> _Row;
        partial void OnRowChanging(Nullable<global::System.Int32> value);
        partial void OnRowChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_BarHeight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_BarHeight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_BarHeight object.
        /// </summary>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="avgHeight">Initial value of the AvgHeight property.</param>
        /// <param name="length">Initial value of the Length property.</param>
        /// <param name="stDevHeight">Initial value of the StDevHeight property.</param>
        public static t_BarHeight Createt_BarHeight(global::System.String pair, global::System.Int32 period, global::System.DateTimeOffset startDate, global::System.Double avgHeight, global::System.Int32 length, global::System.Double stDevHeight)
        {
            t_BarHeight t_BarHeight = new t_BarHeight();
            t_BarHeight.Pair = pair;
            t_BarHeight.Period = period;
            t_BarHeight.StartDate = startDate;
            t_BarHeight.AvgHeight = avgHeight;
            t_BarHeight.Length = length;
            t_BarHeight.StDevHeight = stDevHeight;
            return t_BarHeight;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                if (_Pair != value)
                {
                    OnPairChanging(value);
                    ReportPropertyChanging("Pair");
                    _Pair = StructuralObject.SetValidValue(value, false, "Pair");
                    ReportPropertyChanged("Pair");
                    OnPairChanged();
                }
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Period
        {
            get
            {
                return _Period;
            }
            set
            {
                if (_Period != value)
                {
                    OnPeriodChanging(value);
                    ReportPropertyChanging("Period");
                    _Period = StructuralObject.SetValidValue(value, "Period");
                    ReportPropertyChanged("Period");
                    OnPeriodChanged();
                }
            }
        }
        private global::System.Int32 _Period;
        partial void OnPeriodChanging(global::System.Int32 value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                if (_StartDate != value)
                {
                    OnStartDateChanging(value);
                    ReportPropertyChanging("StartDate");
                    _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                    ReportPropertyChanged("StartDate");
                    OnStartDateChanged();
                }
            }
        }
        private global::System.DateTimeOffset _StartDate;
        partial void OnStartDateChanging(global::System.DateTimeOffset value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AvgHeight
        {
            get
            {
                return _AvgHeight;
            }
            set
            {
                OnAvgHeightChanging(value);
                ReportPropertyChanging("AvgHeight");
                _AvgHeight = StructuralObject.SetValidValue(value, "AvgHeight");
                ReportPropertyChanged("AvgHeight");
                OnAvgHeightChanged();
            }
        }
        private global::System.Double _AvgHeight;
        partial void OnAvgHeightChanging(global::System.Double value);
        partial void OnAvgHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Length
        {
            get
            {
                return _Length;
            }
            set
            {
                if (_Length != value)
                {
                    OnLengthChanging(value);
                    ReportPropertyChanging("Length");
                    _Length = StructuralObject.SetValidValue(value, "Length");
                    ReportPropertyChanged("Length");
                    OnLengthChanged();
                }
            }
        }
        private global::System.Int32 _Length;
        partial void OnLengthChanging(global::System.Int32 value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StDevHeight
        {
            get
            {
                return _StDevHeight;
            }
            set
            {
                OnStDevHeightChanging(value);
                ReportPropertyChanging("StDevHeight");
                _StDevHeight = StructuralObject.SetValidValue(value, "StDevHeight");
                ReportPropertyChanged("StDevHeight");
                OnStDevHeightChanged();
            }
        }
        private global::System.Double _StDevHeight;
        partial void OnStDevHeightChanging(global::System.Double value);
        partial void OnStDevHeightChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Offer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Offer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Offer object.
        /// </summary>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="digits">Initial value of the Digits property.</param>
        /// <param name="pipCost">Initial value of the PipCost property.</param>
        /// <param name="mMR">Initial value of the MMR property.</param>
        /// <param name="pipSize">Initial value of the PipSize property.</param>
        /// <param name="baseUnitSize">Initial value of the BaseUnitSize property.</param>
        public static t_Offer Createt_Offer(global::System.String pair, global::System.Int32 digits, global::System.Double pipCost, global::System.Double mMR, global::System.Double pipSize, global::System.Int32 baseUnitSize)
        {
            t_Offer t_Offer = new t_Offer();
            t_Offer.Pair = pair;
            t_Offer.Digits = digits;
            t_Offer.PipCost = pipCost;
            t_Offer.MMR = mMR;
            t_Offer.PipSize = pipSize;
            t_Offer.BaseUnitSize = baseUnitSize;
            return t_Offer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                if (_Pair != value)
                {
                    OnPairChanging(value);
                    ReportPropertyChanging("Pair");
                    _Pair = StructuralObject.SetValidValue(value, false, "Pair");
                    ReportPropertyChanged("Pair");
                    OnPairChanged();
                }
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Digits
        {
            get
            {
                return _Digits;
            }
            set
            {
                OnDigitsChanging(value);
                ReportPropertyChanging("Digits");
                _Digits = StructuralObject.SetValidValue(value, "Digits");
                ReportPropertyChanged("Digits");
                OnDigitsChanged();
            }
        }
        private global::System.Int32 _Digits;
        partial void OnDigitsChanging(global::System.Int32 value);
        partial void OnDigitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PipCost
        {
            get
            {
                return _PipCost;
            }
            set
            {
                OnPipCostChanging(value);
                ReportPropertyChanging("PipCost");
                _PipCost = StructuralObject.SetValidValue(value, "PipCost");
                ReportPropertyChanged("PipCost");
                OnPipCostChanged();
            }
        }
        private global::System.Double _PipCost;
        partial void OnPipCostChanging(global::System.Double value);
        partial void OnPipCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MMR
        {
            get
            {
                return _MMR;
            }
            set
            {
                OnMMRChanging(value);
                ReportPropertyChanging("MMR");
                _MMR = StructuralObject.SetValidValue(value, "MMR");
                ReportPropertyChanged("MMR");
                OnMMRChanged();
            }
        }
        private global::System.Double _MMR;
        partial void OnMMRChanging(global::System.Double value);
        partial void OnMMRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PipSize
        {
            get
            {
                return _PipSize;
            }
            set
            {
                OnPipSizeChanging(value);
                ReportPropertyChanging("PipSize");
                _PipSize = StructuralObject.SetValidValue(value, "PipSize");
                ReportPropertyChanged("PipSize");
                OnPipSizeChanged();
            }
        }
        private global::System.Double _PipSize;
        partial void OnPipSizeChanging(global::System.Double value);
        partial void OnPipSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BaseUnitSize
        {
            get
            {
                return _BaseUnitSize;
            }
            set
            {
                OnBaseUnitSizeChanging(value);
                ReportPropertyChanging("BaseUnitSize");
                _BaseUnitSize = StructuralObject.SetValidValue(value, "BaseUnitSize");
                ReportPropertyChanged("BaseUnitSize");
                OnBaseUnitSizeChanged();
            }
        }
        private global::System.Int32 _BaseUnitSize;
        partial void OnBaseUnitSizeChanging(global::System.Int32 value);
        partial void OnBaseUnitSizeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Report : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Report object.
        /// </summary>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        public static t_Report Createt_Report(global::System.DateTimeOffset time, global::System.String eventType)
        {
            t_Report t_Report = new t_Report();
            t_Report.Time = time;
            t_Report.EventType = eventType;
            return t_Report;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset Time
        {
            get
            {
                return _Time;
            }
            set
            {
                if (_Time != value)
                {
                    OnTimeChanging(value);
                    ReportPropertyChanging("Time");
                    _Time = StructuralObject.SetValidValue(value, "Time");
                    ReportPropertyChanged("Time");
                    OnTimeChanged();
                }
            }
        }
        private global::System.DateTimeOffset _Time;
        partial void OnTimeChanging(global::System.DateTimeOffset value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false, "EventType");
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeLocal
        {
            get
            {
                return _TimeLocal;
            }
            set
            {
                OnTimeLocalChanging(value);
                ReportPropertyChanging("TimeLocal");
                _TimeLocal = StructuralObject.SetValidValue(value, "TimeLocal");
                ReportPropertyChanged("TimeLocal");
                OnTimeLocalChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeLocal;
        partial void OnTimeLocalChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeLocalChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Session object.
        /// </summary>
        /// <param name="uid">Initial value of the Uid property.</param>
        /// <param name="minimumGross">Initial value of the MinimumGross property.</param>
        /// <param name="maximumLot">Initial value of the MaximumLot property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        public static t_Session Createt_Session(global::System.Guid uid, global::System.Double minimumGross, global::System.Int32 maximumLot, global::System.DateTime timestamp)
        {
            t_Session t_Session = new t_Session();
            t_Session.Uid = uid;
            t_Session.MinimumGross = minimumGross;
            t_Session.MaximumLot = maximumLot;
            t_Session.Timestamp = timestamp;
            return t_Session;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Uid
        {
            get
            {
                return _Uid;
            }
            set
            {
                if (_Uid != value)
                {
                    OnUidChanging(value);
                    ReportPropertyChanging("Uid");
                    _Uid = StructuralObject.SetValidValue(value, "Uid");
                    ReportPropertyChanged("Uid");
                    OnUidChanged();
                }
            }
        }
        private global::System.Guid _Uid;
        partial void OnUidChanging(global::System.Guid value);
        partial void OnUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MinimumGross
        {
            get
            {
                return _MinimumGross;
            }
            set
            {
                OnMinimumGrossChanging(value);
                ReportPropertyChanging("MinimumGross");
                _MinimumGross = StructuralObject.SetValidValue(value, "MinimumGross");
                ReportPropertyChanged("MinimumGross");
                OnMinimumGrossChanged();
            }
        }
        private global::System.Double _MinimumGross;
        partial void OnMinimumGrossChanging(global::System.Double value);
        partial void OnMinimumGrossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaximumLot
        {
            get
            {
                return _MaximumLot;
            }
            set
            {
                OnMaximumLotChanging(value);
                ReportPropertyChanging("MaximumLot");
                _MaximumLot = StructuralObject.SetValidValue(value, "MaximumLot");
                ReportPropertyChanged("MaximumLot");
                OnMaximumLotChanged();
            }
        }
        private global::System.Int32 _MaximumLot;
        partial void OnMaximumLotChanging(global::System.Int32 value);
        partial void OnMaximumLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Profitability
        {
            get
            {
                return _Profitability;
            }
            set
            {
                OnProfitabilityChanging(value);
                ReportPropertyChanging("Profitability");
                _Profitability = StructuralObject.SetValidValue(value, "Profitability");
                ReportPropertyChanged("Profitability");
                OnProfitabilityChanged();
            }
        }
        private Nullable<global::System.Double> _Profitability;
        partial void OnProfitabilityChanging(Nullable<global::System.Double> value);
        partial void OnProfitabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, "Timestamp");
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SuperUid
        {
            get
            {
                return _SuperUid;
            }
            set
            {
                OnSuperUidChanging(value);
                ReportPropertyChanging("SuperUid");
                _SuperUid = StructuralObject.SetValidValue(value, "SuperUid");
                ReportPropertyChanged("SuperUid");
                OnSuperUidChanged();
            }
        }
        private Nullable<global::System.Guid> _SuperUid;
        partial void OnSuperUidChanging(Nullable<global::System.Guid> value);
        partial void OnSuperUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateMin
        {
            get
            {
                return _DateMin;
            }
            set
            {
                OnDateMinChanging(value);
                ReportPropertyChanging("DateMin");
                _DateMin = StructuralObject.SetValidValue(value, "DateMin");
                ReportPropertyChanged("DateMin");
                OnDateMinChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateMin;
        partial void OnDateMinChanging(Nullable<global::System.DateTime> value);
        partial void OnDateMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateMax
        {
            get
            {
                return _DateMax;
            }
            set
            {
                OnDateMaxChanging(value);
                ReportPropertyChanging("DateMax");
                _DateMax = StructuralObject.SetValidValue(value, "DateMax");
                ReportPropertyChanged("DateMax");
                OnDateMaxChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateMax;
        partial void OnDateMaxChanging(Nullable<global::System.DateTime> value);
        partial void OnDateMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BallanceMax
        {
            get
            {
                return _BallanceMax;
            }
            set
            {
                OnBallanceMaxChanging(value);
                ReportPropertyChanging("BallanceMax");
                _BallanceMax = StructuralObject.SetValidValue(value, "BallanceMax");
                ReportPropertyChanged("BallanceMax");
                OnBallanceMaxChanged();
            }
        }
        private Nullable<global::System.Double> _BallanceMax;
        partial void OnBallanceMaxChanging(Nullable<global::System.Double> value);
        partial void OnBallanceMaxChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Stat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Stat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Stat object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="value1">Initial value of the Value1 property.</param>
        /// <param name="value2">Initial value of the Value2 property.</param>
        /// <param name="value3">Initial value of the Value3 property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static t_Stat Createt_Stat(global::System.Int32 id, global::System.DateTime time, global::System.Double price, global::System.Double value1, global::System.Double value2, global::System.Double value3, global::System.String name)
        {
            t_Stat t_Stat = new t_Stat();
            t_Stat.Id = id;
            t_Stat.Time = time;
            t_Stat.Price = price;
            t_Stat.Value1 = value1;
            t_Stat.Value2 = value2;
            t_Stat.Value3 = value3;
            t_Stat.Name = name;
            return t_Stat;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, "Time");
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value1
        {
            get
            {
                return _Value1;
            }
            set
            {
                OnValue1Changing(value);
                ReportPropertyChanging("Value1");
                _Value1 = StructuralObject.SetValidValue(value, "Value1");
                ReportPropertyChanged("Value1");
                OnValue1Changed();
            }
        }
        private global::System.Double _Value1;
        partial void OnValue1Changing(global::System.Double value);
        partial void OnValue1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value2
        {
            get
            {
                return _Value2;
            }
            set
            {
                OnValue2Changing(value);
                ReportPropertyChanging("Value2");
                _Value2 = StructuralObject.SetValidValue(value, "Value2");
                ReportPropertyChanged("Value2");
                OnValue2Changed();
            }
        }
        private global::System.Double _Value2;
        partial void OnValue2Changing(global::System.Double value);
        partial void OnValue2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value3
        {
            get
            {
                return _Value3;
            }
            set
            {
                OnValue3Changing(value);
                ReportPropertyChanging("Value3");
                _Value3 = StructuralObject.SetValidValue(value, "Value3");
                ReportPropertyChanged("Value3");
                OnValue3Changed();
            }
        }
        private global::System.Double _Value3;
        partial void OnValue3Changing(global::System.Double value);
        partial void OnValue3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="t_Trade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class t_Trade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new t_Trade object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="buy">Initial value of the Buy property.</param>
        /// <param name="pL">Initial value of the PL property.</param>
        /// <param name="grossPL">Initial value of the GrossPL property.</param>
        /// <param name="lot">Initial value of the Lot property.</param>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="timeOpen">Initial value of the TimeOpen property.</param>
        /// <param name="timeClose">Initial value of the TimeClose property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="commission">Initial value of the Commission property.</param>
        /// <param name="isVirtual">Initial value of the IsVirtual property.</param>
        /// <param name="corridorHeightInPips">Initial value of the CorridorHeightInPips property.</param>
        /// <param name="corridorMinutesBack">Initial value of the CorridorMinutesBack property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        /// <param name="priceOpen">Initial value of the PriceOpen property.</param>
        /// <param name="priceClose">Initial value of the PriceClose property.</param>
        public static t_Trade Createt_Trade(global::System.String id, global::System.Boolean buy, global::System.Double pL, global::System.Double grossPL, global::System.Double lot, global::System.String pair, global::System.DateTime timeOpen, global::System.DateTime timeClose, global::System.String accountId, global::System.Double commission, global::System.Boolean isVirtual, global::System.Double corridorHeightInPips, global::System.Double corridorMinutesBack, global::System.Guid sessionId, global::System.Double priceOpen, global::System.Double priceClose)
        {
            t_Trade t_Trade = new t_Trade();
            t_Trade.Id = id;
            t_Trade.Buy = buy;
            t_Trade.PL = pL;
            t_Trade.GrossPL = grossPL;
            t_Trade.Lot = lot;
            t_Trade.Pair = pair;
            t_Trade.TimeOpen = timeOpen;
            t_Trade.TimeClose = timeClose;
            t_Trade.AccountId = accountId;
            t_Trade.Commission = commission;
            t_Trade.IsVirtual = isVirtual;
            t_Trade.CorridorHeightInPips = corridorHeightInPips;
            t_Trade.CorridorMinutesBack = corridorMinutesBack;
            t_Trade.SessionId = sessionId;
            t_Trade.PriceOpen = priceOpen;
            t_Trade.PriceClose = priceClose;
            return t_Trade;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Buy
        {
            get
            {
                return _Buy;
            }
            set
            {
                OnBuyChanging(value);
                ReportPropertyChanging("Buy");
                _Buy = StructuralObject.SetValidValue(value, "Buy");
                ReportPropertyChanged("Buy");
                OnBuyChanged();
            }
        }
        private global::System.Boolean _Buy;
        partial void OnBuyChanging(global::System.Boolean value);
        partial void OnBuyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PL
        {
            get
            {
                return _PL;
            }
            set
            {
                OnPLChanging(value);
                ReportPropertyChanging("PL");
                _PL = StructuralObject.SetValidValue(value, "PL");
                ReportPropertyChanged("PL");
                OnPLChanged();
            }
        }
        private global::System.Double _PL;
        partial void OnPLChanging(global::System.Double value);
        partial void OnPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double GrossPL
        {
            get
            {
                return _GrossPL;
            }
            set
            {
                OnGrossPLChanging(value);
                ReportPropertyChanging("GrossPL");
                _GrossPL = StructuralObject.SetValidValue(value, "GrossPL");
                ReportPropertyChanged("GrossPL");
                OnGrossPLChanged();
            }
        }
        private global::System.Double _GrossPL;
        partial void OnGrossPLChanging(global::System.Double value);
        partial void OnGrossPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lot
        {
            get
            {
                return _Lot;
            }
            set
            {
                OnLotChanging(value);
                ReportPropertyChanging("Lot");
                _Lot = StructuralObject.SetValidValue(value, "Lot");
                ReportPropertyChanged("Lot");
                OnLotChanged();
            }
        }
        private global::System.Double _Lot;
        partial void OnLotChanging(global::System.Double value);
        partial void OnLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, false, "Pair");
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeOpen
        {
            get
            {
                return _TimeOpen;
            }
            set
            {
                OnTimeOpenChanging(value);
                ReportPropertyChanging("TimeOpen");
                _TimeOpen = StructuralObject.SetValidValue(value, "TimeOpen");
                ReportPropertyChanged("TimeOpen");
                OnTimeOpenChanged();
            }
        }
        private global::System.DateTime _TimeOpen;
        partial void OnTimeOpenChanging(global::System.DateTime value);
        partial void OnTimeOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeClose
        {
            get
            {
                return _TimeClose;
            }
            set
            {
                OnTimeCloseChanging(value);
                ReportPropertyChanging("TimeClose");
                _TimeClose = StructuralObject.SetValidValue(value, "TimeClose");
                ReportPropertyChanged("TimeClose");
                OnTimeCloseChanged();
            }
        }
        private global::System.DateTime _TimeClose;
        partial void OnTimeCloseChanging(global::System.DateTime value);
        partial void OnTimeCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, false, "AccountId");
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.String _AccountId;
        partial void OnAccountIdChanging(global::System.String value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value, "Commission");
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private global::System.Double _Commission;
        partial void OnCommissionChanging(global::System.Double value);
        partial void OnCommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVirtual
        {
            get
            {
                return _IsVirtual;
            }
            set
            {
                OnIsVirtualChanging(value);
                ReportPropertyChanging("IsVirtual");
                _IsVirtual = StructuralObject.SetValidValue(value, "IsVirtual");
                ReportPropertyChanged("IsVirtual");
                OnIsVirtualChanged();
            }
        }
        private global::System.Boolean _IsVirtual;
        partial void OnIsVirtualChanging(global::System.Boolean value);
        partial void OnIsVirtualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, "TimeStamp");
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeStamp;
        partial void OnTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CorridorHeightInPips
        {
            get
            {
                return _CorridorHeightInPips;
            }
            set
            {
                OnCorridorHeightInPipsChanging(value);
                ReportPropertyChanging("CorridorHeightInPips");
                _CorridorHeightInPips = StructuralObject.SetValidValue(value, "CorridorHeightInPips");
                ReportPropertyChanged("CorridorHeightInPips");
                OnCorridorHeightInPipsChanged();
            }
        }
        private global::System.Double _CorridorHeightInPips;
        partial void OnCorridorHeightInPipsChanging(global::System.Double value);
        partial void OnCorridorHeightInPipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CorridorMinutesBack
        {
            get
            {
                return _CorridorMinutesBack;
            }
            set
            {
                OnCorridorMinutesBackChanging(value);
                ReportPropertyChanging("CorridorMinutesBack");
                _CorridorMinutesBack = StructuralObject.SetValidValue(value, "CorridorMinutesBack");
                ReportPropertyChanged("CorridorMinutesBack");
                OnCorridorMinutesBackChanged();
            }
        }
        private global::System.Double _CorridorMinutesBack;
        partial void OnCorridorMinutesBackChanging(global::System.Double value);
        partial void OnCorridorMinutesBackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value, "SessionId");
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.Guid _SessionId;
        partial void OnSessionIdChanging(global::System.Guid value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PriceOpen
        {
            get
            {
                return _PriceOpen;
            }
            set
            {
                OnPriceOpenChanging(value);
                ReportPropertyChanging("PriceOpen");
                _PriceOpen = StructuralObject.SetValidValue(value, "PriceOpen");
                ReportPropertyChanged("PriceOpen");
                OnPriceOpenChanged();
            }
        }
        private global::System.Double _PriceOpen;
        partial void OnPriceOpenChanging(global::System.Double value);
        partial void OnPriceOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PriceClose
        {
            get
            {
                return _PriceClose;
            }
            set
            {
                OnPriceCloseChanging(value);
                ReportPropertyChanging("PriceClose");
                _PriceClose = StructuralObject.SetValidValue(value, "PriceClose");
                ReportPropertyChanged("PriceClose");
                OnPriceCloseChanged();
            }
        }
        private global::System.Double _PriceClose;
        partial void OnPriceCloseChanging(global::System.Double value);
        partial void OnPriceCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SessionInfo
        {
            get
            {
                return _SessionInfo;
            }
            set
            {
                OnSessionInfoChanging(value);
                ReportPropertyChanging("SessionInfo");
                _SessionInfo = StructuralObject.SetValidValue(value, true, "SessionInfo");
                ReportPropertyChanged("SessionInfo");
                OnSessionInfoChanged();
            }
        }
        private global::System.String _SessionInfo;
        partial void OnSessionInfoChanging(global::System.String value);
        partial void OnSessionInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RunningBalance
        {
            get
            {
                return _RunningBalance;
            }
            set
            {
                OnRunningBalanceChanging(value);
                ReportPropertyChanging("RunningBalance");
                _RunningBalance = StructuralObject.SetValidValue(value, "RunningBalance");
                ReportPropertyChanged("RunningBalance");
                OnRunningBalanceChanged();
            }
        }
        private Nullable<global::System.Double> _RunningBalance;
        partial void OnRunningBalanceChanging(Nullable<global::System.Double> value);
        partial void OnRunningBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RunningBalanceTotal
        {
            get
            {
                return _RunningBalanceTotal;
            }
            set
            {
                OnRunningBalanceTotalChanging(value);
                ReportPropertyChanging("RunningBalanceTotal");
                _RunningBalanceTotal = StructuralObject.SetValidValue(value, "RunningBalanceTotal");
                ReportPropertyChanged("RunningBalanceTotal");
                OnRunningBalanceTotalChanged();
            }
        }
        private Nullable<global::System.Double> _RunningBalanceTotal;
        partial void OnRunningBalanceTotalChanging(Nullable<global::System.Double> value);
        partial void OnRunningBalanceTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SessionInfo2
        {
            get
            {
                return _SessionInfo2;
            }
            set
            {
                OnSessionInfo2Changing(value);
                ReportPropertyChanging("SessionInfo2");
                _SessionInfo2 = StructuralObject.SetValidValue(value, true, "SessionInfo2");
                ReportPropertyChanged("SessionInfo2");
                OnSessionInfo2Changed();
            }
        }
        private global::System.String _SessionInfo2;
        partial void OnSessionInfo2Changing(global::System.String value);
        partial void OnSessionInfo2Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="v_BlackoutTime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class v_BlackoutTime : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new v_BlackoutTime object.
        /// </summary>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="timeStop">Initial value of the TimeStop property.</param>
        public static v_BlackoutTime Createv_BlackoutTime(global::System.DateTimeOffset time, global::System.String eventType, global::System.DateTimeOffset timeStop)
        {
            v_BlackoutTime v_BlackoutTime = new v_BlackoutTime();
            v_BlackoutTime.Time = time;
            v_BlackoutTime.EventType = eventType;
            v_BlackoutTime.TimeStop = timeStop;
            return v_BlackoutTime;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset Time
        {
            get
            {
                return _Time;
            }
            set
            {
                if (_Time != value)
                {
                    OnTimeChanging(value);
                    ReportPropertyChanging("Time");
                    _Time = StructuralObject.SetValidValue(value, "Time");
                    ReportPropertyChanged("Time");
                    OnTimeChanged();
                }
            }
        }
        private global::System.DateTimeOffset _Time;
        partial void OnTimeChanging(global::System.DateTimeOffset value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                if (_EventType != value)
                {
                    OnEventTypeChanging(value);
                    ReportPropertyChanging("EventType");
                    _EventType = StructuralObject.SetValidValue(value, false, "EventType");
                    ReportPropertyChanged("EventType");
                    OnEventTypeChanged();
                }
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeLocal
        {
            get
            {
                return _TimeLocal;
            }
            set
            {
                OnTimeLocalChanging(value);
                ReportPropertyChanging("TimeLocal");
                _TimeLocal = StructuralObject.SetValidValue(value, "TimeLocal");
                ReportPropertyChanged("TimeLocal");
                OnTimeLocalChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeLocal;
        partial void OnTimeLocalChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeLocalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> TimeStart
        {
            get
            {
                return _TimeStart;
            }
            set
            {
                OnTimeStartChanging(value);
                ReportPropertyChanging("TimeStart");
                _TimeStart = StructuralObject.SetValidValue(value, "TimeStart");
                ReportPropertyChanged("TimeStart");
                OnTimeStartChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _TimeStart;
        partial void OnTimeStartChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnTimeStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset TimeStop
        {
            get
            {
                return _TimeStop;
            }
            set
            {
                if (_TimeStop != value)
                {
                    OnTimeStopChanging(value);
                    ReportPropertyChanging("TimeStop");
                    _TimeStop = StructuralObject.SetValidValue(value, "TimeStop");
                    ReportPropertyChanged("TimeStop");
                    OnTimeStopChanged();
                }
            }
        }
        private global::System.DateTimeOffset _TimeStop;
        partial void OnTimeStopChanging(global::System.DateTimeOffset value);
        partial void OnTimeStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeStartLocal
        {
            get
            {
                return _TimeStartLocal;
            }
            set
            {
                OnTimeStartLocalChanging(value);
                ReportPropertyChanging("TimeStartLocal");
                _TimeStartLocal = StructuralObject.SetValidValue(value, "TimeStartLocal");
                ReportPropertyChanged("TimeStartLocal");
                OnTimeStartLocalChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeStartLocal;
        partial void OnTimeStartLocalChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeStartLocalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeStopLocal
        {
            get
            {
                return _TimeStopLocal;
            }
            set
            {
                OnTimeStopLocalChanging(value);
                ReportPropertyChanging("TimeStopLocal");
                _TimeStopLocal = StructuralObject.SetValidValue(value, "TimeStopLocal");
                ReportPropertyChanged("TimeStopLocal");
                OnTimeStopLocalChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeStopLocal;
        partial void OnTimeStopLocalChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeStopLocalChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="v_Pair")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class v_Pair : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new v_Pair object.
        /// </summary>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="weight1">Initial value of the Weight1 property.</param>
        /// <param name="weight2">Initial value of the Weight2 property.</param>
        public static v_Pair Createv_Pair(global::System.String pair, global::System.Int32 weight1, global::System.Int32 weight2)
        {
            v_Pair v_Pair = new v_Pair();
            v_Pair.Pair = pair;
            v_Pair.Weight1 = weight1;
            v_Pair.Weight2 = weight2;
            return v_Pair;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                if (_Pair != value)
                {
                    OnPairChanging(value);
                    ReportPropertyChanging("Pair");
                    _Pair = StructuralObject.SetValidValue(value, false, "Pair");
                    ReportPropertyChanged("Pair");
                    OnPairChanged();
                }
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Weight1
        {
            get
            {
                return _Weight1;
            }
            set
            {
                if (_Weight1 != value)
                {
                    OnWeight1Changing(value);
                    ReportPropertyChanging("Weight1");
                    _Weight1 = StructuralObject.SetValidValue(value, "Weight1");
                    ReportPropertyChanged("Weight1");
                    OnWeight1Changed();
                }
            }
        }
        private global::System.Int32 _Weight1;
        partial void OnWeight1Changing(global::System.Int32 value);
        partial void OnWeight1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Weight2
        {
            get
            {
                return _Weight2;
            }
            set
            {
                if (_Weight2 != value)
                {
                    OnWeight2Changing(value);
                    ReportPropertyChanging("Weight2");
                    _Weight2 = StructuralObject.SetValidValue(value, "Weight2");
                    ReportPropertyChanged("Weight2");
                    OnWeight2Changed();
                }
            }
        }
        private global::System.Int32 _Weight2;
        partial void OnWeight2Changing(global::System.Int32 value);
        partial void OnWeight2Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForexModel", Name="v_TradeSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class v_TradeSession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new v_TradeSession object.
        /// </summary>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        public static v_TradeSession Createv_TradeSession(global::System.String pair, global::System.Guid sessionId)
        {
            v_TradeSession v_TradeSession = new v_TradeSession();
            v_TradeSession.Pair = pair;
            v_TradeSession.SessionId = sessionId;
            return v_TradeSession;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                if (_Pair != value)
                {
                    OnPairChanging(value);
                    ReportPropertyChanging("Pair");
                    _Pair = StructuralObject.SetValidValue(value, false, "Pair");
                    ReportPropertyChanged("Pair");
                    OnPairChanged();
                }
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                if (_SessionId != value)
                {
                    OnSessionIdChanging(value);
                    ReportPropertyChanging("SessionId");
                    _SessionId = StructuralObject.SetValidValue(value, "SessionId");
                    ReportPropertyChanged("SessionId");
                    OnSessionIdChanged();
                }
            }
        }
        private global::System.Guid _SessionId;
        partial void OnSessionIdChanging(global::System.Guid value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, "TimeStamp");
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeStamp;
        partial void OnTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value, "Count");
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private Nullable<global::System.Int32> _Count;
        partial void OnCountChanging(Nullable<global::System.Int32> value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> GrossPL
        {
            get
            {
                return _GrossPL;
            }
            set
            {
                OnGrossPLChanging(value);
                ReportPropertyChanging("GrossPL");
                _GrossPL = StructuralObject.SetValidValue(value, "GrossPL");
                ReportPropertyChanged("GrossPL");
                OnGrossPLChanged();
            }
        }
        private Nullable<global::System.Double> _GrossPL;
        partial void OnGrossPLChanging(Nullable<global::System.Double> value);
        partial void OnGrossPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Days
        {
            get
            {
                return _Days;
            }
            set
            {
                OnDaysChanging(value);
                ReportPropertyChanging("Days");
                _Days = StructuralObject.SetValidValue(value, "Days");
                ReportPropertyChanged("Days");
                OnDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _Days;
        partial void OnDaysChanging(Nullable<global::System.Int32> value);
        partial void OnDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Lot
        {
            get
            {
                return _Lot;
            }
            set
            {
                OnLotChanging(value);
                ReportPropertyChanging("Lot");
                _Lot = StructuralObject.SetValidValue(value, "Lot");
                ReportPropertyChanged("Lot");
                OnLotChanged();
            }
        }
        private Nullable<global::System.Int32> _Lot;
        partial void OnLotChanging(Nullable<global::System.Int32> value);
        partial void OnLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LotA
        {
            get
            {
                return _LotA;
            }
            set
            {
                OnLotAChanging(value);
                ReportPropertyChanging("LotA");
                _LotA = StructuralObject.SetValidValue(value, "LotA");
                ReportPropertyChanged("LotA");
                OnLotAChanged();
            }
        }
        private Nullable<global::System.Double> _LotA;
        partial void OnLotAChanging(Nullable<global::System.Double> value);
        partial void OnLotAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LotSD
        {
            get
            {
                return _LotSD;
            }
            set
            {
                OnLotSDChanging(value);
                ReportPropertyChanging("LotSD");
                _LotSD = StructuralObject.SetValidValue(value, "LotSD");
                ReportPropertyChanged("LotSD");
                OnLotSDChanged();
            }
        }
        private Nullable<global::System.Double> _LotSD;
        partial void OnLotSDChanging(Nullable<global::System.Double> value);
        partial void OnLotSDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DollarsPerMonth
        {
            get
            {
                return _DollarsPerMonth;
            }
            set
            {
                OnDollarsPerMonthChanging(value);
                ReportPropertyChanging("DollarsPerMonth");
                _DollarsPerMonth = StructuralObject.SetValidValue(value, "DollarsPerMonth");
                ReportPropertyChanged("DollarsPerMonth");
                OnDollarsPerMonthChanged();
            }
        }
        private Nullable<global::System.Double> _DollarsPerMonth;
        partial void OnDollarsPerMonthChanging(Nullable<global::System.Double> value);
        partial void OnDollarsPerMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PL
        {
            get
            {
                return _PL;
            }
            set
            {
                OnPLChanging(value);
                ReportPropertyChanging("PL");
                _PL = StructuralObject.SetValidValue(value, "PL");
                ReportPropertyChanged("PL");
                OnPLChanged();
            }
        }
        private Nullable<global::System.Decimal> _PL;
        partial void OnPLChanging(Nullable<global::System.Decimal> value);
        partial void OnPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MinutesInTest
        {
            get
            {
                return _MinutesInTest;
            }
            set
            {
                OnMinutesInTestChanging(value);
                ReportPropertyChanging("MinutesInTest");
                _MinutesInTest = StructuralObject.SetValidValue(value, "MinutesInTest");
                ReportPropertyChanged("MinutesInTest");
                OnMinutesInTestChanged();
            }
        }
        private Nullable<global::System.Int32> _MinutesInTest;
        partial void OnMinutesInTestChanging(Nullable<global::System.Int32> value);
        partial void OnMinutesInTestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DaysPerMinute
        {
            get
            {
                return _DaysPerMinute;
            }
            set
            {
                OnDaysPerMinuteChanging(value);
                ReportPropertyChanging("DaysPerMinute");
                _DaysPerMinute = StructuralObject.SetValidValue(value, "DaysPerMinute");
                ReportPropertyChanged("DaysPerMinute");
                OnDaysPerMinuteChanged();
            }
        }
        private Nullable<global::System.Double> _DaysPerMinute;
        partial void OnDaysPerMinuteChanging(Nullable<global::System.Double> value);
        partial void OnDaysPerMinuteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DollarPerLot
        {
            get
            {
                return _DollarPerLot;
            }
            set
            {
                OnDollarPerLotChanging(value);
                ReportPropertyChanging("DollarPerLot");
                _DollarPerLot = StructuralObject.SetValidValue(value, "DollarPerLot");
                ReportPropertyChanged("DollarPerLot");
                OnDollarPerLotChanged();
            }
        }
        private Nullable<global::System.Double> _DollarPerLot;
        partial void OnDollarPerLotChanging(Nullable<global::System.Double> value);
        partial void OnDollarPerLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SessionInfo
        {
            get
            {
                return _SessionInfo;
            }
            set
            {
                OnSessionInfoChanging(value);
                ReportPropertyChanging("SessionInfo");
                _SessionInfo = StructuralObject.SetValidValue(value, true, "SessionInfo");
                ReportPropertyChanged("SessionInfo");
                OnSessionInfoChanged();
            }
        }
        private global::System.String _SessionInfo;
        partial void OnSessionInfoChanging(global::System.String value);
        partial void OnSessionInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PriceCmaLevels
        {
            get
            {
                return _PriceCmaLevels;
            }
            set
            {
                OnPriceCmaLevelsChanging(value);
                ReportPropertyChanging("PriceCmaLevels");
                _PriceCmaLevels = StructuralObject.SetValidValue(value, true, "PriceCmaLevels");
                ReportPropertyChanged("PriceCmaLevels");
                OnPriceCmaLevelsChanged();
            }
        }
        private global::System.String _PriceCmaLevels;
        partial void OnPriceCmaLevelsChanging(global::System.String value);
        partial void OnPriceCmaLevelsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CorridorDistanceRatio
        {
            get
            {
                return _CorridorDistanceRatio;
            }
            set
            {
                OnCorridorDistanceRatioChanging(value);
                ReportPropertyChanging("CorridorDistanceRatio");
                _CorridorDistanceRatio = StructuralObject.SetValidValue(value, "CorridorDistanceRatio");
                ReportPropertyChanged("CorridorDistanceRatio");
                OnCorridorDistanceRatioChanged();
            }
        }
        private Nullable<global::System.Double> _CorridorDistanceRatio;
        partial void OnCorridorDistanceRatioChanging(Nullable<global::System.Double> value);
        partial void OnCorridorDistanceRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PLToCorridorExitRatio
        {
            get
            {
                return _PLToCorridorExitRatio;
            }
            set
            {
                OnPLToCorridorExitRatioChanging(value);
                ReportPropertyChanging("PLToCorridorExitRatio");
                _PLToCorridorExitRatio = StructuralObject.SetValidValue(value, true, "PLToCorridorExitRatio");
                ReportPropertyChanged("PLToCorridorExitRatio");
                OnPLToCorridorExitRatioChanged();
            }
        }
        private global::System.String _PLToCorridorExitRatio;
        partial void OnPLToCorridorExitRatioChanging(global::System.String value);
        partial void OnPLToCorridorExitRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfitToLossExitRatio
        {
            get
            {
                return _ProfitToLossExitRatio;
            }
            set
            {
                OnProfitToLossExitRatioChanging(value);
                ReportPropertyChanging("ProfitToLossExitRatio");
                _ProfitToLossExitRatio = StructuralObject.SetValidValue(value, true, "ProfitToLossExitRatio");
                ReportPropertyChanged("ProfitToLossExitRatio");
                OnProfitToLossExitRatioChanged();
            }
        }
        private global::System.String _ProfitToLossExitRatio;
        partial void OnProfitToLossExitRatioChanging(global::System.String value);
        partial void OnProfitToLossExitRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarsCount
        {
            get
            {
                return _BarsCount;
            }
            set
            {
                OnBarsCountChanging(value);
                ReportPropertyChanging("BarsCount");
                _BarsCount = StructuralObject.SetValidValue(value, true, "BarsCount");
                ReportPropertyChanged("BarsCount");
                OnBarsCountChanged();
            }
        }
        private global::System.String _BarsCount;
        partial void OnBarsCountChanging(global::System.String value);
        partial void OnBarsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MinimumGross
        {
            get
            {
                return _MinimumGross;
            }
            set
            {
                OnMinimumGrossChanging(value);
                ReportPropertyChanging("MinimumGross");
                _MinimumGross = StructuralObject.SetValidValue(value, "MinimumGross");
                ReportPropertyChanged("MinimumGross");
                OnMinimumGrossChanged();
            }
        }
        private Nullable<global::System.Double> _MinimumGross;
        partial void OnMinimumGrossChanging(Nullable<global::System.Double> value);
        partial void OnMinimumGrossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value, "DateStart");
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStart;
        partial void OnDateStartChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LossToProfit
        {
            get
            {
                return _LossToProfit;
            }
            set
            {
                OnLossToProfitChanging(value);
                ReportPropertyChanging("LossToProfit");
                _LossToProfit = StructuralObject.SetValidValue(value, "LossToProfit");
                ReportPropertyChanged("LossToProfit");
                OnLossToProfitChanged();
            }
        }
        private Nullable<global::System.Double> _LossToProfit;
        partial void OnLossToProfitChanging(Nullable<global::System.Double> value);
        partial void OnLossToProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SuperSessionUid
        {
            get
            {
                return _SuperSessionUid;
            }
            set
            {
                OnSuperSessionUidChanging(value);
                ReportPropertyChanging("SuperSessionUid");
                _SuperSessionUid = StructuralObject.SetValidValue(value, "SuperSessionUid");
                ReportPropertyChanged("SuperSessionUid");
                OnSuperSessionUidChanged();
            }
        }
        private Nullable<global::System.Guid> _SuperSessionUid;
        partial void OnSuperSessionUidChanging(Nullable<global::System.Guid> value);
        partial void OnSuperSessionUidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStop
        {
            get
            {
                return _DateStop;
            }
            set
            {
                OnDateStopChanging(value);
                ReportPropertyChanging("DateStop");
                _DateStop = StructuralObject.SetValidValue(value, "DateStop");
                ReportPropertyChanged("DateStop");
                OnDateStopChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStop;
        partial void OnDateStopChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WaveStDevRatio
        {
            get
            {
                return _WaveStDevRatio;
            }
            set
            {
                OnWaveStDevRatioChanging(value);
                ReportPropertyChanging("WaveStDevRatio");
                _WaveStDevRatio = StructuralObject.SetValidValue(value, true, "WaveStDevRatio");
                ReportPropertyChanged("WaveStDevRatio");
                OnWaveStDevRatioChanged();
            }
        }
        private global::System.String _WaveStDevRatio;
        partial void OnWaveStDevRatioChanging(global::System.String value);
        partial void OnWaveStDevRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DistanceIterations
        {
            get
            {
                return _DistanceIterations;
            }
            set
            {
                OnDistanceIterationsChanging(value);
                ReportPropertyChanging("DistanceIterations");
                _DistanceIterations = StructuralObject.SetValidValue(value, true, "DistanceIterations");
                ReportPropertyChanged("DistanceIterations");
                OnDistanceIterationsChanged();
            }
        }
        private global::System.String _DistanceIterations;
        partial void OnDistanceIterationsChanging(global::System.String value);
        partial void OnDistanceIterationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CorrelationMinimum
        {
            get
            {
                return _CorrelationMinimum;
            }
            set
            {
                OnCorrelationMinimumChanging(value);
                ReportPropertyChanging("CorrelationMinimum");
                _CorrelationMinimum = StructuralObject.SetValidValue(value, true, "CorrelationMinimum");
                ReportPropertyChanged("CorrelationMinimum");
                OnCorrelationMinimumChanged();
            }
        }
        private global::System.String _CorrelationMinimum;
        partial void OnCorrelationMinimumChanging(global::System.String value);
        partial void OnCorrelationMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScanCorridorBy
        {
            get
            {
                return _ScanCorridorBy;
            }
            set
            {
                OnScanCorridorByChanging(value);
                ReportPropertyChanging("ScanCorridorBy");
                _ScanCorridorBy = StructuralObject.SetValidValue(value, true, "ScanCorridorBy");
                ReportPropertyChanged("ScanCorridorBy");
                OnScanCorridorByChanged();
            }
        }
        private global::System.String _ScanCorridorBy;
        partial void OnScanCorridorByChanging(global::System.String value);
        partial void OnScanCorridorByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Profitability
        {
            get
            {
                return _Profitability;
            }
            set
            {
                OnProfitabilityChanging(value);
                ReportPropertyChanging("Profitability");
                _Profitability = StructuralObject.SetValidValue(value, "Profitability");
                ReportPropertyChanged("Profitability");
                OnProfitabilityChanged();
            }
        }
        private Nullable<global::System.Double> _Profitability;
        partial void OnProfitabilityChanging(Nullable<global::System.Double> value);
        partial void OnProfitabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TakeProfitLimitRatio
        {
            get
            {
                return _TakeProfitLimitRatio;
            }
            set
            {
                OnTakeProfitLimitRatioChanging(value);
                ReportPropertyChanging("TakeProfitLimitRatio");
                _TakeProfitLimitRatio = StructuralObject.SetValidValue(value, true, "TakeProfitLimitRatio");
                ReportPropertyChanged("TakeProfitLimitRatio");
                OnTakeProfitLimitRatioChanged();
            }
        }
        private global::System.String _TakeProfitLimitRatio;
        partial void OnTakeProfitLimitRatioChanging(global::System.String value);
        partial void OnTakeProfitLimitRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TradingAngleRange
        {
            get
            {
                return _TradingAngleRange;
            }
            set
            {
                OnTradingAngleRangeChanging(value);
                ReportPropertyChanging("TradingAngleRange");
                _TradingAngleRange = StructuralObject.SetValidValue(value, true, "TradingAngleRange");
                ReportPropertyChanged("TradingAngleRange");
                OnTradingAngleRangeChanged();
            }
        }
        private global::System.String _TradingAngleRange;
        partial void OnTradingAngleRangeChanging(global::System.String value);
        partial void OnTradingAngleRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolyOrder
        {
            get
            {
                return _PolyOrder;
            }
            set
            {
                OnPolyOrderChanging(value);
                ReportPropertyChanging("PolyOrder");
                _PolyOrder = StructuralObject.SetValidValue(value, true, "PolyOrder");
                ReportPropertyChanged("PolyOrder");
                OnPolyOrderChanged();
            }
        }
        private global::System.String _PolyOrder;
        partial void OnPolyOrderChanging(global::System.String value);
        partial void OnPolyOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MovingAverageType
        {
            get
            {
                return _MovingAverageType;
            }
            set
            {
                OnMovingAverageTypeChanging(value);
                ReportPropertyChanging("MovingAverageType");
                _MovingAverageType = StructuralObject.SetValidValue(value, true, "MovingAverageType");
                ReportPropertyChanged("MovingAverageType");
                OnMovingAverageTypeChanged();
            }
        }
        private global::System.String _MovingAverageType;
        partial void OnMovingAverageTypeChanging(global::System.String value);
        partial void OnMovingAverageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PriceCmaLevels_
        {
            get
            {
                return _PriceCmaLevels_;
            }
            set
            {
                OnPriceCmaLevels_Changing(value);
                ReportPropertyChanging("PriceCmaLevels_");
                _PriceCmaLevels_ = StructuralObject.SetValidValue(value, true, "PriceCmaLevels_");
                ReportPropertyChanged("PriceCmaLevels_");
                OnPriceCmaLevels_Changed();
            }
        }
        private global::System.String _PriceCmaLevels_;
        partial void OnPriceCmaLevels_Changing(global::System.String value);
        partial void OnPriceCmaLevels_Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestFileName
        {
            get
            {
                return _TestFileName;
            }
            set
            {
                OnTestFileNameChanging(value);
                ReportPropertyChanging("TestFileName");
                _TestFileName = StructuralObject.SetValidValue(value, true, "TestFileName");
                ReportPropertyChanged("TestFileName");
                OnTestFileNameChanged();
            }
        }
        private global::System.String _TestFileName;
        partial void OnTestFileNameChanging(global::System.String value);
        partial void OnTestFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProfitCount
        {
            get
            {
                return _ProfitCount;
            }
            set
            {
                OnProfitCountChanging(value);
                ReportPropertyChanging("ProfitCount");
                _ProfitCount = StructuralObject.SetValidValue(value, "ProfitCount");
                ReportPropertyChanged("ProfitCount");
                OnProfitCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ProfitCount;
        partial void OnProfitCountChanging(Nullable<global::System.Int32> value);
        partial void OnProfitCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LossCount
        {
            get
            {
                return _LossCount;
            }
            set
            {
                OnLossCountChanging(value);
                ReportPropertyChanging("LossCount");
                _LossCount = StructuralObject.SetValidValue(value, "LossCount");
                ReportPropertyChanged("LossCount");
                OnLossCountChanged();
            }
        }
        private Nullable<global::System.Int32> _LossCount;
        partial void OnLossCountChanging(Nullable<global::System.Int32> value);
        partial void OnLossCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PLRatio
        {
            get
            {
                return _PLRatio;
            }
            set
            {
                OnPLRatioChanging(value);
                ReportPropertyChanging("PLRatio");
                _PLRatio = StructuralObject.SetValidValue(value, "PLRatio");
                ReportPropertyChanged("PLRatio");
                OnPLRatioChanged();
            }
        }
        private Nullable<global::System.Double> _PLRatio;
        partial void OnPLRatioChanging(Nullable<global::System.Double> value);
        partial void OnPLRatioChanged();

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ForexModel", Name="BarsByMinutes_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class BarsByMinutes_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> AskHigh
        {
            get
            {
                return _AskHigh;
            }
            set
            {
                OnAskHighChanging(value);
                ReportPropertyChanging("AskHigh");
                _AskHigh = StructuralObject.SetValidValue(value, "AskHigh");
                ReportPropertyChanged("AskHigh");
                OnAskHighChanged();
            }
        }
        private Nullable<global::System.Single> _AskHigh;
        partial void OnAskHighChanging(Nullable<global::System.Single> value);
        partial void OnAskHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> AskLow
        {
            get
            {
                return _AskLow;
            }
            set
            {
                OnAskLowChanging(value);
                ReportPropertyChanging("AskLow");
                _AskLow = StructuralObject.SetValidValue(value, "AskLow");
                ReportPropertyChanged("AskLow");
                OnAskLowChanged();
            }
        }
        private Nullable<global::System.Single> _AskLow;
        partial void OnAskLowChanging(Nullable<global::System.Single> value);
        partial void OnAskLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BidHigh
        {
            get
            {
                return _BidHigh;
            }
            set
            {
                OnBidHighChanging(value);
                ReportPropertyChanging("BidHigh");
                _BidHigh = StructuralObject.SetValidValue(value, "BidHigh");
                ReportPropertyChanged("BidHigh");
                OnBidHighChanged();
            }
        }
        private Nullable<global::System.Single> _BidHigh;
        partial void OnBidHighChanging(Nullable<global::System.Single> value);
        partial void OnBidHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BidLow
        {
            get
            {
                return _BidLow;
            }
            set
            {
                OnBidLowChanging(value);
                ReportPropertyChanging("BidLow");
                _BidLow = StructuralObject.SetValidValue(value, "BidLow");
                ReportPropertyChanged("BidLow");
                OnBidLowChanged();
            }
        }
        private Nullable<global::System.Single> _BidLow;
        partial void OnBidLowChanging(Nullable<global::System.Single> value);
        partial void OnBidLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> AskOpen
        {
            get
            {
                return _AskOpen;
            }
            set
            {
                OnAskOpenChanging(value);
                ReportPropertyChanging("AskOpen");
                _AskOpen = StructuralObject.SetValidValue(value, "AskOpen");
                ReportPropertyChanged("AskOpen");
                OnAskOpenChanged();
            }
        }
        private Nullable<global::System.Single> _AskOpen;
        partial void OnAskOpenChanging(Nullable<global::System.Single> value);
        partial void OnAskOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> AskClose
        {
            get
            {
                return _AskClose;
            }
            set
            {
                OnAskCloseChanging(value);
                ReportPropertyChanging("AskClose");
                _AskClose = StructuralObject.SetValidValue(value, "AskClose");
                ReportPropertyChanged("AskClose");
                OnAskCloseChanged();
            }
        }
        private Nullable<global::System.Single> _AskClose;
        partial void OnAskCloseChanging(Nullable<global::System.Single> value);
        partial void OnAskCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BidOpen
        {
            get
            {
                return _BidOpen;
            }
            set
            {
                OnBidOpenChanging(value);
                ReportPropertyChanging("BidOpen");
                _BidOpen = StructuralObject.SetValidValue(value, "BidOpen");
                ReportPropertyChanged("BidOpen");
                OnBidOpenChanged();
            }
        }
        private Nullable<global::System.Single> _BidOpen;
        partial void OnBidOpenChanging(Nullable<global::System.Single> value);
        partial void OnBidOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BidClose
        {
            get
            {
                return _BidClose;
            }
            set
            {
                OnBidCloseChanging(value);
                ReportPropertyChanging("BidClose");
                _BidClose = StructuralObject.SetValidValue(value, "BidClose");
                ReportPropertyChanged("BidClose");
                OnBidCloseChanged();
            }
        }
        private Nullable<global::System.Single> _BidClose;
        partial void OnBidCloseChanging(Nullable<global::System.Single> value);
        partial void OnBidCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateClose
        {
            get
            {
                return _DateClose;
            }
            set
            {
                OnDateCloseChanging(value);
                ReportPropertyChanging("DateClose");
                _DateClose = StructuralObject.SetValidValue(value, "DateClose");
                ReportPropertyChanged("DateClose");
                OnDateCloseChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateClose;
        partial void OnDateCloseChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOpen
        {
            get
            {
                return _DateOpen;
            }
            set
            {
                OnDateOpenChanging(value);
                ReportPropertyChanging("DateOpen");
                _DateOpen = StructuralObject.SetValidValue(value, "DateOpen");
                ReportPropertyChanged("DateOpen");
                OnDateOpenChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOpen;
        partial void OnDateOpenChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOpenChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ForexModel", Name="GetCorridorAverage_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetCorridorAverage_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Avg
        {
            get
            {
                return _Avg;
            }
            set
            {
                OnAvgChanging(value);
                ReportPropertyChanging("Avg");
                _Avg = StructuralObject.SetValidValue(value, "Avg");
                ReportPropertyChanged("Avg");
                OnAvgChanged();
            }
        }
        private Nullable<global::System.Double> _Avg;
        partial void OnAvgChanging(Nullable<global::System.Double> value);
        partial void OnAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> StDev
        {
            get
            {
                return _StDev;
            }
            set
            {
                OnStDevChanging(value);
                ReportPropertyChanging("StDev");
                _StDev = StructuralObject.SetValidValue(value, "StDev");
                ReportPropertyChanged("StDev");
                OnStDevChanged();
            }
        }
        private Nullable<global::System.Double> _StDev;
        partial void OnStDevChanging(Nullable<global::System.Double> value);
        partial void OnStDevChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ForexModel", Name="s_GetBarStats_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class s_GetBarStats_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StopDateMonth
        {
            get
            {
                return _StopDateMonth;
            }
            set
            {
                OnStopDateMonthChanging(value);
                ReportPropertyChanging("StopDateMonth");
                _StopDateMonth = StructuralObject.SetValidValue(value, "StopDateMonth");
                ReportPropertyChanged("StopDateMonth");
                OnStopDateMonthChanged();
            }
        }
        private Nullable<global::System.DateTime> _StopDateMonth;
        partial void OnStopDateMonthChanging(Nullable<global::System.DateTime> value);
        partial void OnStopDateMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StopDateHour
        {
            get
            {
                return _StopDateHour;
            }
            set
            {
                OnStopDateHourChanging(value);
                ReportPropertyChanging("StopDateHour");
                _StopDateHour = StructuralObject.SetValidValue(value, "StopDateHour");
                ReportPropertyChanged("StopDateHour");
                OnStopDateHourChanged();
            }
        }
        private Nullable<global::System.Int32> _StopDateHour;
        partial void OnStopDateHourChanging(Nullable<global::System.Int32> value);
        partial void OnStopDateHourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BarsHeightAvg
        {
            get
            {
                return _BarsHeightAvg;
            }
            set
            {
                OnBarsHeightAvgChanging(value);
                ReportPropertyChanging("BarsHeightAvg");
                _BarsHeightAvg = StructuralObject.SetValidValue(value, "BarsHeightAvg");
                ReportPropertyChanged("BarsHeightAvg");
                OnBarsHeightAvgChanged();
            }
        }
        private Nullable<global::System.Double> _BarsHeightAvg;
        partial void OnBarsHeightAvgChanging(Nullable<global::System.Double> value);
        partial void OnBarsHeightAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BarsHeightStd
        {
            get
            {
                return _BarsHeightStd;
            }
            set
            {
                OnBarsHeightStdChanging(value);
                ReportPropertyChanging("BarsHeightStd");
                _BarsHeightStd = StructuralObject.SetValidValue(value, "BarsHeightStd");
                ReportPropertyChanged("BarsHeightStd");
                OnBarsHeightStdChanged();
            }
        }
        private Nullable<global::System.Double> _BarsHeightStd;
        partial void OnBarsHeightStdChanging(Nullable<global::System.Double> value);
        partial void OnBarsHeightStdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BarsHeight_N
        {
            get
            {
                return _BarsHeight_N;
            }
            set
            {
                OnBarsHeight_NChanging(value);
                ReportPropertyChanging("BarsHeight_N");
                _BarsHeight_N = StructuralObject.SetValidValue(value, "BarsHeight_N");
                ReportPropertyChanged("BarsHeight_N");
                OnBarsHeight_NChanged();
            }
        }
        private Nullable<global::System.Double> _BarsHeight_N;
        partial void OnBarsHeight_NChanging(Nullable<global::System.Double> value);
        partial void OnBarsHeight_NChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Distance
        {
            get
            {
                return _Distance;
            }
            set
            {
                OnDistanceChanging(value);
                ReportPropertyChanging("Distance");
                _Distance = StructuralObject.SetValidValue(value, "Distance");
                ReportPropertyChanged("Distance");
                OnDistanceChanged();
            }
        }
        private Nullable<global::System.Double> _Distance;
        partial void OnDistanceChanging(Nullable<global::System.Double> value);
        partial void OnDistanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DistToHeightAvg
        {
            get
            {
                return _DistToHeightAvg;
            }
            set
            {
                OnDistToHeightAvgChanging(value);
                ReportPropertyChanging("DistToHeightAvg");
                _DistToHeightAvg = StructuralObject.SetValidValue(value, "DistToHeightAvg");
                ReportPropertyChanged("DistToHeightAvg");
                OnDistToHeightAvgChanged();
            }
        }
        private Nullable<global::System.Double> _DistToHeightAvg;
        partial void OnDistToHeightAvgChanging(Nullable<global::System.Double> value);
        partial void OnDistToHeightAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DistToHeightStd
        {
            get
            {
                return _DistToHeightStd;
            }
            set
            {
                OnDistToHeightStdChanging(value);
                ReportPropertyChanging("DistToHeightStd");
                _DistToHeightStd = StructuralObject.SetValidValue(value, "DistToHeightStd");
                ReportPropertyChanged("DistToHeightStd");
                OnDistToHeightStdChanged();
            }
        }
        private Nullable<global::System.Double> _DistToHeightStd;
        partial void OnDistToHeightStdChanging(Nullable<global::System.Double> value);
        partial void OnDistToHeightStdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DistToHeightVol
        {
            get
            {
                return _DistToHeightVol;
            }
            set
            {
                OnDistToHeightVolChanging(value);
                ReportPropertyChanging("DistToHeightVol");
                _DistToHeightVol = StructuralObject.SetValidValue(value, "DistToHeightVol");
                ReportPropertyChanged("DistToHeightVol");
                OnDistToHeightVolChanged();
            }
        }
        private Nullable<global::System.Double> _DistToHeightVol;
        partial void OnDistToHeightVolChanging(Nullable<global::System.Double> value);
        partial void OnDistToHeightVolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DistToHeightMax
        {
            get
            {
                return _DistToHeightMax;
            }
            set
            {
                OnDistToHeightMaxChanging(value);
                ReportPropertyChanging("DistToHeightMax");
                _DistToHeightMax = StructuralObject.SetValidValue(value, "DistToHeightMax");
                ReportPropertyChanged("DistToHeightMax");
                OnDistToHeightMaxChanged();
            }
        }
        private Nullable<global::System.Double> _DistToHeightMax;
        partial void OnDistToHeightMaxChanging(Nullable<global::System.Double> value);
        partial void OnDistToHeightMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DistToHeightMin
        {
            get
            {
                return _DistToHeightMin;
            }
            set
            {
                OnDistToHeightMinChanging(value);
                ReportPropertyChanging("DistToHeightMin");
                _DistToHeightMin = StructuralObject.SetValidValue(value, "DistToHeightMin");
                ReportPropertyChanged("DistToHeightMin");
                OnDistToHeightMinChanged();
            }
        }
        private Nullable<global::System.Double> _DistToHeightMin;
        partial void OnDistToHeightMinChanging(Nullable<global::System.Double> value);
        partial void OnDistToHeightMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HeightToStDevAvg
        {
            get
            {
                return _HeightToStDevAvg;
            }
            set
            {
                OnHeightToStDevAvgChanging(value);
                ReportPropertyChanging("HeightToStDevAvg");
                _HeightToStDevAvg = StructuralObject.SetValidValue(value, "HeightToStDevAvg");
                ReportPropertyChanged("HeightToStDevAvg");
                OnHeightToStDevAvgChanged();
            }
        }
        private Nullable<global::System.Double> _HeightToStDevAvg;
        partial void OnHeightToStDevAvgChanging(Nullable<global::System.Double> value);
        partial void OnHeightToStDevAvgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HeightToStDevStd
        {
            get
            {
                return _HeightToStDevStd;
            }
            set
            {
                OnHeightToStDevStdChanging(value);
                ReportPropertyChanging("HeightToStDevStd");
                _HeightToStDevStd = StructuralObject.SetValidValue(value, "HeightToStDevStd");
                ReportPropertyChanged("HeightToStDevStd");
                OnHeightToStDevStdChanged();
            }
        }
        private Nullable<global::System.Double> _HeightToStDevStd;
        partial void OnHeightToStDevStdChanging(Nullable<global::System.Double> value);
        partial void OnHeightToStDevStdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HeightToStDev_N
        {
            get
            {
                return _HeightToStDev_N;
            }
            set
            {
                OnHeightToStDev_NChanging(value);
                ReportPropertyChanging("HeightToStDev_N");
                _HeightToStDev_N = StructuralObject.SetValidValue(value, "HeightToStDev_N");
                ReportPropertyChanged("HeightToStDev_N");
                OnHeightToStDev_NChanged();
            }
        }
        private Nullable<global::System.Double> _HeightToStDev_N;
        partial void OnHeightToStDev_NChanging(Nullable<global::System.Double> value);
        partial void OnHeightToStDev_NChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HeightToStDev_NStd
        {
            get
            {
                return _HeightToStDev_NStd;
            }
            set
            {
                OnHeightToStDev_NStdChanging(value);
                ReportPropertyChanging("HeightToStDev_NStd");
                _HeightToStDev_NStd = StructuralObject.SetValidValue(value, "HeightToStDev_NStd");
                ReportPropertyChanged("HeightToStDev_NStd");
                OnHeightToStDev_NStdChanged();
            }
        }
        private Nullable<global::System.Double> _HeightToStDev_NStd;
        partial void OnHeightToStDev_NStdChanging(Nullable<global::System.Double> value);
        partial void OnHeightToStDev_NStdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HeightToStDevVol
        {
            get
            {
                return _HeightToStDevVol;
            }
            set
            {
                OnHeightToStDevVolChanging(value);
                ReportPropertyChanging("HeightToStDevVol");
                _HeightToStDevVol = StructuralObject.SetValidValue(value, "HeightToStDevVol");
                ReportPropertyChanged("HeightToStDevVol");
                OnHeightToStDevVolChanged();
            }
        }
        private Nullable<global::System.Double> _HeightToStDevVol;
        partial void OnHeightToStDevVolChanging(Nullable<global::System.Double> value);
        partial void OnHeightToStDevVolChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ForexModel", Name="sGetStats_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class sGetStats_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WeekDay
        {
            get
            {
                return _WeekDay;
            }
            set
            {
                OnWeekDayChanging(value);
                ReportPropertyChanging("WeekDay");
                _WeekDay = StructuralObject.SetValidValue(value, "WeekDay");
                ReportPropertyChanged("WeekDay");
                OnWeekDayChanged();
            }
        }
        private Nullable<global::System.Int32> _WeekDay;
        partial void OnWeekDayChanging(Nullable<global::System.Int32> value);
        partial void OnWeekDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DayName
        {
            get
            {
                return _DayName;
            }
            set
            {
                OnDayNameChanging(value);
                ReportPropertyChanging("DayName");
                _DayName = StructuralObject.SetValidValue(value, true, "DayName");
                ReportPropertyChanged("DayName");
                OnDayNameChanged();
            }
        }
        private global::System.String _DayName;
        partial void OnDayNameChanging(global::System.String value);
        partial void OnDayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value, "Month");
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _Month;
        partial void OnMonthChanging(Nullable<global::System.Int32> value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = StructuralObject.SetValidValue(value, "Range");
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private Nullable<global::System.Double> _Range;
        partial void OnRangeChanging(Nullable<global::System.Double> value);
        partial void OnRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> RangeMin
        {
            get
            {
                return _RangeMin;
            }
            set
            {
                OnRangeMinChanging(value);
                ReportPropertyChanging("RangeMin");
                _RangeMin = StructuralObject.SetValidValue(value, "RangeMin");
                ReportPropertyChanged("RangeMin");
                OnRangeMinChanged();
            }
        }
        private Nullable<global::System.Single> _RangeMin;
        partial void OnRangeMinChanging(Nullable<global::System.Single> value);
        partial void OnRangeMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RangeSD
        {
            get
            {
                return _RangeSD;
            }
            set
            {
                OnRangeSDChanging(value);
                ReportPropertyChanging("RangeSD");
                _RangeSD = StructuralObject.SetValidValue(value, "RangeSD");
                ReportPropertyChanged("RangeSD");
                OnRangeSDChanged();
            }
        }
        private Nullable<global::System.Double> _RangeSD;
        partial void OnRangeSDChanging(Nullable<global::System.Double> value);
        partial void OnRangeSDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value, "Count");
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private Nullable<global::System.Int32> _Count;
        partial void OnCountChanging(Nullable<global::System.Int32> value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RangeMinSD
        {
            get
            {
                return _RangeMinSD;
            }
            set
            {
                OnRangeMinSDChanging(value);
                ReportPropertyChanging("RangeMinSD");
                _RangeMinSD = StructuralObject.SetValidValue(value, "RangeMinSD");
                ReportPropertyChanged("RangeMinSD");
                OnRangeMinSDChanged();
            }
        }
        private Nullable<global::System.Double> _RangeMinSD;
        partial void OnRangeMinSDChanging(Nullable<global::System.Double> value);
        partial void OnRangeMinSDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Max
        {
            get
            {
                return _Max;
            }
            set
            {
                OnMaxChanging(value);
                ReportPropertyChanging("Max");
                _Max = StructuralObject.SetValidValue(value, "Max");
                ReportPropertyChanged("Max");
                OnMaxChanged();
            }
        }
        private Nullable<global::System.Double> _Max;
        partial void OnMaxChanging(Nullable<global::System.Double> value);
        partial void OnMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RangeForTrade
        {
            get
            {
                return _RangeForTrade;
            }
            set
            {
                OnRangeForTradeChanging(value);
                ReportPropertyChanging("RangeForTrade");
                _RangeForTrade = StructuralObject.SetValidValue(value, "RangeForTrade");
                ReportPropertyChanged("RangeForTrade");
                OnRangeForTradeChanged();
            }
        }
        private Nullable<global::System.Double> _RangeForTrade;
        partial void OnRangeForTradeChanging(Nullable<global::System.Double> value);
        partial void OnRangeForTradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDateMin
        {
            get
            {
                return _StartDateMin;
            }
            set
            {
                OnStartDateMinChanging(value);
                ReportPropertyChanging("StartDateMin");
                _StartDateMin = StructuralObject.SetValidValue(value, "StartDateMin");
                ReportPropertyChanged("StartDateMin");
                OnStartDateMinChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDateMin;
        partial void OnStartDateMinChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateMinChanged();

        #endregion

    }

    #endregion

}
