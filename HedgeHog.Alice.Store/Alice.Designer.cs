//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AliceModel", "TradingMacro_SuppRes", "TradingMacro", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HedgeHog.Alice.Store.TradingMacro), "SuppRes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HedgeHog.Alice.Store.SuppRes), true)]

#endregion

namespace HedgeHog.Alice.Store
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AliceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AliceEntities object using the connection string found in the 'AliceEntities' section of the application configuration file.
        /// </summary>
        public AliceEntities() : base("name=AliceEntities", "AliceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AliceEntities object.
        /// </summary>
        public AliceEntities(string connectionString) : base(connectionString, "AliceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AliceEntities object.
        /// </summary>
        public AliceEntities(EntityConnection connection) : base(connection, "AliceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TradingAccount> TradingAccounts
        {
            get
            {
                if ((_TradingAccounts == null))
                {
                    _TradingAccounts = base.CreateObjectSet<TradingAccount>("TradingAccounts");
                }
                return _TradingAccounts;
            }
        }
        private ObjectSet<TradingAccount> _TradingAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TradingMacro> TradingMacroes
        {
            get
            {
                if ((_TradingMacroes == null))
                {
                    _TradingMacroes = base.CreateObjectSet<TradingMacro>("TradingMacroes");
                }
                return _TradingMacroes;
            }
        }
        private ObjectSet<TradingMacro> _TradingMacroes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bar> Bars
        {
            get
            {
                if ((_Bars == null))
                {
                    _Bars = base.CreateObjectSet<Bar>("Bars");
                }
                return _Bars;
            }
        }
        private ObjectSet<Bar> _Bars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TradeHistory> TradeHistories
        {
            get
            {
                if ((_TradeHistories == null))
                {
                    _TradeHistories = base.CreateObjectSet<TradeHistory>("TradeHistories");
                }
                return _TradeHistories;
            }
        }
        private ObjectSet<TradeHistory> _TradeHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderTemplate> OrderTemplates
        {
            get
            {
                if ((_OrderTemplates == null))
                {
                    _OrderTemplates = base.CreateObjectSet<OrderTemplate>("OrderTemplates");
                }
                return _OrderTemplates;
            }
        }
        private ObjectSet<OrderTemplate> _OrderTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SuppRes> SuppRes
        {
            get
            {
                if ((_SuppRes == null))
                {
                    _SuppRes = base.CreateObjectSet<SuppRes>("SuppRes");
                }
                return _SuppRes;
            }
        }
        private ObjectSet<SuppRes> _SuppRes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TradingAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTradingAccounts(TradingAccount tradingAccount)
        {
            base.AddObject("TradingAccounts", tradingAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TradingMacroes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTradingMacroes(TradingMacro tradingMacro)
        {
            base.AddObject("TradingMacroes", tradingMacro);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBars(Bar bar)
        {
            base.AddObject("Bars", bar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TradeHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTradeHistories(TradeHistory tradeHistory)
        {
            base.AddObject("TradeHistories", tradeHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderTemplates(OrderTemplate orderTemplate)
        {
            base.AddObject("OrderTemplates", orderTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SuppRes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppRes(SuppRes suppRes)
        {
            base.AddObject("SuppRes", suppRes);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AliceModel", Name="Bar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bar object.
        /// </summary>
        /// <param name="askHigh">Initial value of the AskHigh property.</param>
        /// <param name="askLow">Initial value of the AskLow property.</param>
        /// <param name="askOpen">Initial value of the AskOpen property.</param>
        /// <param name="askClose">Initial value of the AskClose property.</param>
        /// <param name="bidHigh">Initial value of the BidHigh property.</param>
        /// <param name="bidLow">Initial value of the BidLow property.</param>
        /// <param name="bidOpen">Initial value of the BidOpen property.</param>
        /// <param name="bidClose">Initial value of the BidClose property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Bar CreateBar(global::System.Double askHigh, global::System.Double askLow, global::System.Double askOpen, global::System.Double askClose, global::System.Double bidHigh, global::System.Double bidLow, global::System.Double bidOpen, global::System.Double bidClose, global::System.Int32 id)
        {
            Bar bar = new Bar();
            bar.AskHigh = askHigh;
            bar.AskLow = askLow;
            bar.AskOpen = askOpen;
            bar.AskClose = askClose;
            bar.BidHigh = bidHigh;
            bar.BidLow = bidLow;
            bar.BidOpen = bidOpen;
            bar.BidClose = bidClose;
            bar.Id = id;
            return bar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AskHigh
        {
            get
            {
                return _AskHigh;
            }
            set
            {
                OnAskHighChanging(value);
                ReportPropertyChanging("AskHigh");
                _AskHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskHigh");
                OnAskHighChanged();
            }
        }
        private global::System.Double _AskHigh;
        partial void OnAskHighChanging(global::System.Double value);
        partial void OnAskHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AskLow
        {
            get
            {
                return _AskLow;
            }
            set
            {
                OnAskLowChanging(value);
                ReportPropertyChanging("AskLow");
                _AskLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskLow");
                OnAskLowChanged();
            }
        }
        private global::System.Double _AskLow;
        partial void OnAskLowChanging(global::System.Double value);
        partial void OnAskLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AskOpen
        {
            get
            {
                return _AskOpen;
            }
            set
            {
                OnAskOpenChanging(value);
                ReportPropertyChanging("AskOpen");
                _AskOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskOpen");
                OnAskOpenChanged();
            }
        }
        private global::System.Double _AskOpen;
        partial void OnAskOpenChanging(global::System.Double value);
        partial void OnAskOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AskClose
        {
            get
            {
                return _AskClose;
            }
            set
            {
                OnAskCloseChanging(value);
                ReportPropertyChanging("AskClose");
                _AskClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AskClose");
                OnAskCloseChanged();
            }
        }
        private global::System.Double _AskClose;
        partial void OnAskCloseChanging(global::System.Double value);
        partial void OnAskCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BidHigh
        {
            get
            {
                return _BidHigh;
            }
            set
            {
                OnBidHighChanging(value);
                ReportPropertyChanging("BidHigh");
                _BidHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidHigh");
                OnBidHighChanged();
            }
        }
        private global::System.Double _BidHigh;
        partial void OnBidHighChanging(global::System.Double value);
        partial void OnBidHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BidLow
        {
            get
            {
                return _BidLow;
            }
            set
            {
                OnBidLowChanging(value);
                ReportPropertyChanging("BidLow");
                _BidLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidLow");
                OnBidLowChanged();
            }
        }
        private global::System.Double _BidLow;
        partial void OnBidLowChanging(global::System.Double value);
        partial void OnBidLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BidOpen
        {
            get
            {
                return _BidOpen;
            }
            set
            {
                OnBidOpenChanging(value);
                ReportPropertyChanging("BidOpen");
                _BidOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidOpen");
                OnBidOpenChanged();
            }
        }
        private global::System.Double _BidOpen;
        partial void OnBidOpenChanging(global::System.Double value);
        partial void OnBidOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BidClose
        {
            get
            {
                return _BidClose;
            }
            set
            {
                OnBidCloseChanging(value);
                ReportPropertyChanging("BidClose");
                _BidClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BidClose");
                OnBidCloseChanged();
            }
        }
        private global::System.Double _BidClose;
        partial void OnBidCloseChanging(global::System.Double value);
        partial void OnBidCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AliceModel", Name="OrderTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="stop">Initial value of the Stop property.</param>
        /// <param name="limit">Initial value of the Limit property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="lot">Initial value of the Lot property.</param>
        /// <param name="stopOrderID">Initial value of the StopOrderID property.</param>
        public static OrderTemplate CreateOrderTemplate(global::System.Int32 id, global::System.Int32 stop, global::System.Int32 limit, global::System.Double price, global::System.Int32 lot, global::System.Int32 stopOrderID)
        {
            OrderTemplate orderTemplate = new OrderTemplate();
            orderTemplate.ID = id;
            orderTemplate.Stop = stop;
            orderTemplate.Limit = limit;
            orderTemplate.Price = price;
            orderTemplate.Lot = lot;
            orderTemplate.StopOrderID = stopOrderID;
            return orderTemplate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Stop
        {
            get
            {
                return _Stop;
            }
            set
            {
                OnStopChanging(value);
                ReportPropertyChanging("Stop");
                _Stop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop");
                OnStopChanged();
            }
        }
        private global::System.Int32 _Stop;
        partial void OnStopChanging(global::System.Int32 value);
        partial void OnStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Limit
        {
            get
            {
                return _Limit;
            }
            set
            {
                OnLimitChanging(value);
                ReportPropertyChanging("Limit");
                _Limit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Limit");
                OnLimitChanged();
            }
        }
        private global::System.Int32 _Limit;
        partial void OnLimitChanging(global::System.Int32 value);
        partial void OnLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Lot
        {
            get
            {
                return _Lot;
            }
            set
            {
                OnLotChanging(value);
                ReportPropertyChanging("Lot");
                _Lot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lot");
                OnLotChanged();
            }
        }
        private global::System.Int32 _Lot;
        partial void OnLotChanging(global::System.Int32 value);
        partial void OnLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StopOrderID
        {
            get
            {
                return _StopOrderID;
            }
            set
            {
                OnStopOrderIDChanging(value);
                ReportPropertyChanging("StopOrderID");
                _StopOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StopOrderID");
                OnStopOrderIDChanged();
            }
        }
        private global::System.Int32 _StopOrderID;
        partial void OnStopOrderIDChanging(global::System.Int32 value);
        partial void OnStopOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AliceModel", Name="SuppRes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SuppRes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SuppRes object.
        /// </summary>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="isSupport">Initial value of the IsSupport property.</param>
        /// <param name="tradingMacroID">Initial value of the TradingMacroID property.</param>
        /// <param name="uID">Initial value of the UID property.</param>
        /// <param name="tradesCount">Initial value of the TradesCount property.</param>
        public static SuppRes CreateSuppRes(global::System.Double rate, global::System.Boolean isSupport, global::System.Guid tradingMacroID, global::System.Guid uID, global::System.Double tradesCount)
        {
            SuppRes suppRes = new SuppRes();
            suppRes.Rate = rate;
            suppRes.IsSupport = isSupport;
            suppRes.TradingMacroID = tradingMacroID;
            suppRes.UID = uID;
            suppRes.TradesCount = tradesCount;
            return suppRes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Double _Rate;
        partial void OnRateChanging(global::System.Double value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSupport
        {
            get
            {
                return _IsSupport;
            }
            set
            {
                OnIsSupportChanging(value);
                ReportPropertyChanging("IsSupport");
                _IsSupport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSupport");
                OnIsSupportChanged();
            }
        }
        private global::System.Boolean _IsSupport;
        partial void OnIsSupportChanging(global::System.Boolean value);
        partial void OnIsSupportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TradingMacroID
        {
            get
            {
                return _TradingMacroID;
            }
            set
            {
                OnTradingMacroIDChanging(value);
                ReportPropertyChanging("TradingMacroID");
                _TradingMacroID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradingMacroID");
                OnTradingMacroIDChanged();
            }
        }
        private global::System.Guid _TradingMacroID;
        partial void OnTradingMacroIDChanging(global::System.Guid value);
        partial void OnTradingMacroIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TradesCount
        {
            get
            {
                return _TradesCount;
            }
            set
            {
                OnTradesCountChanging(value);
                ReportPropertyChanging("TradesCount");
                _TradesCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradesCount");
                OnTradesCountChanged();
            }
        }
        private global::System.Double _TradesCount;
        partial void OnTradesCountChanging(global::System.Double value);
        partial void OnTradesCountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AliceModel", "TradingMacro_SuppRes", "TradingMacro")]
        public TradingMacro TradingMacro
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TradingMacro>("AliceModel.TradingMacro_SuppRes", "TradingMacro").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TradingMacro>("AliceModel.TradingMacro_SuppRes", "TradingMacro").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TradingMacro> TradingMacroReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TradingMacro>("AliceModel.TradingMacro_SuppRes", "TradingMacro");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TradingMacro>("AliceModel.TradingMacro_SuppRes", "TradingMacro", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AliceModel", Name="TradeHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TradeHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TradeHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="buy">Initial value of the Buy property.</param>
        /// <param name="pL">Initial value of the PL property.</param>
        /// <param name="grossPL">Initial value of the GrossPL property.</param>
        /// <param name="lot">Initial value of the Lot property.</param>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="timeOpen">Initial value of the TimeOpen property.</param>
        /// <param name="timeClose">Initial value of the TimeClose property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="commission">Initial value of the Commission property.</param>
        /// <param name="isVirtual">Initial value of the IsVirtual property.</param>
        /// <param name="corridorHeightInPips">Initial value of the CorridorHeightInPips property.</param>
        /// <param name="corridorMinutesBack">Initial value of the CorridorMinutesBack property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        public static TradeHistory CreateTradeHistory(global::System.String id, global::System.Boolean buy, global::System.Single pL, global::System.Single grossPL, global::System.Int32 lot, global::System.String pair, global::System.DateTime timeOpen, global::System.DateTime timeClose, global::System.String accountId, global::System.Single commission, global::System.Boolean isVirtual, global::System.Int32 corridorHeightInPips, global::System.Int32 corridorMinutesBack, global::System.Guid sessionId)
        {
            TradeHistory tradeHistory = new TradeHistory();
            tradeHistory.Id = id;
            tradeHistory.Buy = buy;
            tradeHistory.PL = pL;
            tradeHistory.GrossPL = grossPL;
            tradeHistory.Lot = lot;
            tradeHistory.Pair = pair;
            tradeHistory.TimeOpen = timeOpen;
            tradeHistory.TimeClose = timeClose;
            tradeHistory.AccountId = accountId;
            tradeHistory.Commission = commission;
            tradeHistory.IsVirtual = isVirtual;
            tradeHistory.CorridorHeightInPips = corridorHeightInPips;
            tradeHistory.CorridorMinutesBack = corridorMinutesBack;
            tradeHistory.SessionId = sessionId;
            return tradeHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Buy
        {
            get
            {
                return _Buy;
            }
            set
            {
                OnBuyChanging(value);
                ReportPropertyChanging("Buy");
                _Buy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Buy");
                OnBuyChanged();
            }
        }
        private global::System.Boolean _Buy;
        partial void OnBuyChanging(global::System.Boolean value);
        partial void OnBuyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single PL
        {
            get
            {
                return _PL;
            }
            set
            {
                OnPLChanging(value);
                ReportPropertyChanging("PL");
                _PL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PL");
                OnPLChanged();
            }
        }
        private global::System.Single _PL;
        partial void OnPLChanging(global::System.Single value);
        partial void OnPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single GrossPL
        {
            get
            {
                return _GrossPL;
            }
            set
            {
                OnGrossPLChanging(value);
                ReportPropertyChanging("GrossPL");
                _GrossPL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossPL");
                OnGrossPLChanged();
            }
        }
        private global::System.Single _GrossPL;
        partial void OnGrossPLChanging(global::System.Single value);
        partial void OnGrossPLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Lot
        {
            get
            {
                return _Lot;
            }
            set
            {
                OnLotChanging(value);
                ReportPropertyChanging("Lot");
                _Lot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lot");
                OnLotChanged();
            }
        }
        private global::System.Int32 _Lot;
        partial void OnLotChanging(global::System.Int32 value);
        partial void OnLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeOpen
        {
            get
            {
                return _TimeOpen;
            }
            set
            {
                OnTimeOpenChanging(value);
                ReportPropertyChanging("TimeOpen");
                _TimeOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeOpen");
                OnTimeOpenChanged();
            }
        }
        private global::System.DateTime _TimeOpen;
        partial void OnTimeOpenChanging(global::System.DateTime value);
        partial void OnTimeOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeClose
        {
            get
            {
                return _TimeClose;
            }
            set
            {
                OnTimeCloseChanging(value);
                ReportPropertyChanging("TimeClose");
                _TimeClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeClose");
                OnTimeCloseChanged();
            }
        }
        private global::System.DateTime _TimeClose;
        partial void OnTimeCloseChanging(global::System.DateTime value);
        partial void OnTimeCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.String _AccountId;
        partial void OnAccountIdChanging(global::System.String value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private global::System.Single _Commission;
        partial void OnCommissionChanging(global::System.Single value);
        partial void OnCommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVirtual
        {
            get
            {
                return _IsVirtual;
            }
            set
            {
                OnIsVirtualChanging(value);
                ReportPropertyChanging("IsVirtual");
                _IsVirtual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVirtual");
                OnIsVirtualChanged();
            }
        }
        private global::System.Boolean _IsVirtual;
        partial void OnIsVirtualChanging(global::System.Boolean value);
        partial void OnIsVirtualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _TimeStamp;
        partial void OnTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorHeightInPips
        {
            get
            {
                return _CorridorHeightInPips;
            }
            set
            {
                OnCorridorHeightInPipsChanging(value);
                ReportPropertyChanging("CorridorHeightInPips");
                _CorridorHeightInPips = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorHeightInPips");
                OnCorridorHeightInPipsChanged();
            }
        }
        private global::System.Int32 _CorridorHeightInPips;
        partial void OnCorridorHeightInPipsChanging(global::System.Int32 value);
        partial void OnCorridorHeightInPipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorMinutesBack
        {
            get
            {
                return _CorridorMinutesBack;
            }
            set
            {
                OnCorridorMinutesBackChanging(value);
                ReportPropertyChanging("CorridorMinutesBack");
                _CorridorMinutesBack = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorMinutesBack");
                OnCorridorMinutesBackChanged();
            }
        }
        private global::System.Int32 _CorridorMinutesBack;
        partial void OnCorridorMinutesBackChanging(global::System.Int32 value);
        partial void OnCorridorMinutesBackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.Guid _SessionId;
        partial void OnSessionIdChanging(global::System.Guid value);
        partial void OnSessionIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AliceModel", Name="TradingAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TradingAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TradingAccount object.
        /// </summary>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isDemo">Initial value of the IsDemo property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isMaster">Initial value of the IsMaster property.</param>
        /// <param name="tradeRatio">Initial value of the TradeRatio property.</param>
        /// <param name="commission">Initial value of the Commission property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="tradingMacroName">Initial value of the TradingMacroName property.</param>
        public static TradingAccount CreateTradingAccount(global::System.String password, global::System.Boolean isDemo, global::System.Guid id, global::System.Boolean isMaster, global::System.String tradeRatio, global::System.Double commission, global::System.Boolean isActive, global::System.String tradingMacroName)
        {
            TradingAccount tradingAccount = new TradingAccount();
            tradingAccount.Password = password;
            tradingAccount.IsDemo = isDemo;
            tradingAccount.Id = id;
            tradingAccount.IsMaster = isMaster;
            tradingAccount.TradeRatio = tradeRatio;
            tradingAccount.Commission = commission;
            tradingAccount.IsActive = isActive;
            tradingAccount.TradingMacroName = tradingMacroName;
            return tradingAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MasterId
        {
            get
            {
                return _MasterId;
            }
            set
            {
                OnMasterIdChanging(value);
                ReportPropertyChanging("MasterId");
                _MasterId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MasterId");
                OnMasterIdChanged();
            }
        }
        private global::System.String _MasterId;
        partial void OnMasterIdChanging(global::System.String value);
        partial void OnMasterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDemo
        {
            get
            {
                return _IsDemo;
            }
            set
            {
                OnIsDemoChanging(value);
                ReportPropertyChanging("IsDemo");
                _IsDemo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDemo");
                OnIsDemoChanged();
            }
        }
        private global::System.Boolean _IsDemo;
        partial void OnIsDemoChanging(global::System.Boolean value);
        partial void OnIsDemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.String _AccountId;
        partial void OnAccountIdChanging(global::System.String value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMaster
        {
            get
            {
                return _IsMaster;
            }
            set
            {
                OnIsMasterChanging(value);
                ReportPropertyChanging("IsMaster");
                _IsMaster = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMaster");
                OnIsMasterChanged();
            }
        }
        private global::System.Boolean _IsMaster;
        partial void OnIsMasterChanging(global::System.Boolean value);
        partial void OnIsMasterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TradeRatio
        {
            get
            {
                return _TradeRatio;
            }
            set
            {
                OnTradeRatioChanging(value);
                ReportPropertyChanging("TradeRatio");
                _TradeRatio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TradeRatio");
                OnTradeRatioChanged();
            }
        }
        private global::System.String _TradeRatio;
        partial void OnTradeRatioChanging(global::System.String value);
        partial void OnTradeRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Commission
        {
            get
            {
                return _Commission;
            }
            set
            {
                OnCommissionChanging(value);
                ReportPropertyChanging("Commission");
                _Commission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Commission");
                OnCommissionChanged();
            }
        }
        private global::System.Double _Commission;
        partial void OnCommissionChanging(global::System.Double value);
        partial void OnCommissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TradingMacroName
        {
            get
            {
                return _TradingMacroName;
            }
            set
            {
                OnTradingMacroNameChanging(value);
                ReportPropertyChanging("TradingMacroName");
                _TradingMacroName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TradingMacroName");
                OnTradingMacroNameChanged();
            }
        }
        private global::System.String _TradingMacroName;
        partial void OnTradingMacroNameChanging(global::System.String value);
        partial void OnTradingMacroNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PipsToExit
        {
            get
            {
                return _PipsToExit;
            }
            set
            {
                OnPipsToExitChanging(value);
                ReportPropertyChanging("PipsToExit");
                _PipsToExit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PipsToExit");
                OnPipsToExitChanged();
            }
        }
        private Nullable<global::System.Double> _PipsToExit;
        partial void OnPipsToExitChanging(Nullable<global::System.Double> value);
        partial void OnPipsToExitChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AliceModel", Name="TradingMacro")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TradingMacro : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TradingMacro object.
        /// </summary>
        /// <param name="pair">Initial value of the Pair property.</param>
        /// <param name="tradingRatio">Initial value of the TradingRatio property.</param>
        /// <param name="uID">Initial value of the UID property.</param>
        /// <param name="limitBar">Initial value of the LimitBar property.</param>
        /// <param name="currentLoss">Initial value of the CurrentLoss property.</param>
        /// <param name="reverseOnProfit">Initial value of the ReverseOnProfit property.</param>
        /// <param name="freezLimit">Initial value of the FreezLimit property.</param>
        /// <param name="corridorMethod">Initial value of the CorridorMethod property.</param>
        /// <param name="freezeStop">Initial value of the FreezeStop property.</param>
        /// <param name="fibMax">Initial value of the FibMax property.</param>
        /// <param name="fibMin">Initial value of the FibMin property.</param>
        /// <param name="corridornessMin">Initial value of the CorridornessMin property.</param>
        /// <param name="corridorIterationsIn">Initial value of the CorridorIterationsIn property.</param>
        /// <param name="corridorIterationsOut">Initial value of the CorridorIterationsOut property.</param>
        /// <param name="corridorIterations">Initial value of the CorridorIterations property.</param>
        /// <param name="corridorBarMinutes">Initial value of the CorridorBarMinutes property.</param>
        /// <param name="pairIndex">Initial value of the PairIndex property.</param>
        /// <param name="tradingGroup">Initial value of the TradingGroup property.</param>
        /// <param name="maximumPositions">Initial value of the MaximumPositions property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="tradingMacroName">Initial value of the TradingMacroName property.</param>
        /// <param name="limitCorridorByBarHeight">Initial value of the LimitCorridorByBarHeight property.</param>
        /// <param name="maxLotByTakeProfitRatio">Initial value of the MaxLotByTakeProfitRatio property.</param>
        /// <param name="barPeriodsLow">Initial value of the BarPeriodsLow property.</param>
        /// <param name="barPeriodsHigh">Initial value of the BarPeriodsHigh property.</param>
        /// <param name="strictTradeClose">Initial value of the StrictTradeClose property.</param>
        /// <param name="barPeriodsLowHighRatio">Initial value of the BarPeriodsLowHighRatio property.</param>
        /// <param name="longMAPeriod">Initial value of the LongMAPeriod property.</param>
        /// <param name="corridorAverageDaysBack">Initial value of the CorridorAverageDaysBack property.</param>
        /// <param name="corridorPeriodsStart">Initial value of the CorridorPeriodsStart property.</param>
        /// <param name="corridorPeriodsLength">Initial value of the CorridorPeriodsLength property.</param>
        /// <param name="corridorRatioForRange">Initial value of the CorridorRatioForRange property.</param>
        /// <param name="corridorRatioForBreakout">Initial value of the CorridorRatioForBreakout property.</param>
        /// <param name="rangeRatioForTradeLimit">Initial value of the RangeRatioForTradeLimit property.</param>
        /// <param name="tradeByAngle">Initial value of the TradeByAngle property.</param>
        /// <param name="profitToLossExitRatio">Initial value of the ProfitToLossExitRatio property.</param>
        /// <param name="powerRowOffset">Initial value of the PowerRowOffset property.</param>
        /// <param name="rangeRatioForTradeStop">Initial value of the RangeRatioForTradeStop property.</param>
        /// <param name="reversePower">Initial value of the ReversePower property.</param>
        /// <param name="correlationTreshold">Initial value of the CorrelationTreshold property.</param>
        /// <param name="closeOnProfitOnly">Initial value of the CloseOnProfitOnly property.</param>
        /// <param name="closeOnProfit">Initial value of the CloseOnProfit property.</param>
        /// <param name="closeOnOpen">Initial value of the CloseOnOpen property.</param>
        /// <param name="streachTradingDistance">Initial value of the StreachTradingDistance property.</param>
        /// <param name="closeAllOnProfit">Initial value of the CloseAllOnProfit property.</param>
        /// <param name="reverseStrategy">Initial value of the ReverseStrategy property.</param>
        /// <param name="tradeAndAngleSynced">Initial value of the TradeAndAngleSynced property.</param>
        /// <param name="tradingAngleRange">Initial value of the TradingAngleRange property.</param>
        /// <param name="closeByMomentum">Initial value of the CloseByMomentum property.</param>
        /// <param name="tradeByRateDirection">Initial value of the TradeByRateDirection property.</param>
        /// <param name="gannAngles">Initial value of the GannAngles property.</param>
        /// <param name="isGannAnglesManual">Initial value of the IsGannAnglesManual property.</param>
        /// <param name="spreadShortToLongTreshold">Initial value of the SpreadShortToLongTreshold property.</param>
        /// <param name="suppResLevelsCount">Initial value of the SuppResLevelsCount property.</param>
        /// <param name="doStreatchRates">Initial value of the DoStreatchRates property.</param>
        /// <param name="isSuppResManual">Initial value of the IsSuppResManual property.</param>
        /// <param name="tradeOnCrossOnly">Initial value of the TradeOnCrossOnly property.</param>
        /// <param name="takeProfitFunctionInt">Initial value of the TakeProfitFunctionInt property.</param>
        /// <param name="doAdjustTimeframeByAllowedLot">Initial value of the DoAdjustTimeframeByAllowedLot property.</param>
        /// <param name="isColdOnTrades">Initial value of the IsColdOnTrades property.</param>
        /// <param name="corridorCrossesCountMinimum">Initial value of the CorridorCrossesCountMinimum property.</param>
        /// <param name="stDevToSpreadRatio">Initial value of the StDevToSpreadRatio property.</param>
        /// <param name="loadRatesSecondsWarning">Initial value of the LoadRatesSecondsWarning property.</param>
        /// <param name="corridorHighLowMethodInt">Initial value of the CorridorHighLowMethodInt property.</param>
        /// <param name="corridorStDevRatioMax">Initial value of the CorridorStDevRatioMax property.</param>
        public static TradingMacro CreateTradingMacro(global::System.String pair, global::System.Double tradingRatio, global::System.Guid uID, global::System.Int32 limitBar, global::System.Double currentLoss, global::System.Boolean reverseOnProfit, global::System.Int32 freezLimit, global::System.Int32 corridorMethod, global::System.Int32 freezeStop, global::System.String fibMax, global::System.Double fibMin, global::System.Double corridornessMin, global::System.Int32 corridorIterationsIn, global::System.Int32 corridorIterationsOut, global::System.String corridorIterations, global::System.Int32 corridorBarMinutes, global::System.Int32 pairIndex, global::System.Int32 tradingGroup, global::System.Int32 maximumPositions, global::System.Boolean isActive, global::System.String tradingMacroName, global::System.Boolean limitCorridorByBarHeight, global::System.Double maxLotByTakeProfitRatio, global::System.Int32 barPeriodsLow, global::System.Int32 barPeriodsHigh, global::System.Boolean strictTradeClose, global::System.Double barPeriodsLowHighRatio, global::System.Int32 longMAPeriod, global::System.Int32 corridorAverageDaysBack, global::System.Int32 corridorPeriodsStart, global::System.Int32 corridorPeriodsLength, global::System.Double corridorRatioForRange, global::System.Double corridorRatioForBreakout, global::System.Double rangeRatioForTradeLimit, global::System.Boolean tradeByAngle, global::System.Double profitToLossExitRatio, global::System.Int32 powerRowOffset, global::System.Double rangeRatioForTradeStop, global::System.Boolean reversePower, global::System.Double correlationTreshold, global::System.Boolean closeOnProfitOnly, global::System.Boolean closeOnProfit, global::System.Boolean closeOnOpen, global::System.Boolean streachTradingDistance, global::System.Boolean closeAllOnProfit, global::System.Boolean reverseStrategy, global::System.Boolean tradeAndAngleSynced, global::System.Double tradingAngleRange, global::System.Boolean closeByMomentum, global::System.Boolean tradeByRateDirection, global::System.String gannAngles, global::System.Boolean isGannAnglesManual, global::System.Double spreadShortToLongTreshold, global::System.Int32 suppResLevelsCount, global::System.Boolean doStreatchRates, global::System.Boolean isSuppResManual, global::System.Boolean tradeOnCrossOnly, global::System.Int32 takeProfitFunctionInt, global::System.Boolean doAdjustTimeframeByAllowedLot, global::System.Boolean isColdOnTrades, global::System.Int32 corridorCrossesCountMinimum, global::System.Double stDevToSpreadRatio, global::System.Int32 loadRatesSecondsWarning, global::System.Int32 corridorHighLowMethodInt, global::System.Double corridorStDevRatioMax)
        {
            TradingMacro tradingMacro = new TradingMacro();
            tradingMacro.Pair = pair;
            tradingMacro.TradingRatio = tradingRatio;
            tradingMacro.UID = uID;
            tradingMacro.LimitBar = limitBar;
            tradingMacro.CurrentLoss = currentLoss;
            tradingMacro.ReverseOnProfit = reverseOnProfit;
            tradingMacro.FreezLimit = freezLimit;
            tradingMacro.CorridorMethod = corridorMethod;
            tradingMacro.FreezeStop = freezeStop;
            tradingMacro.FibMax = fibMax;
            tradingMacro.FibMin = fibMin;
            tradingMacro.CorridornessMin = corridornessMin;
            tradingMacro.CorridorIterationsIn = corridorIterationsIn;
            tradingMacro.CorridorIterationsOut = corridorIterationsOut;
            tradingMacro.CorridorIterations = corridorIterations;
            tradingMacro.CorridorBarMinutes = corridorBarMinutes;
            tradingMacro.PairIndex = pairIndex;
            tradingMacro.TradingGroup = tradingGroup;
            tradingMacro.MaximumPositions = maximumPositions;
            tradingMacro.IsActive = isActive;
            tradingMacro.TradingMacroName = tradingMacroName;
            tradingMacro.LimitCorridorByBarHeight = limitCorridorByBarHeight;
            tradingMacro.MaxLotByTakeProfitRatio = maxLotByTakeProfitRatio;
            tradingMacro.BarPeriodsLow = barPeriodsLow;
            tradingMacro.BarPeriodsHigh = barPeriodsHigh;
            tradingMacro.StrictTradeClose = strictTradeClose;
            tradingMacro.BarPeriodsLowHighRatio = barPeriodsLowHighRatio;
            tradingMacro.LongMAPeriod = longMAPeriod;
            tradingMacro.CorridorAverageDaysBack = corridorAverageDaysBack;
            tradingMacro.CorridorPeriodsStart = corridorPeriodsStart;
            tradingMacro.CorridorPeriodsLength = corridorPeriodsLength;
            tradingMacro.CorridorRatioForRange = corridorRatioForRange;
            tradingMacro.CorridorRatioForBreakout = corridorRatioForBreakout;
            tradingMacro.RangeRatioForTradeLimit = rangeRatioForTradeLimit;
            tradingMacro.TradeByAngle = tradeByAngle;
            tradingMacro.ProfitToLossExitRatio = profitToLossExitRatio;
            tradingMacro.PowerRowOffset = powerRowOffset;
            tradingMacro.RangeRatioForTradeStop = rangeRatioForTradeStop;
            tradingMacro.ReversePower = reversePower;
            tradingMacro.CorrelationTreshold = correlationTreshold;
            tradingMacro.CloseOnProfitOnly = closeOnProfitOnly;
            tradingMacro.CloseOnProfit = closeOnProfit;
            tradingMacro.CloseOnOpen = closeOnOpen;
            tradingMacro.StreachTradingDistance = streachTradingDistance;
            tradingMacro.CloseAllOnProfit = closeAllOnProfit;
            tradingMacro.ReverseStrategy = reverseStrategy;
            tradingMacro.TradeAndAngleSynced = tradeAndAngleSynced;
            tradingMacro.TradingAngleRange = tradingAngleRange;
            tradingMacro.CloseByMomentum = closeByMomentum;
            tradingMacro.TradeByRateDirection = tradeByRateDirection;
            tradingMacro.GannAngles = gannAngles;
            tradingMacro.IsGannAnglesManual = isGannAnglesManual;
            tradingMacro.SpreadShortToLongTreshold = spreadShortToLongTreshold;
            tradingMacro.SuppResLevelsCount = suppResLevelsCount;
            tradingMacro.DoStreatchRates = doStreatchRates;
            tradingMacro.IsSuppResManual = isSuppResManual;
            tradingMacro.TradeOnCrossOnly = tradeOnCrossOnly;
            tradingMacro.TakeProfitFunctionInt = takeProfitFunctionInt;
            tradingMacro.DoAdjustTimeframeByAllowedLot = doAdjustTimeframeByAllowedLot;
            tradingMacro.IsColdOnTrades = isColdOnTrades;
            tradingMacro.CorridorCrossesCountMinimum = corridorCrossesCountMinimum;
            tradingMacro.StDevToSpreadRatio = stDevToSpreadRatio;
            tradingMacro.LoadRatesSecondsWarning = loadRatesSecondsWarning;
            tradingMacro.CorridorHighLowMethodInt = corridorHighLowMethodInt;
            tradingMacro.CorridorStDevRatioMax = corridorStDevRatioMax;
            return tradingMacro;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pair
        {
            get
            {
                return _Pair;
            }
            set
            {
                OnPairChanging(value);
                ReportPropertyChanging("Pair");
                _Pair = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pair");
                OnPairChanged();
            }
        }
        private global::System.String _Pair;
        partial void OnPairChanging(global::System.String value);
        partial void OnPairChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TradingRatio
        {
            get
            {
                return _TradingRatio;
            }
            set
            {
                OnTradingRatioChanging(value);
                ReportPropertyChanging("TradingRatio");
                _TradingRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradingRatio");
                OnTradingRatioChanged();
            }
        }
        private global::System.Double _TradingRatio;
        partial void OnTradingRatioChanging(global::System.Double value);
        partial void OnTradingRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UID
        {
            get
            {
                return _UID;
            }
            set
            {
                if (_UID != value)
                {
                    OnUIDChanging(value);
                    ReportPropertyChanging("UID");
                    _UID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UID");
                    OnUIDChanged();
                }
            }
        }
        private global::System.Guid _UID;
        partial void OnUIDChanging(global::System.Guid value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LimitBar
        {
            get
            {
                return _LimitBar;
            }
            set
            {
                OnLimitBarChanging(value);
                ReportPropertyChanging("LimitBar");
                _LimitBar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitBar");
                OnLimitBarChanged();
            }
        }
        private global::System.Int32 _LimitBar;
        partial void OnLimitBarChanging(global::System.Int32 value);
        partial void OnLimitBarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CurrentLoss
        {
            get
            {
                return _CurrentLoss;
            }
            set
            {
                OnCurrentLossChanging(value);
                ReportPropertyChanging("CurrentLoss");
                _CurrentLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentLoss");
                OnCurrentLossChanged();
            }
        }
        private global::System.Double _CurrentLoss;
        partial void OnCurrentLossChanging(global::System.Double value);
        partial void OnCurrentLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReverseOnProfit
        {
            get
            {
                return _ReverseOnProfit;
            }
            set
            {
                OnReverseOnProfitChanging(value);
                ReportPropertyChanging("ReverseOnProfit");
                _ReverseOnProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReverseOnProfit");
                OnReverseOnProfitChanged();
            }
        }
        private global::System.Boolean _ReverseOnProfit;
        partial void OnReverseOnProfitChanging(global::System.Boolean value);
        partial void OnReverseOnProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FreezLimit
        {
            get
            {
                return _FreezLimit;
            }
            set
            {
                OnFreezLimitChanging(value);
                ReportPropertyChanging("FreezLimit");
                _FreezLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreezLimit");
                OnFreezLimitChanged();
            }
        }
        private global::System.Int32 _FreezLimit;
        partial void OnFreezLimitChanging(global::System.Int32 value);
        partial void OnFreezLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorMethod
        {
            get
            {
                return _CorridorMethod;
            }
            set
            {
                OnCorridorMethodChanging(value);
                ReportPropertyChanging("CorridorMethod");
                _CorridorMethod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorMethod");
                OnCorridorMethodChanged();
            }
        }
        private global::System.Int32 _CorridorMethod;
        partial void OnCorridorMethodChanging(global::System.Int32 value);
        partial void OnCorridorMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FreezeStop
        {
            get
            {
                return _FreezeStop;
            }
            set
            {
                OnFreezeStopChanging(value);
                ReportPropertyChanging("FreezeStop");
                _FreezeStop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreezeStop");
                OnFreezeStopChanged();
            }
        }
        private global::System.Int32 _FreezeStop;
        partial void OnFreezeStopChanging(global::System.Int32 value);
        partial void OnFreezeStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FibMax
        {
            get
            {
                return _FibMax;
            }
            set
            {
                OnFibMaxChanging(value);
                ReportPropertyChanging("FibMax");
                _FibMax = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FibMax");
                OnFibMaxChanged();
            }
        }
        private global::System.String _FibMax;
        partial void OnFibMaxChanging(global::System.String value);
        partial void OnFibMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FibMin
        {
            get
            {
                return _FibMin;
            }
            set
            {
                OnFibMinChanging(value);
                ReportPropertyChanging("FibMin");
                _FibMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FibMin");
                OnFibMinChanged();
            }
        }
        private global::System.Double _FibMin;
        partial void OnFibMinChanging(global::System.Double value);
        partial void OnFibMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CorridornessMin
        {
            get
            {
                return _CorridornessMin;
            }
            set
            {
                OnCorridornessMinChanging(value);
                ReportPropertyChanging("CorridornessMin");
                _CorridornessMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridornessMin");
                OnCorridornessMinChanged();
            }
        }
        private global::System.Double _CorridornessMin;
        partial void OnCorridornessMinChanging(global::System.Double value);
        partial void OnCorridornessMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorIterationsIn
        {
            get
            {
                return _CorridorIterationsIn;
            }
            set
            {
                OnCorridorIterationsInChanging(value);
                ReportPropertyChanging("CorridorIterationsIn");
                _CorridorIterationsIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorIterationsIn");
                OnCorridorIterationsInChanged();
            }
        }
        private global::System.Int32 _CorridorIterationsIn;
        partial void OnCorridorIterationsInChanging(global::System.Int32 value);
        partial void OnCorridorIterationsInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorIterationsOut
        {
            get
            {
                return _CorridorIterationsOut;
            }
            set
            {
                OnCorridorIterationsOutChanging(value);
                ReportPropertyChanging("CorridorIterationsOut");
                _CorridorIterationsOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorIterationsOut");
                OnCorridorIterationsOutChanged();
            }
        }
        private global::System.Int32 _CorridorIterationsOut;
        partial void OnCorridorIterationsOutChanging(global::System.Int32 value);
        partial void OnCorridorIterationsOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CorridorIterations
        {
            get
            {
                return _CorridorIterations;
            }
            set
            {
                OnCorridorIterationsChanging(value);
                ReportPropertyChanging("CorridorIterations");
                _CorridorIterations = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CorridorIterations");
                OnCorridorIterationsChanged();
            }
        }
        private global::System.String _CorridorIterations;
        partial void OnCorridorIterationsChanging(global::System.String value);
        partial void OnCorridorIterationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorBarMinutes
        {
            get
            {
                return _CorridorBarMinutes;
            }
            set
            {
                OnCorridorBarMinutesChanging(value);
                ReportPropertyChanging("CorridorBarMinutes");
                _CorridorBarMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorBarMinutes");
                OnCorridorBarMinutesChanged();
            }
        }
        private global::System.Int32 _CorridorBarMinutes;
        partial void OnCorridorBarMinutesChanging(global::System.Int32 value);
        partial void OnCorridorBarMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PairIndex
        {
            get
            {
                return _PairIndex;
            }
            set
            {
                OnPairIndexChanging(value);
                ReportPropertyChanging("PairIndex");
                _PairIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PairIndex");
                OnPairIndexChanged();
            }
        }
        private global::System.Int32 _PairIndex;
        partial void OnPairIndexChanging(global::System.Int32 value);
        partial void OnPairIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TradingGroup
        {
            get
            {
                return _TradingGroup;
            }
            set
            {
                OnTradingGroupChanging(value);
                ReportPropertyChanging("TradingGroup");
                _TradingGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradingGroup");
                OnTradingGroupChanged();
            }
        }
        private global::System.Int32 _TradingGroup;
        partial void OnTradingGroupChanging(global::System.Int32 value);
        partial void OnTradingGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaximumPositions
        {
            get
            {
                return _MaximumPositions;
            }
            set
            {
                OnMaximumPositionsChanging(value);
                ReportPropertyChanging("MaximumPositions");
                _MaximumPositions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaximumPositions");
                OnMaximumPositionsChanged();
            }
        }
        private global::System.Int32 _MaximumPositions;
        partial void OnMaximumPositionsChanging(global::System.Int32 value);
        partial void OnMaximumPositionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TradingMacroName
        {
            get
            {
                return _TradingMacroName;
            }
            set
            {
                OnTradingMacroNameChanging(value);
                ReportPropertyChanging("TradingMacroName");
                _TradingMacroName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TradingMacroName");
                OnTradingMacroNameChanged();
            }
        }
        private global::System.String _TradingMacroName;
        partial void OnTradingMacroNameChanging(global::System.String value);
        partial void OnTradingMacroNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LimitCorridorByBarHeight
        {
            get
            {
                return _LimitCorridorByBarHeight;
            }
            set
            {
                OnLimitCorridorByBarHeightChanging(value);
                ReportPropertyChanging("LimitCorridorByBarHeight");
                _LimitCorridorByBarHeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitCorridorByBarHeight");
                OnLimitCorridorByBarHeightChanged();
            }
        }
        private global::System.Boolean _LimitCorridorByBarHeight;
        partial void OnLimitCorridorByBarHeightChanging(global::System.Boolean value);
        partial void OnLimitCorridorByBarHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MaxLotByTakeProfitRatio
        {
            get
            {
                return _MaxLotByTakeProfitRatio;
            }
            set
            {
                OnMaxLotByTakeProfitRatioChanging(value);
                ReportPropertyChanging("MaxLotByTakeProfitRatio");
                _MaxLotByTakeProfitRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxLotByTakeProfitRatio");
                OnMaxLotByTakeProfitRatioChanged();
            }
        }
        private global::System.Double _MaxLotByTakeProfitRatio;
        partial void OnMaxLotByTakeProfitRatioChanging(global::System.Double value);
        partial void OnMaxLotByTakeProfitRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BarPeriodsLow
        {
            get
            {
                return _BarPeriodsLow;
            }
            set
            {
                OnBarPeriodsLowChanging(value);
                ReportPropertyChanging("BarPeriodsLow");
                _BarPeriodsLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BarPeriodsLow");
                OnBarPeriodsLowChanged();
            }
        }
        private global::System.Int32 _BarPeriodsLow;
        partial void OnBarPeriodsLowChanging(global::System.Int32 value);
        partial void OnBarPeriodsLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BarPeriodsHigh
        {
            get
            {
                return _BarPeriodsHigh;
            }
            set
            {
                OnBarPeriodsHighChanging(value);
                ReportPropertyChanging("BarPeriodsHigh");
                _BarPeriodsHigh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BarPeriodsHigh");
                OnBarPeriodsHighChanged();
            }
        }
        private global::System.Int32 _BarPeriodsHigh;
        partial void OnBarPeriodsHighChanging(global::System.Int32 value);
        partial void OnBarPeriodsHighChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean StrictTradeClose
        {
            get
            {
                return _StrictTradeClose;
            }
            set
            {
                OnStrictTradeCloseChanging(value);
                ReportPropertyChanging("StrictTradeClose");
                _StrictTradeClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StrictTradeClose");
                OnStrictTradeCloseChanged();
            }
        }
        private global::System.Boolean _StrictTradeClose;
        partial void OnStrictTradeCloseChanging(global::System.Boolean value);
        partial void OnStrictTradeCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BarPeriodsLowHighRatio
        {
            get
            {
                return _BarPeriodsLowHighRatio;
            }
            set
            {
                OnBarPeriodsLowHighRatioChanging(value);
                ReportPropertyChanging("BarPeriodsLowHighRatio");
                _BarPeriodsLowHighRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BarPeriodsLowHighRatio");
                OnBarPeriodsLowHighRatioChanged();
            }
        }
        private global::System.Double _BarPeriodsLowHighRatio;
        partial void OnBarPeriodsLowHighRatioChanging(global::System.Double value);
        partial void OnBarPeriodsLowHighRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LongMAPeriod
        {
            get
            {
                return _LongMAPeriod;
            }
            set
            {
                OnLongMAPeriodChanging(value);
                ReportPropertyChanging("LongMAPeriod");
                _LongMAPeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LongMAPeriod");
                OnLongMAPeriodChanged();
            }
        }
        private global::System.Int32 _LongMAPeriod;
        partial void OnLongMAPeriodChanging(global::System.Int32 value);
        partial void OnLongMAPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorAverageDaysBack
        {
            get
            {
                return _CorridorAverageDaysBack;
            }
            set
            {
                OnCorridorAverageDaysBackChanging(value);
                ReportPropertyChanging("CorridorAverageDaysBack");
                _CorridorAverageDaysBack = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorAverageDaysBack");
                OnCorridorAverageDaysBackChanged();
            }
        }
        private global::System.Int32 _CorridorAverageDaysBack;
        partial void OnCorridorAverageDaysBackChanging(global::System.Int32 value);
        partial void OnCorridorAverageDaysBackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorPeriodsStart
        {
            get
            {
                return _CorridorPeriodsStart;
            }
            set
            {
                OnCorridorPeriodsStartChanging(value);
                ReportPropertyChanging("CorridorPeriodsStart");
                _CorridorPeriodsStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorPeriodsStart");
                OnCorridorPeriodsStartChanged();
            }
        }
        private global::System.Int32 _CorridorPeriodsStart;
        partial void OnCorridorPeriodsStartChanging(global::System.Int32 value);
        partial void OnCorridorPeriodsStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorPeriodsLength
        {
            get
            {
                return _CorridorPeriodsLength;
            }
            set
            {
                OnCorridorPeriodsLengthChanging(value);
                ReportPropertyChanging("CorridorPeriodsLength");
                _CorridorPeriodsLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorPeriodsLength");
                OnCorridorPeriodsLengthChanged();
            }
        }
        private global::System.Int32 _CorridorPeriodsLength;
        partial void OnCorridorPeriodsLengthChanging(global::System.Int32 value);
        partial void OnCorridorPeriodsLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CorridorStartDate
        {
            get
            {
                return _CorridorStartDate;
            }
            set
            {
                OnCorridorStartDateChanging(value);
                ReportPropertyChanging("CorridorStartDate");
                _CorridorStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorStartDate");
                OnCorridorStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CorridorStartDate;
        partial void OnCorridorStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCorridorStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CorridorRatioForRange
        {
            get
            {
                return _CorridorRatioForRange;
            }
            set
            {
                OnCorridorRatioForRangeChanging(value);
                ReportPropertyChanging("CorridorRatioForRange");
                _CorridorRatioForRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorRatioForRange");
                OnCorridorRatioForRangeChanged();
            }
        }
        private global::System.Double _CorridorRatioForRange;
        partial void OnCorridorRatioForRangeChanging(global::System.Double value);
        partial void OnCorridorRatioForRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CorridorRatioForBreakout
        {
            get
            {
                return _CorridorRatioForBreakout;
            }
            set
            {
                OnCorridorRatioForBreakoutChanging(value);
                ReportPropertyChanging("CorridorRatioForBreakout");
                _CorridorRatioForBreakout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorRatioForBreakout");
                OnCorridorRatioForBreakoutChanged();
            }
        }
        private global::System.Double _CorridorRatioForBreakout;
        partial void OnCorridorRatioForBreakoutChanging(global::System.Double value);
        partial void OnCorridorRatioForBreakoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RangeRatioForTradeLimit
        {
            get
            {
                return _RangeRatioForTradeLimit;
            }
            set
            {
                OnRangeRatioForTradeLimitChanging(value);
                ReportPropertyChanging("RangeRatioForTradeLimit");
                _RangeRatioForTradeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RangeRatioForTradeLimit");
                OnRangeRatioForTradeLimitChanged();
            }
        }
        private global::System.Double _RangeRatioForTradeLimit;
        partial void OnRangeRatioForTradeLimitChanging(global::System.Double value);
        partial void OnRangeRatioForTradeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TradeByAngle
        {
            get
            {
                return _TradeByAngle;
            }
            set
            {
                OnTradeByAngleChanging(value);
                ReportPropertyChanging("TradeByAngle");
                _TradeByAngle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeByAngle");
                OnTradeByAngleChanged();
            }
        }
        private global::System.Boolean _TradeByAngle;
        partial void OnTradeByAngleChanging(global::System.Boolean value);
        partial void OnTradeByAngleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProfitToLossExitRatio
        {
            get
            {
                return _ProfitToLossExitRatio;
            }
            set
            {
                OnProfitToLossExitRatioChanging(value);
                ReportPropertyChanging("ProfitToLossExitRatio");
                _ProfitToLossExitRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfitToLossExitRatio");
                OnProfitToLossExitRatioChanged();
            }
        }
        private global::System.Double _ProfitToLossExitRatio;
        partial void OnProfitToLossExitRatioChanging(global::System.Double value);
        partial void OnProfitToLossExitRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TradeByFirstWave
        {
            get
            {
                return _TradeByFirstWave;
            }
            set
            {
                OnTradeByFirstWaveChanging(value);
                ReportPropertyChanging("TradeByFirstWave");
                _TradeByFirstWave = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeByFirstWave");
                OnTradeByFirstWaveChanged();
            }
        }
        private Nullable<global::System.Boolean> _TradeByFirstWave;
        partial void OnTradeByFirstWaveChanging(Nullable<global::System.Boolean> value);
        partial void OnTradeByFirstWaveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PowerRowOffset
        {
            get
            {
                return _PowerRowOffset;
            }
            set
            {
                OnPowerRowOffsetChanging(value);
                ReportPropertyChanging("PowerRowOffset");
                _PowerRowOffset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PowerRowOffset");
                OnPowerRowOffsetChanged();
            }
        }
        private global::System.Int32 _PowerRowOffset;
        partial void OnPowerRowOffsetChanging(global::System.Int32 value);
        partial void OnPowerRowOffsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RangeRatioForTradeStop
        {
            get
            {
                return _RangeRatioForTradeStop;
            }
            set
            {
                OnRangeRatioForTradeStopChanging(value);
                ReportPropertyChanging("RangeRatioForTradeStop");
                _RangeRatioForTradeStop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RangeRatioForTradeStop");
                OnRangeRatioForTradeStopChanged();
            }
        }
        private global::System.Double _RangeRatioForTradeStop;
        partial void OnRangeRatioForTradeStopChanging(global::System.Double value);
        partial void OnRangeRatioForTradeStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReversePower
        {
            get
            {
                return _ReversePower;
            }
            set
            {
                OnReversePowerChanging(value);
                ReportPropertyChanging("ReversePower");
                _ReversePower = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReversePower");
                OnReversePowerChanged();
            }
        }
        private global::System.Boolean _ReversePower;
        partial void OnReversePowerChanging(global::System.Boolean value);
        partial void OnReversePowerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CorrelationTreshold
        {
            get
            {
                return _CorrelationTreshold;
            }
            set
            {
                OnCorrelationTresholdChanging(value);
                ReportPropertyChanging("CorrelationTreshold");
                _CorrelationTreshold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorrelationTreshold");
                OnCorrelationTresholdChanged();
            }
        }
        private global::System.Double _CorrelationTreshold;
        partial void OnCorrelationTresholdChanging(global::System.Double value);
        partial void OnCorrelationTresholdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CloseOnProfitOnly
        {
            get
            {
                return _CloseOnProfitOnly;
            }
            set
            {
                OnCloseOnProfitOnlyChanging(value);
                ReportPropertyChanging("CloseOnProfitOnly");
                _CloseOnProfitOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseOnProfitOnly");
                OnCloseOnProfitOnlyChanged();
            }
        }
        private global::System.Boolean _CloseOnProfitOnly;
        partial void OnCloseOnProfitOnlyChanging(global::System.Boolean value);
        partial void OnCloseOnProfitOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CloseOnProfit
        {
            get
            {
                return _CloseOnProfit;
            }
            set
            {
                OnCloseOnProfitChanging(value);
                ReportPropertyChanging("CloseOnProfit");
                _CloseOnProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseOnProfit");
                OnCloseOnProfitChanged();
            }
        }
        private global::System.Boolean _CloseOnProfit;
        partial void OnCloseOnProfitChanging(global::System.Boolean value);
        partial void OnCloseOnProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CloseOnOpen
        {
            get
            {
                return _CloseOnOpen;
            }
            set
            {
                OnCloseOnOpenChanging(value);
                ReportPropertyChanging("CloseOnOpen");
                _CloseOnOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseOnOpen");
                OnCloseOnOpenChanged();
            }
        }
        private global::System.Boolean _CloseOnOpen;
        partial void OnCloseOnOpenChanging(global::System.Boolean value);
        partial void OnCloseOnOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean StreachTradingDistance
        {
            get
            {
                return _StreachTradingDistance;
            }
            set
            {
                OnStreachTradingDistanceChanging(value);
                ReportPropertyChanging("StreachTradingDistance");
                _StreachTradingDistance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StreachTradingDistance");
                OnStreachTradingDistanceChanged();
            }
        }
        private global::System.Boolean _StreachTradingDistance;
        partial void OnStreachTradingDistanceChanging(global::System.Boolean value);
        partial void OnStreachTradingDistanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CloseAllOnProfit
        {
            get
            {
                return _CloseAllOnProfit;
            }
            set
            {
                OnCloseAllOnProfitChanging(value);
                ReportPropertyChanging("CloseAllOnProfit");
                _CloseAllOnProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseAllOnProfit");
                OnCloseAllOnProfitChanged();
            }
        }
        private global::System.Boolean _CloseAllOnProfit;
        partial void OnCloseAllOnProfitChanging(global::System.Boolean value);
        partial void OnCloseAllOnProfitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReverseStrategy
        {
            get
            {
                return _ReverseStrategy;
            }
            set
            {
                OnReverseStrategyChanging(value);
                ReportPropertyChanging("ReverseStrategy");
                _ReverseStrategy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReverseStrategy");
                OnReverseStrategyChanged();
            }
        }
        private global::System.Boolean _ReverseStrategy;
        partial void OnReverseStrategyChanging(global::System.Boolean value);
        partial void OnReverseStrategyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TradeAndAngleSynced
        {
            get
            {
                return _TradeAndAngleSynced;
            }
            set
            {
                OnTradeAndAngleSyncedChanging(value);
                ReportPropertyChanging("TradeAndAngleSynced");
                _TradeAndAngleSynced = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeAndAngleSynced");
                OnTradeAndAngleSyncedChanged();
            }
        }
        private global::System.Boolean _TradeAndAngleSynced;
        partial void OnTradeAndAngleSyncedChanging(global::System.Boolean value);
        partial void OnTradeAndAngleSyncedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TradingAngleRange
        {
            get
            {
                return _TradingAngleRange;
            }
            set
            {
                OnTradingAngleRangeChanging(value);
                ReportPropertyChanging("TradingAngleRange");
                _TradingAngleRange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradingAngleRange");
                OnTradingAngleRangeChanged();
            }
        }
        private global::System.Double _TradingAngleRange;
        partial void OnTradingAngleRangeChanging(global::System.Double value);
        partial void OnTradingAngleRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CloseByMomentum
        {
            get
            {
                return _CloseByMomentum;
            }
            set
            {
                OnCloseByMomentumChanging(value);
                ReportPropertyChanging("CloseByMomentum");
                _CloseByMomentum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseByMomentum");
                OnCloseByMomentumChanged();
            }
        }
        private global::System.Boolean _CloseByMomentum;
        partial void OnCloseByMomentumChanging(global::System.Boolean value);
        partial void OnCloseByMomentumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TradeByRateDirection
        {
            get
            {
                return _TradeByRateDirection;
            }
            set
            {
                OnTradeByRateDirectionChanging(value);
                ReportPropertyChanging("TradeByRateDirection");
                _TradeByRateDirection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeByRateDirection");
                OnTradeByRateDirectionChanged();
            }
        }
        private global::System.Boolean _TradeByRateDirection;
        partial void OnTradeByRateDirectionChanging(global::System.Boolean value);
        partial void OnTradeByRateDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SupportDate
        {
            get
            {
                return _SupportDate;
            }
            set
            {
                OnSupportDateChanging(value);
                ReportPropertyChanging("SupportDate");
                _SupportDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupportDate");
                OnSupportDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SupportDate;
        partial void OnSupportDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSupportDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResistanceDate
        {
            get
            {
                return _ResistanceDate;
            }
            set
            {
                OnResistanceDateChanging(value);
                ReportPropertyChanging("ResistanceDate");
                _ResistanceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResistanceDate");
                OnResistanceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResistanceDate;
        partial void OnResistanceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnResistanceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> GannAnglesOffset
        {
            get
            {
                return _GannAnglesOffset;
            }
            set
            {
                OnGannAnglesOffsetChanging(value);
                ReportPropertyChanging("GannAnglesOffset");
                _GannAnglesOffset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GannAnglesOffset");
                OnGannAnglesOffsetChanged();
            }
        }
        private Nullable<global::System.Double> _GannAnglesOffset;
        partial void OnGannAnglesOffsetChanging(Nullable<global::System.Double> value);
        partial void OnGannAnglesOffsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GannAngles
        {
            get
            {
                return _GannAngles;
            }
            set
            {
                OnGannAnglesChanging(value);
                ReportPropertyChanging("GannAngles");
                _GannAngles = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GannAngles");
                OnGannAnglesChanged();
            }
        }
        private global::System.String _GannAngles;
        partial void OnGannAnglesChanging(global::System.String value);
        partial void OnGannAnglesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGannAnglesManual
        {
            get
            {
                return _IsGannAnglesManual;
            }
            set
            {
                OnIsGannAnglesManualChanging(value);
                ReportPropertyChanging("IsGannAnglesManual");
                _IsGannAnglesManual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGannAnglesManual");
                OnIsGannAnglesManualChanged();
            }
        }
        private global::System.Boolean _IsGannAnglesManual;
        partial void OnIsGannAnglesManualChanging(global::System.Boolean value);
        partial void OnIsGannAnglesManualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GannAnglesAnchorDate
        {
            get
            {
                return _GannAnglesAnchorDate;
            }
            set
            {
                OnGannAnglesAnchorDateChanging(value);
                ReportPropertyChanging("GannAnglesAnchorDate");
                _GannAnglesAnchorDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GannAnglesAnchorDate");
                OnGannAnglesAnchorDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _GannAnglesAnchorDate;
        partial void OnGannAnglesAnchorDateChanging(Nullable<global::System.DateTime> value);
        partial void OnGannAnglesAnchorDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SpreadShortToLongTreshold
        {
            get
            {
                return _SpreadShortToLongTreshold;
            }
            set
            {
                OnSpreadShortToLongTresholdChanging(value);
                ReportPropertyChanging("SpreadShortToLongTreshold");
                _SpreadShortToLongTreshold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpreadShortToLongTreshold");
                OnSpreadShortToLongTresholdChanged();
            }
        }
        private global::System.Double _SpreadShortToLongTreshold;
        partial void OnSpreadShortToLongTresholdChanging(global::System.Double value);
        partial void OnSpreadShortToLongTresholdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SupportPriceStore
        {
            get
            {
                return _SupportPriceStore;
            }
            set
            {
                OnSupportPriceStoreChanging(value);
                ReportPropertyChanging("SupportPriceStore");
                _SupportPriceStore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupportPriceStore");
                OnSupportPriceStoreChanged();
            }
        }
        private Nullable<global::System.Double> _SupportPriceStore;
        partial void OnSupportPriceStoreChanging(Nullable<global::System.Double> value);
        partial void OnSupportPriceStoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ResistancePriceStore
        {
            get
            {
                return _ResistancePriceStore;
            }
            set
            {
                OnResistancePriceStoreChanging(value);
                ReportPropertyChanging("ResistancePriceStore");
                _ResistancePriceStore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResistancePriceStore");
                OnResistancePriceStoreChanged();
            }
        }
        private Nullable<global::System.Double> _ResistancePriceStore;
        partial void OnResistancePriceStoreChanging(Nullable<global::System.Double> value);
        partial void OnResistancePriceStoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SuppResLevelsCount
        {
            get
            {
                return _SuppResLevelsCount;
            }
            set
            {
                OnSuppResLevelsCountChanging(value);
                ReportPropertyChanging("SuppResLevelsCount");
                _SuppResLevelsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SuppResLevelsCount");
                OnSuppResLevelsCountChanged();
            }
        }
        private global::System.Int32 _SuppResLevelsCount;
        partial void OnSuppResLevelsCountChanging(global::System.Int32 value);
        partial void OnSuppResLevelsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DoStreatchRates
        {
            get
            {
                return _DoStreatchRates;
            }
            set
            {
                OnDoStreatchRatesChanging(value);
                ReportPropertyChanging("DoStreatchRates");
                _DoStreatchRates = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoStreatchRates");
                OnDoStreatchRatesChanged();
            }
        }
        private global::System.Boolean _DoStreatchRates;
        partial void OnDoStreatchRatesChanging(global::System.Boolean value);
        partial void OnDoStreatchRatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSuppResManual
        {
            get
            {
                return _IsSuppResManual;
            }
            set
            {
                OnIsSuppResManualChanging(value);
                ReportPropertyChanging("IsSuppResManual");
                _IsSuppResManual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSuppResManual");
                OnIsSuppResManualChanged();
            }
        }
        private global::System.Boolean _IsSuppResManual;
        partial void OnIsSuppResManualChanging(global::System.Boolean value);
        partial void OnIsSuppResManualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TradeOnCrossOnly
        {
            get
            {
                return _TradeOnCrossOnly;
            }
            set
            {
                OnTradeOnCrossOnlyChanging(value);
                ReportPropertyChanging("TradeOnCrossOnly");
                _TradeOnCrossOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeOnCrossOnly");
                OnTradeOnCrossOnlyChanged();
            }
        }
        private global::System.Boolean _TradeOnCrossOnly;
        partial void OnTradeOnCrossOnlyChanging(global::System.Boolean value);
        partial void OnTradeOnCrossOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TakeProfitFunctionInt
        {
            get
            {
                return _TakeProfitFunctionInt;
            }
            set
            {
                OnTakeProfitFunctionIntChanging(value);
                ReportPropertyChanging("TakeProfitFunctionInt");
                _TakeProfitFunctionInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TakeProfitFunctionInt");
                OnTakeProfitFunctionIntChanged();
            }
        }
        private global::System.Int32 _TakeProfitFunctionInt;
        partial void OnTakeProfitFunctionIntChanging(global::System.Int32 value);
        partial void OnTakeProfitFunctionIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DoAdjustTimeframeByAllowedLot
        {
            get
            {
                return _DoAdjustTimeframeByAllowedLot;
            }
            set
            {
                OnDoAdjustTimeframeByAllowedLotChanging(value);
                ReportPropertyChanging("DoAdjustTimeframeByAllowedLot");
                _DoAdjustTimeframeByAllowedLot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoAdjustTimeframeByAllowedLot");
                OnDoAdjustTimeframeByAllowedLotChanged();
            }
        }
        private global::System.Boolean _DoAdjustTimeframeByAllowedLot;
        partial void OnDoAdjustTimeframeByAllowedLotChanging(global::System.Boolean value);
        partial void OnDoAdjustTimeframeByAllowedLotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsColdOnTrades
        {
            get
            {
                return _IsColdOnTrades;
            }
            set
            {
                OnIsColdOnTradesChanging(value);
                ReportPropertyChanging("IsColdOnTrades");
                _IsColdOnTrades = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsColdOnTrades");
                OnIsColdOnTradesChanged();
            }
        }
        private global::System.Boolean _IsColdOnTrades;
        partial void OnIsColdOnTradesChanging(global::System.Boolean value);
        partial void OnIsColdOnTradesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorCrossesCountMinimum
        {
            get
            {
                return _CorridorCrossesCountMinimum;
            }
            set
            {
                OnCorridorCrossesCountMinimumChanging(value);
                ReportPropertyChanging("CorridorCrossesCountMinimum");
                _CorridorCrossesCountMinimum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorCrossesCountMinimum");
                OnCorridorCrossesCountMinimumChanged();
            }
        }
        private global::System.Int32 _CorridorCrossesCountMinimum;
        partial void OnCorridorCrossesCountMinimumChanging(global::System.Int32 value);
        partial void OnCorridorCrossesCountMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StDevToSpreadRatio
        {
            get
            {
                return _StDevToSpreadRatio;
            }
            set
            {
                OnStDevToSpreadRatioChanging(value);
                ReportPropertyChanging("StDevToSpreadRatio");
                _StDevToSpreadRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StDevToSpreadRatio");
                OnStDevToSpreadRatioChanged();
            }
        }
        private global::System.Double _StDevToSpreadRatio;
        partial void OnStDevToSpreadRatioChanging(global::System.Double value);
        partial void OnStDevToSpreadRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoadRatesSecondsWarning
        {
            get
            {
                return _LoadRatesSecondsWarning;
            }
            set
            {
                OnLoadRatesSecondsWarningChanging(value);
                ReportPropertyChanging("LoadRatesSecondsWarning");
                _LoadRatesSecondsWarning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadRatesSecondsWarning");
                OnLoadRatesSecondsWarningChanged();
            }
        }
        private global::System.Int32 _LoadRatesSecondsWarning;
        partial void OnLoadRatesSecondsWarningChanging(global::System.Int32 value);
        partial void OnLoadRatesSecondsWarningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorridorHighLowMethodInt
        {
            get
            {
                return _CorridorHighLowMethodInt;
            }
            set
            {
                OnCorridorHighLowMethodIntChanging(value);
                ReportPropertyChanging("CorridorHighLowMethodInt");
                _CorridorHighLowMethodInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorHighLowMethodInt");
                OnCorridorHighLowMethodIntChanged();
            }
        }
        private global::System.Int32 _CorridorHighLowMethodInt;
        partial void OnCorridorHighLowMethodIntChanging(global::System.Int32 value);
        partial void OnCorridorHighLowMethodIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CorridorStDevRatioMax
        {
            get
            {
                return _CorridorStDevRatioMax;
            }
            set
            {
                OnCorridorStDevRatioMaxChanging(value);
                ReportPropertyChanging("CorridorStDevRatioMax");
                _CorridorStDevRatioMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorridorStDevRatioMax");
                OnCorridorStDevRatioMaxChanged();
            }
        }
        private global::System.Double _CorridorStDevRatioMax;
        partial void OnCorridorStDevRatioMaxChanging(global::System.Double value);
        partial void OnCorridorStDevRatioMaxChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AliceModel", "TradingMacro_SuppRes", "SuppRes")]
        public EntityCollection<SuppRes> SuppRes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SuppRes>("AliceModel.TradingMacro_SuppRes", "SuppRes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SuppRes>("AliceModel.TradingMacro_SuppRes", "SuppRes", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
